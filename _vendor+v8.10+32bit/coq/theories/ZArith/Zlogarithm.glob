DIGEST ffd022c284bd83df08fceaf0c5437cd5
FCoq.ZArith.Zlogarithm
R1494:1504 Coq.ZArith.ZArith_base <> <> lib
R1506:1510 Coq.omega.Omega <> <> lib
R1512:1523 Coq.ZArith.Zcomplements <> <> lib
R1525:1530 Coq.ZArith.Zpower <> <> lib
sec 1568:1574 <> Log_pos
def 1669:1675 <> log_inf
R1680:1687 Coq.Numbers.BinNums <> positive ind
R1692:1692 Coq.Numbers.BinNums <> Z ind
R1707:1707 Coq.ZArith.Zlogarithm <> p var
R1722:1723 Coq.Numbers.BinNums <> xH constr
R1746:1747 Coq.Numbers.BinNums <> xO constr
R1754:1759 Coq.ZArith.BinInt Z succ def
R1762:1768 Coq.ZArith.Zlogarithm <> log_inf def
R1796:1797 Coq.Numbers.BinNums <> xI constr
R1804:1809 Coq.ZArith.BinInt Z succ def
R1812:1818 Coq.ZArith.Zlogarithm <> log_inf def
def 1861:1867 <> log_sup
R1872:1879 Coq.Numbers.BinNums <> positive ind
R1884:1884 Coq.Numbers.BinNums <> Z ind
R1899:1899 Coq.ZArith.Zlogarithm <> p var
R1914:1915 Coq.Numbers.BinNums <> xH constr
R1938:1939 Coq.Numbers.BinNums <> xO constr
R1946:1951 Coq.ZArith.BinInt Z succ def
R1954:1960 Coq.ZArith.Zlogarithm <> log_sup def
R1982:1983 Coq.Numbers.BinNums <> xI constr
R1990:1995 Coq.ZArith.BinInt Z succ def
R1998:2003 Coq.ZArith.BinInt Z succ def
R2006:2012 Coq.ZArith.Zlogarithm <> log_inf def
R2052:2058 Coq.ZArith.Zlogarithm <> log_inf def
R2060:2066 Coq.ZArith.Zlogarithm <> log_sup def
prf 2085:2097 <> Psize_log_inf
R2128:2130 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2111:2114 Coq.Numbers.BinNums <> Zpos constr
R2117:2124 Coq.PArith.BinPos Pos size def
R2126:2126 Coq.ZArith.Zlogarithm <> p var
R2131:2136 Coq.ZArith.BinInt Z succ def
R2139:2145 Coq.ZArith.Zlogarithm <> log_inf def
R2147:2147 Coq.ZArith.Zlogarithm <> p var
R2196:2209 Coq.ZArith.BinInt Pos2Z inj_succ thm
R2196:2209 Coq.ZArith.BinInt Pos2Z inj_succ thm
R2196:2209 Coq.ZArith.BinInt Pos2Z inj_succ thm
R2196:2209 Coq.ZArith.BinInt Pos2Z inj_succ thm
R2196:2209 Coq.ZArith.BinInt Pos2Z inj_succ thm
R2196:2209 Coq.ZArith.BinInt Pos2Z inj_succ thm
R2196:2209 Coq.ZArith.BinInt Pos2Z inj_succ thm
R2196:2209 Coq.ZArith.BinInt Pos2Z inj_succ thm
R2196:2209 Coq.ZArith.BinInt Pos2Z inj_succ thm
prf 2234:2246 <> Zlog2_log_inf
R2275:2277 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2260:2265 Coq.ZArith.BinInt Z log2 def
R2268:2271 Coq.Numbers.BinNums <> Zpos constr
R2273:2273 Coq.ZArith.Zlogarithm <> p var
R2278:2284 Coq.ZArith.Zlogarithm <> log_inf def
R2286:2286 Coq.ZArith.Zlogarithm <> p var
R2308:2313 Coq.ZArith.BinInt Z log2 def
R2350:2362 Coq.ZArith.Zlogarithm <> Psize_log_inf thm
R2350:2362 Coq.ZArith.Zlogarithm <> Psize_log_inf thm
R2350:2362 Coq.ZArith.Zlogarithm <> Psize_log_inf thm
prf 2381:2396 <> Zlog2_up_log_sup
R2428:2430 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2410:2418 Coq.ZArith.BinInt Z log2_up def
R2421:2424 Coq.Numbers.BinNums <> Zpos constr
R2426:2426 Coq.ZArith.Zlogarithm <> p var
R2431:2437 Coq.ZArith.Zlogarithm <> log_sup def
R2439:2439 Coq.ZArith.Zlogarithm <> p var
R2495:2498 Coq.Numbers.BinNums <> Zpos constr
R2501:2502 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R2521:2521 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R2512:2513 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R2520:2520 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R2514:2517 Coq.Numbers.BinNums <> Zpos constr
R2495:2498 Coq.Numbers.BinNums <> Zpos constr
R2501:2502 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R2521:2521 Coq.ZArith.BinInt <> ::Z_scope:x_'+'_x not
R2512:2513 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R2520:2520 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R2514:2517 Coq.Numbers.BinNums <> Zpos constr
R2539:2559 Coq.ZArith.BinInt Z log2_up_succ_double thm
R2562:2574 Coq.ZArith.Zlogarithm <> Zlog2_log_inf thm
R2539:2559 Coq.ZArith.BinInt Z log2_up_succ_double thm
R2539:2559 Coq.ZArith.BinInt Z log2_up_succ_double thm
R2539:2559 Coq.ZArith.BinInt Z log2_up_succ_double thm
R2562:2574 Coq.ZArith.Zlogarithm <> Zlog2_log_inf thm
R2562:2574 Coq.ZArith.Zlogarithm <> Zlog2_log_inf thm
R2599:2604 Coq.ZArith.BinInt Z succ def
R2621:2630 Coq.ZArith.BinInt Z add_comm thm
R2638:2648 Coq.ZArith.BinInt Z add_assoc thm
R2621:2630 Coq.ZArith.BinInt Z add_comm thm
R2621:2630 Coq.ZArith.BinInt Z add_comm thm
R2621:2630 Coq.ZArith.BinInt Z add_comm thm
R2621:2630 Coq.ZArith.BinInt Z add_comm thm
R2638:2648 Coq.ZArith.BinInt Z add_assoc thm
R2638:2648 Coq.ZArith.BinInt Z add_assoc thm
R2664:2667 Coq.Numbers.BinNums <> Zpos constr
R2670:2671 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R2681:2681 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R2682:2685 Coq.Numbers.BinNums <> Zpos constr
R2664:2667 Coq.Numbers.BinNums <> Zpos constr
R2670:2671 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R2681:2681 Coq.ZArith.BinInt <> ::Z_scope:x_'*'_x not
R2682:2685 Coq.Numbers.BinNums <> Zpos constr
R2708:2723 Coq.ZArith.BinInt Z log2_up_double thm
R2708:2723 Coq.ZArith.BinInt Z log2_up_double thm
R2708:2723 Coq.ZArith.BinInt Z log2_up_double thm
R2708:2723 Coq.ZArith.BinInt Z log2_up_double thm
prf 2901:2915 <> log_inf_correct
R2932:2939 Coq.Numbers.BinNums <> positive ind
R2962:2965 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R2949:2952 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R2953:2959 Coq.ZArith.Zlogarithm <> log_inf def
R2961:2961 Coq.ZArith.Zlogarithm <> x var
R2983:2986 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R2993:2995 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x_'<'_x not
R2966:2970 Coq.ZArith.Zpower <> two_p def
R2973:2979 Coq.ZArith.Zlogarithm <> log_inf def
R2981:2981 Coq.ZArith.Zlogarithm <> x var
R2987:2990 Coq.Numbers.BinNums <> Zpos constr
R2992:2992 Coq.ZArith.Zlogarithm <> x var
R2987:2990 Coq.Numbers.BinNums <> Zpos constr
R2992:2992 Coq.ZArith.Zlogarithm <> x var
R2996:3000 Coq.ZArith.Zpower <> two_p def
R3003:3008 Coq.ZArith.BinInt Z succ def
R3011:3017 Coq.ZArith.Zlogarithm <> log_inf def
R3019:3019 Coq.ZArith.Zlogarithm <> x var
R3200:3213 Coq.ZArith.BinInt Z le_le_succ_r thm
R3170:3175 Coq.ZArith.BinInt Z succ def
R3178:3184 Coq.ZArith.Zlogarithm <> log_inf def
R3151:3157 Coq.ZArith.Zpower <> two_p_S thm
R3239:3245 Coq.ZArith.Zpower <> two_p_S thm
R3272:3278 Coq.ZArith.Zpower <> two_p_S thm
R3307:3325 Coq.ZArith.BinInt Pos2Z inj_xI thm
R3468:3481 Coq.ZArith.BinInt Z le_le_succ_r thm
R3438:3443 Coq.ZArith.BinInt Z succ def
R3446:3452 Coq.ZArith.Zlogarithm <> log_inf def
R3419:3425 Coq.ZArith.Zpower <> two_p_S thm
R3509:3515 Coq.ZArith.Zpower <> two_p_S thm
R3544:3550 Coq.ZArith.Zpower <> two_p_S thm
R3579:3597 Coq.ZArith.BinInt Pos2Z inj_xO thm
R3625:3637 Coq.ZArith.Zpower <> two_power_pos def
R3647:3655 Coq.ZArith.Zpower <> shift_pos def
R3170:3175 Coq.ZArith.BinInt Z succ def
R3178:3184 Coq.ZArith.Zlogarithm <> log_inf def
R3151:3157 Coq.ZArith.Zpower <> two_p_S thm
R3200:3213 Coq.ZArith.BinInt Z le_le_succ_r thm
R3170:3175 Coq.ZArith.BinInt Z succ def
R3178:3184 Coq.ZArith.Zlogarithm <> log_inf def
R3151:3157 Coq.ZArith.Zpower <> two_p_S thm
R3239:3245 Coq.ZArith.Zpower <> two_p_S thm
R3239:3245 Coq.ZArith.Zpower <> two_p_S thm
R3272:3278 Coq.ZArith.Zpower <> two_p_S thm
R3272:3278 Coq.ZArith.Zpower <> two_p_S thm
R3307:3325 Coq.ZArith.BinInt Pos2Z inj_xI thm
R3307:3325 Coq.ZArith.BinInt Pos2Z inj_xI thm
R3438:3443 Coq.ZArith.BinInt Z succ def
R3446:3452 Coq.ZArith.Zlogarithm <> log_inf def
R3419:3425 Coq.ZArith.Zpower <> two_p_S thm
R3468:3481 Coq.ZArith.BinInt Z le_le_succ_r thm
R3438:3443 Coq.ZArith.BinInt Z succ def
R3446:3452 Coq.ZArith.Zlogarithm <> log_inf def
R3419:3425 Coq.ZArith.Zpower <> two_p_S thm
R3509:3515 Coq.ZArith.Zpower <> two_p_S thm
R3509:3515 Coq.ZArith.Zpower <> two_p_S thm
R3544:3550 Coq.ZArith.Zpower <> two_p_S thm
R3544:3550 Coq.ZArith.Zpower <> two_p_S thm
R3579:3597 Coq.ZArith.BinInt Pos2Z inj_xO thm
R3579:3597 Coq.ZArith.BinInt Pos2Z inj_xO thm
def 3698:3713 <> log_inf_correct1
R3718:3725 Coq.Numbers.BinNums <> positive ind
R3731:3735 Coq.Init.Logic <> proj1 thm
R3738:3752 Coq.ZArith.Zlogarithm <> log_inf_correct thm
R3754:3754 Coq.ZArith.Zlogarithm <> p var
def 3771:3786 <> log_inf_correct2
R3791:3798 Coq.Numbers.BinNums <> positive ind
R3804:3808 Coq.Init.Logic <> proj2 thm
R3811:3825 Coq.ZArith.Zlogarithm <> log_inf_correct thm
R3827:3827 Coq.ZArith.Zlogarithm <> p var
R3841:3856 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R3858:3873 Coq.ZArith.Zlogarithm <> log_inf_correct2 def
prf 3944:3959 <> log_sup_correct1
R3972:3979 Coq.Numbers.BinNums <> positive ind
R3983:3986 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R3987:3993 Coq.ZArith.Zlogarithm <> log_sup def
R3995:3995 Coq.ZArith.Zlogarithm <> p var
prf 4207:4221 <> log_sup_log_inf
R4238:4245 Coq.Numbers.BinNums <> positive ind
R4254:4256 Coq.Init.Logic <> ::type_scope:'IF'_x_'then'_x_'else'_x not
R4283:4288 Coq.Init.Logic <> ::type_scope:'IF'_x_'then'_x_'else'_x not
R4315:4324 Coq.Init.Logic <> ::type_scope:'IF'_x_'then'_x_'else'_x not
R4263:4265 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4257:4260 Coq.Numbers.BinNums <> Zpos constr
R4262:4262 Coq.ZArith.Zlogarithm <> p var
R4266:4270 Coq.ZArith.Zpower <> two_p def
R4273:4279 Coq.ZArith.Zlogarithm <> log_inf def
R4281:4281 Coq.ZArith.Zlogarithm <> p var
R4295:4297 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4289:4292 Coq.Numbers.BinNums <> Zpos constr
R4294:4294 Coq.ZArith.Zlogarithm <> p var
R4298:4302 Coq.ZArith.Zpower <> two_p def
R4305:4311 Coq.ZArith.Zlogarithm <> log_sup def
R4313:4313 Coq.ZArith.Zlogarithm <> p var
R4334:4336 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4325:4331 Coq.ZArith.Zlogarithm <> log_sup def
R4333:4333 Coq.ZArith.Zlogarithm <> p var
R4337:4342 Coq.ZArith.BinInt Z succ def
R4345:4351 Coq.ZArith.Zlogarithm <> log_inf def
R4353:4353 Coq.ZArith.Zlogarithm <> p var
R4438:4444 Coq.ZArith.Zpower <> two_p_S thm
R4460:4475 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4447:4453 Coq.ZArith.Zlogarithm <> log_inf def
R4494:4512 Coq.ZArith.BinInt Pos2Z inj_xI thm
R4522:4527 Coq.ZArith.BinInt Z succ def
R4599:4605 Coq.ZArith.Zpower <> two_p_S thm
R4621:4636 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4608:4614 Coq.ZArith.Zlogarithm <> log_inf def
R4660:4666 Coq.ZArith.Zpower <> two_p_S thm
R4682:4697 Coq.ZArith.Zlogarithm <> log_sup_correct1 thm
R4669:4675 Coq.ZArith.Zlogarithm <> log_sup def
R4719:4723 Coq.Init.Logic <> proj1 thm
R4743:4747 Coq.Init.Logic <> proj2 thm
R4801:4807 Coq.ZArith.Zpower <> two_p_S thm
R4823:4838 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4810:4816 Coq.ZArith.Zlogarithm <> log_inf def
R4856:4874 Coq.ZArith.BinInt Pos2Z inj_xO thm
R4884:4889 Coq.ZArith.BinInt Z succ def
R4438:4444 Coq.ZArith.Zpower <> two_p_S thm
R4460:4475 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4447:4453 Coq.ZArith.Zlogarithm <> log_inf def
R4438:4444 Coq.ZArith.Zpower <> two_p_S thm
R4460:4475 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4447:4453 Coq.ZArith.Zlogarithm <> log_inf def
R4438:4444 Coq.ZArith.Zpower <> two_p_S thm
R4460:4475 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4447:4453 Coq.ZArith.Zlogarithm <> log_inf def
R4438:4444 Coq.ZArith.Zpower <> two_p_S thm
R4460:4475 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4447:4453 Coq.ZArith.Zlogarithm <> log_inf def
R4494:4512 Coq.ZArith.BinInt Pos2Z inj_xI thm
R4494:4512 Coq.ZArith.BinInt Pos2Z inj_xI thm
R4494:4512 Coq.ZArith.BinInt Pos2Z inj_xI thm
R4494:4512 Coq.ZArith.BinInt Pos2Z inj_xI thm
R4599:4605 Coq.ZArith.Zpower <> two_p_S thm
R4621:4636 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4608:4614 Coq.ZArith.Zlogarithm <> log_inf def
R4599:4605 Coq.ZArith.Zpower <> two_p_S thm
R4621:4636 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4608:4614 Coq.ZArith.Zlogarithm <> log_inf def
R4660:4666 Coq.ZArith.Zpower <> two_p_S thm
R4682:4697 Coq.ZArith.Zlogarithm <> log_sup_correct1 thm
R4669:4675 Coq.ZArith.Zlogarithm <> log_sup def
R4660:4666 Coq.ZArith.Zpower <> two_p_S thm
R4682:4697 Coq.ZArith.Zlogarithm <> log_sup_correct1 thm
R4669:4675 Coq.ZArith.Zlogarithm <> log_sup def
R4719:4723 Coq.Init.Logic <> proj1 thm
R4719:4723 Coq.Init.Logic <> proj1 thm
R4743:4747 Coq.Init.Logic <> proj2 thm
R4743:4747 Coq.Init.Logic <> proj2 thm
R4801:4807 Coq.ZArith.Zpower <> two_p_S thm
R4823:4838 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4810:4816 Coq.ZArith.Zlogarithm <> log_inf def
R4801:4807 Coq.ZArith.Zpower <> two_p_S thm
R4823:4838 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R4810:4816 Coq.ZArith.Zlogarithm <> log_inf def
R4856:4874 Coq.ZArith.BinInt Pos2Z inj_xO thm
R4856:4874 Coq.ZArith.BinInt Pos2Z inj_xO thm
prf 4939:4954 <> log_sup_correct2
R4971:4978 Coq.Numbers.BinNums <> positive ind
R5007:5009 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<='_x not
R5016:5019 Coq.ZArith.BinInt <> ::Z_scope:x_'<'_x_'<='_x not
R4981:4985 Coq.ZArith.Zpower <> two_p def
R4988:4993 Coq.ZArith.BinInt Z pred def
R4996:5002 Coq.ZArith.Zlogarithm <> log_sup def
R5004:5004 Coq.ZArith.Zlogarithm <> x var
R5010:5013 Coq.Numbers.BinNums <> Zpos constr
R5015:5015 Coq.ZArith.Zlogarithm <> x var
R5010:5013 Coq.Numbers.BinNums <> Zpos constr
R5015:5015 Coq.ZArith.Zlogarithm <> x var
R5020:5024 Coq.ZArith.Zpower <> two_p def
R5027:5033 Coq.ZArith.Zlogarithm <> log_sup def
R5035:5035 Coq.ZArith.Zlogarithm <> x var
R5069:5083 Coq.ZArith.Zlogarithm <> log_sup_log_inf thm
R5069:5083 Coq.ZArith.Zlogarithm <> log_sup_log_inf thm
R5194:5203 Coq.ZArith.Zpower <> two_p_pred thm
R5212:5227 Coq.ZArith.Zlogarithm <> log_sup_correct1 thm
R5237:5245 Coq.ZArith.BinInt Z le_refl thm
R5194:5203 Coq.ZArith.Zpower <> two_p_pred thm
R5212:5227 Coq.ZArith.Zlogarithm <> log_sup_correct1 thm
R5237:5245 Coq.ZArith.BinInt Z le_refl thm
R5295:5305 Coq.ZArith.BinInt Z pred_succ thm
R5308:5314 Coq.ZArith.Zlogarithm <> log_inf def
R5295:5305 Coq.ZArith.BinInt Z pred_succ thm
R5308:5314 Coq.ZArith.Zlogarithm <> log_inf def
R5295:5305 Coq.ZArith.BinInt Z pred_succ thm
R5308:5314 Coq.ZArith.Zlogarithm <> log_inf def
R5337:5352 Coq.ZArith.Zlogarithm <> log_inf_correct2 def
R5337:5352 Coq.ZArith.Zlogarithm <> log_inf_correct2 def
prf 5381:5398 <> log_inf_le_log_sup
R5411:5418 Coq.Numbers.BinNums <> positive ind
R5430:5433 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R5421:5427 Coq.ZArith.Zlogarithm <> log_inf def
R5429:5429 Coq.ZArith.Zlogarithm <> p var
R5434:5440 Coq.ZArith.Zlogarithm <> log_sup def
R5442:5442 Coq.ZArith.Zlogarithm <> p var
prf 5516:5534 <> log_sup_le_Slog_inf
R5547:5554 Coq.Numbers.BinNums <> positive ind
R5566:5569 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R5557:5563 Coq.ZArith.Zlogarithm <> log_sup def
R5565:5565 Coq.ZArith.Zlogarithm <> p var
R5570:5575 Coq.ZArith.BinInt Z succ def
R5578:5584 Coq.ZArith.Zlogarithm <> log_inf def
R5586:5586 Coq.ZArith.Zlogarithm <> p var
def 5746:5753 <> log_near
R5758:5765 Coq.Numbers.BinNums <> positive ind
R5770:5770 Coq.Numbers.BinNums <> Z ind
R5785:5785 Coq.ZArith.Zlogarithm <> x var
R5800:5801 Coq.Numbers.BinNums <> xH constr
R5816:5817 Coq.Numbers.BinNums <> xO constr
R5819:5820 Coq.Numbers.BinNums <> xH constr
R5835:5836 Coq.Numbers.BinNums <> xI constr
R5838:5839 Coq.Numbers.BinNums <> xH constr
R5854:5855 Coq.Numbers.BinNums <> xO constr
R5862:5867 Coq.ZArith.BinInt Z succ def
R5870:5877 Coq.ZArith.Zlogarithm <> log_near def
R5890:5891 Coq.Numbers.BinNums <> xI constr
R5898:5903 Coq.ZArith.BinInt Z succ def
R5906:5913 Coq.ZArith.Zlogarithm <> log_near def
prf 5938:5954 <> log_near_correct1
R5967:5974 Coq.Numbers.BinNums <> positive ind
R5978:5981 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R5982:5989 Coq.ZArith.Zlogarithm <> log_near def
R5991:5991 Coq.ZArith.Zlogarithm <> p var
R6149:6162 Coq.ZArith.BinInt Z le_le_succ_r thm
R6149:6162 Coq.ZArith.BinInt Z le_le_succ_r thm
R6215:6228 Coq.ZArith.BinInt Z le_le_succ_r thm
R6215:6228 Coq.ZArith.BinInt Z le_le_succ_r thm
prf 6281:6297 <> log_near_correct2
R6314:6321 Coq.Numbers.BinNums <> positive ind
R6346:6349 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R6334:6336 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6324:6331 Coq.ZArith.Zlogarithm <> log_near def
R6333:6333 Coq.ZArith.Zlogarithm <> p var
R6337:6343 Coq.ZArith.Zlogarithm <> log_inf def
R6345:6345 Coq.ZArith.Zlogarithm <> p var
R6360:6362 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6350:6357 Coq.ZArith.Zlogarithm <> log_near def
R6359:6359 Coq.ZArith.Zlogarithm <> p var
R6363:6369 Coq.ZArith.Zlogarithm <> log_sup def
R6371:6371 Coq.ZArith.Zlogarithm <> p var
R6546:6560 Coq.ZArith.Zlogarithm <> log_sup_log_inf thm
R6546:6560 Coq.ZArith.Zlogarithm <> log_sup_log_inf thm
R6583:6600 Coq.ZArith.Zlogarithm <> log_inf_le_log_sup thm
R6583:6600 Coq.ZArith.Zlogarithm <> log_inf_le_log_sup thm
R6623:6641 Coq.ZArith.Zlogarithm <> log_sup_le_Slog_inf thm
R6623:6641 Coq.ZArith.Zlogarithm <> log_sup_le_Slog_inf thm
R6937:6943 Coq.ZArith.Zlogarithm Log_pos <> sec
sec 6955:6960 <> divers
def 7019:7026 <> N_digits
R7031:7031 Coq.Numbers.BinNums <> Z ind
R7047:7047 Coq.ZArith.Zlogarithm <> x var
R7062:7065 Coq.Numbers.BinNums <> Zpos constr
R7072:7078 Coq.ZArith.Zlogarithm <> log_inf def
R7090:7093 Coq.Numbers.BinNums <> Zneg constr
R7100:7106 Coq.ZArith.Zlogarithm <> log_inf def
R7118:7119 Coq.Numbers.BinNums <> Z0 constr
prf 7144:7159 <> ZERO_le_N_digits
R7172:7172 Coq.Numbers.BinNums <> Z ind
R7176:7179 Coq.ZArith.BinInt <> ::Z_scope:x_'<='_x not
R7180:7187 Coq.ZArith.Zlogarithm <> N_digits def
R7189:7189 Coq.ZArith.Zlogarithm <> x var
R7246:7254 Coq.ZArith.BinInt Z le_refl thm
R7264:7279 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R7289:7304 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R7246:7254 Coq.ZArith.BinInt Z le_refl thm
R7264:7279 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
R7289:7304 Coq.ZArith.Zlogarithm <> log_inf_correct1 def
prf 7325:7341 <> log_inf_shift_nat
R7354:7356 Coq.Init.Datatypes <> nat ind
R7382:7384 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7359:7365 Coq.ZArith.Zlogarithm <> log_inf def
R7368:7376 Coq.ZArith.Zpower <> shift_nat def
R7378:7378 Coq.ZArith.Zlogarithm <> n var
R7385:7392 Coq.ZArith.BinInt Z of_nat def
R7394:7394 Coq.ZArith.Zlogarithm <> n var
R7468:7481 Coq.ZArith.Znat Nat2Z inj_succ thm
R7468:7481 Coq.ZArith.Znat Nat2Z inj_succ thm
R7468:7481 Coq.ZArith.Znat Nat2Z inj_succ thm
prf 7529:7545 <> log_sup_shift_nat
R7558:7560 Coq.Init.Datatypes <> nat ind
R7586:7588 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7563:7569 Coq.ZArith.Zlogarithm <> log_sup def
R7572:7580 Coq.ZArith.Zpower <> shift_nat def
R7582:7582 Coq.ZArith.Zlogarithm <> n var
R7589:7596 Coq.ZArith.BinInt Z of_nat def
R7598:7598 Coq.ZArith.Zlogarithm <> n var
R7672:7685 Coq.ZArith.Znat Nat2Z inj_succ thm
R7672:7685 Coq.ZArith.Znat Nat2Z inj_succ thm
R7672:7685 Coq.ZArith.Znat Nat2Z inj_succ thm
def 7789:7796 <> Is_power
R7801:7808 Coq.Numbers.BinNums <> positive ind
R7831:7831 Coq.ZArith.Zlogarithm <> p var
R7846:7847 Coq.Numbers.BinNums <> xH constr
R7852:7855 Coq.Init.Logic <> True ind
R7865:7866 Coq.Numbers.BinNums <> xO constr
R7873:7880 Coq.ZArith.Zlogarithm <> Is_power def
R7892:7893 Coq.Numbers.BinNums <> xI constr
R7900:7904 Coq.Init.Logic <> False ind
prf 7924:7939 <> Is_power_correct
R7956:7963 Coq.Numbers.BinNums <> positive ind
R7976:7981 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R8015:8015 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R7966:7973 Coq.ZArith.Zlogarithm <> Is_power def
R7975:7975 Coq.ZArith.Zlogarithm <> p var
R7982:7988 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R7996:7997 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R7993:7995 Coq.Init.Datatypes <> nat ind
R7999:8001 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7998:7998 Coq.ZArith.Zlogarithm <> p var
R8002:8010 Coq.ZArith.Zpower <> shift_nat def
R8012:8012 Coq.ZArith.Zlogarithm <> y var
R8156:8156 Coq.Init.Datatypes <> S constr
R8156:8156 Coq.Init.Datatypes <> S constr
prf 8317:8327 <> Is_power_or
R8340:8347 Coq.Numbers.BinNums <> positive ind
R8360:8363 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R8350:8357 Coq.ZArith.Zlogarithm <> Is_power def
R8359:8359 Coq.ZArith.Zlogarithm <> p var
R8364:8365 Coq.Init.Logic <> ::type_scope:'~'_x not
R8366:8373 Coq.ZArith.Zlogarithm <> Is_power def
R8375:8375 Coq.ZArith.Zlogarithm <> p var
R8580:8585 Coq.ZArith.Zlogarithm divers <> sec

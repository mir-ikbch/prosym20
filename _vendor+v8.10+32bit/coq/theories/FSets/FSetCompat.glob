DIGEST 378c9305f1419998b2da4b618da845ac
FCoq.FSets.FSetCompat
R765:777 Coq.FSets.FSetInterface <> <> lib
R779:787 Coq.FSets.FSetFacts <> <> lib
R789:801 Coq.MSets.MSetInterface <> <> lib
R803:811 Coq.MSets.MSetFacts <> <> lib
R929:955 Coq.Structures.DecidableType DecidableType <> mod
R962:980 Coq.MSets.MSetInterface WSets <> mod
R1005:1007 Coq.FSets.FSetCompat E t defax
R1057:1060 Coq.FSets.FSetCompat E eq defax
R1067:1085 Coq.FSets.FSetInterface WSfun <> mod
R1087:1087 Coq.FSets.FSetCompat E <> modtype
mod 910:923 <> Backport_WSets
def 1103:1105 Backport_WSets elt
R1110:1112 Coq.FSets.FSetCompat E t defax
def 1127:1127 Backport_WSets t
R1132:1134 Coq.FSets.FSetCompat M t defax
R1157:1157 Coq.FSets.FSetCompat Backport_WSets t def
R1181:1183 Coq.FSets.FSetCompat Backport_WSets elt def
R1208:1211 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1212:1215 Coq.Init.Datatypes <> bool ind
R1205:1207 Coq.FSets.FSetCompat Backport_WSets elt def
def 1231:1232 Backport_WSets In
R1239:1242 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1244:1247 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1243:1243 Coq.FSets.FSetCompat Backport_WSets t def
R1236:1238 Coq.FSets.FSetCompat Backport_WSets elt def
R1256:1259 Coq.FSets.FSetCompat M In defax
def 1274:1278 Backport_WSets Equal
R1299:1301 Coq.FSets.FSetCompat Backport_WSets elt def
R1310:1314 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R1304:1305 Coq.FSets.FSetCompat Backport_WSets In def
R1309:1309 Coq.FSets.FSetCompat <> s var
R1307:1307 Coq.FSets.FSetCompat <> a var
R1315:1316 Coq.FSets.FSetCompat Backport_WSets In def
R1320:1321 Coq.FSets.FSetCompat <> s' var
R1318:1318 Coq.FSets.FSetCompat <> a var
def 1336:1341 Backport_WSets Subset
R1362:1364 Coq.FSets.FSetCompat Backport_WSets elt def
R1373:1376 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1377:1378 Coq.FSets.FSetCompat Backport_WSets In def
R1382:1383 Coq.FSets.FSetCompat <> s' var
R1380:1380 Coq.FSets.FSetCompat <> a var
R1367:1368 Coq.FSets.FSetCompat Backport_WSets In def
R1372:1372 Coq.FSets.FSetCompat <> s var
R1370:1370 Coq.FSets.FSetCompat <> a var
def 1398:1402 Backport_WSets Empty
R1420:1422 Coq.FSets.FSetCompat Backport_WSets elt def
R1425:1426 Coq.Init.Logic <> ::type_scope:'~'_x not
R1427:1428 Coq.FSets.FSetCompat Backport_WSets In def
R1432:1432 Coq.FSets.FSetCompat <> s var
R1430:1430 Coq.FSets.FSetCompat <> a var
def 1447:1453 Backport_WSets For_all
R1463:1466 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1460:1462 Coq.FSets.FSetCompat Backport_WSets elt def
R1494:1497 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1498:1498 Coq.FSets.FSetCompat <> P var
R1500:1500 Coq.FSets.FSetCompat <> x var
R1488:1489 Coq.FSets.FSetCompat Backport_WSets In def
R1493:1493 Coq.FSets.FSetCompat <> s var
R1491:1491 Coq.FSets.FSetCompat <> x var
def 1515:1520 Backport_WSets Exists
R1530:1533 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1527:1529 Coq.FSets.FSetCompat Backport_WSets elt def
R1545:1551 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R1553:1554 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R1561:1564 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R1555:1556 Coq.FSets.FSetCompat Backport_WSets In def
R1560:1560 Coq.FSets.FSetCompat <> s var
R1558:1558 Coq.FSets.FSetCompat <> x var
R1565:1565 Coq.FSets.FSetCompat <> P var
R1567:1567 Coq.FSets.FSetCompat <> x var
def 1582:1586 Backport_WSets empty
R1590:1590 Coq.FSets.FSetCompat Backport_WSets t def
R1595:1601 Coq.FSets.FSetCompat M empty defax
def 1616:1623 Backport_WSets is_empty
R1628:1631 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1632:1635 Coq.Init.Datatypes <> bool ind
R1627:1627 Coq.FSets.FSetCompat Backport_WSets t def
R1640:1649 Coq.FSets.FSetCompat M is_empty defax
def 1664:1666 Backport_WSets mem
R1673:1676 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1678:1681 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1682:1685 Coq.Init.Datatypes <> bool ind
R1677:1677 Coq.FSets.FSetCompat Backport_WSets t def
R1670:1672 Coq.FSets.FSetCompat Backport_WSets elt def
R1690:1694 Coq.FSets.FSetCompat M mem defax
def 1709:1711 Backport_WSets add
R1718:1721 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1723:1726 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1727:1727 Coq.FSets.FSetCompat Backport_WSets t def
R1722:1722 Coq.FSets.FSetCompat Backport_WSets t def
R1715:1717 Coq.FSets.FSetCompat Backport_WSets elt def
R1732:1736 Coq.FSets.FSetCompat M add defax
def 1751:1759 Backport_WSets singleton
R1766:1769 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1770:1770 Coq.FSets.FSetCompat Backport_WSets t def
R1763:1765 Coq.FSets.FSetCompat Backport_WSets elt def
R1775:1785 Coq.FSets.FSetCompat M singleton defax
def 1800:1805 Backport_WSets remove
R1812:1815 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1817:1820 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1821:1821 Coq.FSets.FSetCompat Backport_WSets t def
R1816:1816 Coq.FSets.FSetCompat Backport_WSets t def
R1809:1811 Coq.FSets.FSetCompat Backport_WSets elt def
R1826:1833 Coq.FSets.FSetCompat M remove defax
def 1848:1852 Backport_WSets union
R1857:1860 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1862:1865 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1866:1866 Coq.FSets.FSetCompat Backport_WSets t def
R1861:1861 Coq.FSets.FSetCompat Backport_WSets t def
R1856:1856 Coq.FSets.FSetCompat Backport_WSets t def
R1871:1877 Coq.FSets.FSetCompat M union defax
def 1892:1896 Backport_WSets inter
R1901:1904 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1906:1909 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1910:1910 Coq.FSets.FSetCompat Backport_WSets t def
R1905:1905 Coq.FSets.FSetCompat Backport_WSets t def
R1900:1900 Coq.FSets.FSetCompat Backport_WSets t def
R1915:1921 Coq.FSets.FSetCompat M inter defax
def 1936:1939 Backport_WSets diff
R1944:1947 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1949:1952 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1953:1953 Coq.FSets.FSetCompat Backport_WSets t def
R1948:1948 Coq.FSets.FSetCompat Backport_WSets t def
R1943:1943 Coq.FSets.FSetCompat Backport_WSets t def
R1958:1963 Coq.FSets.FSetCompat M diff defax
def 1978:1979 Backport_WSets eq
R1984:1987 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1989:1992 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1988:1988 Coq.FSets.FSetCompat Backport_WSets t def
R1983:1983 Coq.FSets.FSetCompat Backport_WSets t def
R2001:2004 Coq.FSets.FSetCompat M eq def
def 2019:2024 Backport_WSets eq_dec
R2041:2041 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2049:2051 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2060:2060 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2042:2043 Coq.FSets.FSetCompat Backport_WSets eq def
R2047:2048 Coq.FSets.FSetCompat <> s' var
R2045:2045 Coq.FSets.FSetCompat <> s var
R2052:2052 Coq.Init.Logic <> ::type_scope:'~'_x not
R2053:2054 Coq.FSets.FSetCompat Backport_WSets eq def
R2058:2059 Coq.FSets.FSetCompat <> s' var
R2056:2056 Coq.FSets.FSetCompat <> s var
R2064:2071 Coq.FSets.FSetCompat M eq_dec defax
def 2086:2090 Backport_WSets equal
R2095:2098 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2100:2103 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2104:2107 Coq.Init.Datatypes <> bool ind
R2099:2099 Coq.FSets.FSetCompat Backport_WSets t def
R2094:2094 Coq.FSets.FSetCompat Backport_WSets t def
R2112:2118 Coq.FSets.FSetCompat M equal defax
def 2133:2138 Backport_WSets subset
R2143:2146 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2148:2151 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2152:2155 Coq.Init.Datatypes <> bool ind
R2147:2147 Coq.FSets.FSetCompat Backport_WSets t def
R2142:2142 Coq.FSets.FSetCompat Backport_WSets t def
R2160:2167 Coq.FSets.FSetCompat M subset defax
def 2182:2185 Backport_WSets fold
R2206:2206 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2220:2224 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2226:2229 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2231:2234 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2235:2235 Coq.FSets.FSetCompat <> A var
R2230:2230 Coq.FSets.FSetCompat <> A var
R2225:2225 Coq.FSets.FSetCompat Backport_WSets t def
R2210:2213 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2215:2218 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2219:2219 Coq.FSets.FSetCompat <> A var
R2214:2214 Coq.FSets.FSetCompat <> A var
R2207:2209 Coq.FSets.FSetCompat Backport_WSets elt def
R2240:2245 Coq.FSets.FSetCompat M fold defax
def 2260:2266 Backport_WSets for_all
R2270:2270 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2282:2286 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2288:2291 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2292:2295 Coq.Init.Datatypes <> bool ind
R2287:2287 Coq.FSets.FSetCompat Backport_WSets t def
R2274:2277 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2278:2281 Coq.Init.Datatypes <> bool ind
R2271:2273 Coq.FSets.FSetCompat Backport_WSets elt def
R2300:2308 Coq.FSets.FSetCompat M for_all defax
def 2323:2329 Backport_WSets exists_
R2333:2333 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2345:2349 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2351:2354 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2355:2358 Coq.Init.Datatypes <> bool ind
R2350:2350 Coq.FSets.FSetCompat Backport_WSets t def
R2337:2340 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2341:2344 Coq.Init.Datatypes <> bool ind
R2334:2336 Coq.FSets.FSetCompat Backport_WSets elt def
R2363:2371 Coq.FSets.FSetCompat M exists_ defax
def 2386:2391 Backport_WSets filter
R2395:2395 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2407:2411 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2413:2416 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2417:2417 Coq.FSets.FSetCompat Backport_WSets t def
R2412:2412 Coq.FSets.FSetCompat Backport_WSets t def
R2399:2402 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2403:2406 Coq.Init.Datatypes <> bool ind
R2396:2398 Coq.FSets.FSetCompat Backport_WSets elt def
R2422:2429 Coq.FSets.FSetCompat M filter defax
def 2444:2452 Backport_WSets partition
R2456:2456 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2468:2472 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2474:2477 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2479:2481 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R2478:2478 Coq.FSets.FSetCompat Backport_WSets t def
R2482:2482 Coq.FSets.FSetCompat Backport_WSets t def
R2473:2473 Coq.FSets.FSetCompat Backport_WSets t def
R2460:2463 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2464:2467 Coq.Init.Datatypes <> bool ind
R2457:2459 Coq.FSets.FSetCompat Backport_WSets elt def
R2486:2496 Coq.FSets.FSetCompat M partition defax
def 2511:2518 Backport_WSets cardinal
R2523:2526 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2527:2529 Coq.Init.Datatypes <> nat ind
R2522:2522 Coq.FSets.FSetCompat Backport_WSets t def
R2534:2543 Coq.FSets.FSetCompat M cardinal defax
def 2558:2565 Backport_WSets elements
R2570:2573 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2574:2577 Coq.Init.Datatypes <> list ind
R2579:2581 Coq.FSets.FSetCompat Backport_WSets elt def
R2569:2569 Coq.FSets.FSetCompat Backport_WSets t def
R2586:2595 Coq.FSets.FSetCompat M elements defax
def 2610:2615 Backport_WSets choose
R2620:2623 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2624:2629 Coq.Init.Datatypes <> option ind
R2631:2633 Coq.FSets.FSetCompat Backport_WSets elt def
R2619:2619 Coq.FSets.FSetCompat Backport_WSets t def
R2638:2645 Coq.FSets.FSetCompat M choose defax
R2663:2678 Coq.MSets.MSetFacts WFacts <> modtype
R2680:2680 Coq.FSets.FSetCompat M <> modtype
mod 2657:2658 <> Backport_WSets.MF
def 2696:2699 Backport_WSets In_1
R2725:2728 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2735:2738 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2739:2740 Coq.FSets.FSetCompat Backport_WSets In def
R2744:2744 Coq.FSets.FSetCompat <> s var
R2742:2742 Coq.FSets.FSetCompat <> y var
R2729:2730 Coq.FSets.FSetCompat Backport_WSets In def
R2734:2734 Coq.FSets.FSetCompat <> s var
R2732:2732 Coq.FSets.FSetCompat <> x var
R2717:2720 Coq.FSets.FSetCompat E eq defax
R2724:2724 Coq.FSets.FSetCompat <> y var
R2722:2722 Coq.FSets.FSetCompat <> x var
R2751:2757 Coq.FSets.FSetCompat Backport_WSets In_1 thm
def 2772:2778 Backport_WSets eq_refl
R2792:2793 Coq.FSets.FSetCompat Backport_WSets eq def
R2797:2797 Coq.FSets.FSetCompat <> s var
R2795:2795 Coq.FSets.FSetCompat <> s var
R2805:2825 Coq.Classes.RelationClasses <> Equivalence_Reflexive meth
R2831:2840 Coq.FSets.FSetCompat M eq_equiv prfax
def 2855:2860 Backport_WSets eq_sym
R2884:2887 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2888:2889 Coq.FSets.FSetCompat Backport_WSets eq def
R2894:2894 Coq.FSets.FSetCompat <> s var
R2891:2892 Coq.FSets.FSetCompat <> s' var
R2877:2878 Coq.FSets.FSetCompat Backport_WSets eq def
R2882:2883 Coq.FSets.FSetCompat <> s' var
R2880:2880 Coq.FSets.FSetCompat <> s var
R2902:2922 Coq.Classes.RelationClasses <> Equivalence_Symmetric meth
R2928:2937 Coq.FSets.FSetCompat M eq_equiv prfax
def 2952:2959 Backport_WSets eq_trans
R2987:2990 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3000:3003 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3004:3005 Coq.FSets.FSetCompat Backport_WSets eq def
R3009:3011 Coq.FSets.FSetCompat <> s'' var
R3007:3007 Coq.FSets.FSetCompat <> s var
R2991:2992 Coq.FSets.FSetCompat Backport_WSets eq def
R2997:2999 Coq.FSets.FSetCompat <> s'' var
R2994:2995 Coq.FSets.FSetCompat <> s' var
R2980:2981 Coq.FSets.FSetCompat Backport_WSets eq def
R2985:2986 Coq.FSets.FSetCompat <> s' var
R2983:2983 Coq.FSets.FSetCompat <> s var
R3019:3040 Coq.Classes.RelationClasses <> Equivalence_Transitive meth
R3046:3055 Coq.FSets.FSetCompat M eq_equiv prfax
def 3070:3074 Backport_WSets mem_1
R3096:3099 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3107:3109 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3100:3102 Coq.FSets.FSetCompat Backport_WSets mem def
R3106:3106 Coq.FSets.FSetCompat <> s var
R3104:3104 Coq.FSets.FSetCompat <> x var
R3110:3113 Coq.Init.Datatypes <> true constr
R3090:3091 Coq.FSets.FSetCompat Backport_WSets In def
R3095:3095 Coq.FSets.FSetCompat <> s var
R3093:3093 Coq.FSets.FSetCompat <> x var
R3120:3127 Coq.FSets.FSetCompat Backport_WSets mem_1 thm
def 3142:3146 Backport_WSets mem_2
R3176:3179 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3180:3181 Coq.FSets.FSetCompat Backport_WSets In def
R3185:3185 Coq.FSets.FSetCompat <> s var
R3183:3183 Coq.FSets.FSetCompat <> x var
R3169:3171 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3162:3164 Coq.FSets.FSetCompat Backport_WSets mem def
R3168:3168 Coq.FSets.FSetCompat <> s var
R3166:3166 Coq.FSets.FSetCompat <> x var
R3172:3175 Coq.Init.Datatypes <> true constr
R3192:3199 Coq.FSets.FSetCompat Backport_WSets mem_2 thm
def 3214:3220 Backport_WSets equal_1
R3247:3250 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3261:3263 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3251:3255 Coq.FSets.FSetCompat Backport_WSets equal def
R3259:3260 Coq.FSets.FSetCompat <> s' var
R3257:3257 Coq.FSets.FSetCompat <> s var
R3264:3267 Coq.Init.Datatypes <> true constr
R3237:3241 Coq.FSets.FSetCompat Backport_WSets Equal def
R3245:3246 Coq.FSets.FSetCompat <> s' var
R3243:3243 Coq.FSets.FSetCompat <> s var
R3274:3283 Coq.FSets.FSetCompat Backport_WSets equal_1 thm
def 3298:3304 Backport_WSets equal_2
R3338:3341 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3342:3346 Coq.FSets.FSetCompat Backport_WSets Equal def
R3350:3351 Coq.FSets.FSetCompat <> s' var
R3348:3348 Coq.FSets.FSetCompat <> s var
R3331:3333 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3321:3325 Coq.FSets.FSetCompat Backport_WSets equal def
R3329:3330 Coq.FSets.FSetCompat <> s' var
R3327:3327 Coq.FSets.FSetCompat <> s var
R3334:3337 Coq.Init.Datatypes <> true constr
R3358:3367 Coq.FSets.FSetCompat Backport_WSets equal_2 thm
def 3382:3389 Backport_WSets subset_1
R3417:3420 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3432:3434 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3421:3426 Coq.FSets.FSetCompat Backport_WSets subset def
R3430:3431 Coq.FSets.FSetCompat <> s' var
R3428:3428 Coq.FSets.FSetCompat <> s var
R3435:3438 Coq.Init.Datatypes <> true constr
R3406:3411 Coq.FSets.FSetCompat Backport_WSets Subset def
R3415:3416 Coq.FSets.FSetCompat <> s' var
R3413:3413 Coq.FSets.FSetCompat <> s var
R3445:3455 Coq.FSets.FSetCompat Backport_WSets subset_1 thm
def 3470:3477 Backport_WSets subset_2
R3512:3515 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3516:3521 Coq.FSets.FSetCompat Backport_WSets Subset def
R3525:3526 Coq.FSets.FSetCompat <> s' var
R3523:3523 Coq.FSets.FSetCompat <> s var
R3505:3507 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3494:3499 Coq.FSets.FSetCompat Backport_WSets subset def
R3503:3504 Coq.FSets.FSetCompat <> s' var
R3501:3501 Coq.FSets.FSetCompat <> s var
R3508:3511 Coq.Init.Datatypes <> true constr
R3533:3543 Coq.FSets.FSetCompat Backport_WSets subset_2 thm
def 3558:3564 Backport_WSets empty_1
R3568:3572 Coq.FSets.FSetCompat Backport_WSets Empty def
R3574:3578 Coq.FSets.FSetCompat Backport_WSets empty def
R3583:3592 Coq.FSets.FSetCompat Backport_WSets empty_1 syndef
def 3607:3616 Backport_WSets is_empty_1
R3637:3640 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3651:3653 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3641:3648 Coq.FSets.FSetCompat Backport_WSets is_empty def
R3650:3650 Coq.FSets.FSetCompat <> s var
R3654:3657 Coq.Init.Datatypes <> true constr
R3630:3634 Coq.FSets.FSetCompat Backport_WSets Empty def
R3636:3636 Coq.FSets.FSetCompat <> s var
R3664:3676 Coq.FSets.FSetCompat Backport_WSets is_empty_1 thm
def 3691:3700 Backport_WSets is_empty_2
R3731:3734 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3735:3739 Coq.FSets.FSetCompat Backport_WSets Empty def
R3741:3741 Coq.FSets.FSetCompat <> s var
R3724:3726 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3714:3721 Coq.FSets.FSetCompat Backport_WSets is_empty def
R3723:3723 Coq.FSets.FSetCompat <> s var
R3727:3730 Coq.Init.Datatypes <> true constr
R3748:3760 Coq.FSets.FSetCompat Backport_WSets is_empty_2 thm
def 3775:3779 Backport_WSets add_1
R3805:3808 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3809:3810 Coq.FSets.FSetCompat Backport_WSets In def
R3815:3817 Coq.FSets.FSetCompat Backport_WSets add def
R3821:3821 Coq.FSets.FSetCompat <> s var
R3819:3819 Coq.FSets.FSetCompat <> x var
R3812:3812 Coq.FSets.FSetCompat <> y var
R3797:3800 Coq.FSets.FSetCompat E eq defax
R3804:3804 Coq.FSets.FSetCompat <> y var
R3802:3802 Coq.FSets.FSetCompat <> x var
R3829:3836 Coq.FSets.FSetCompat Backport_WSets add_1 thm
def 3851:3855 Backport_WSets add_2
R3879:3882 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3883:3884 Coq.FSets.FSetCompat Backport_WSets In def
R3889:3891 Coq.FSets.FSetCompat Backport_WSets add def
R3895:3895 Coq.FSets.FSetCompat <> s var
R3893:3893 Coq.FSets.FSetCompat <> x var
R3886:3886 Coq.FSets.FSetCompat <> y var
R3873:3874 Coq.FSets.FSetCompat Backport_WSets In def
R3878:3878 Coq.FSets.FSetCompat <> s var
R3876:3876 Coq.FSets.FSetCompat <> y var
R3903:3910 Coq.FSets.FSetCompat Backport_WSets add_2 thm
def 3925:3929 Backport_WSets add_3
R3957:3960 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3975:3978 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3979:3980 Coq.FSets.FSetCompat Backport_WSets In def
R3984:3984 Coq.FSets.FSetCompat <> s var
R3982:3982 Coq.FSets.FSetCompat <> y var
R3961:3962 Coq.FSets.FSetCompat Backport_WSets In def
R3967:3969 Coq.FSets.FSetCompat Backport_WSets add def
R3973:3973 Coq.FSets.FSetCompat <> s var
R3971:3971 Coq.FSets.FSetCompat <> x var
R3964:3964 Coq.FSets.FSetCompat <> y var
R3947:3948 Coq.Init.Logic <> ::type_scope:'~'_x not
R3949:3952 Coq.FSets.FSetCompat E eq defax
R3956:3956 Coq.FSets.FSetCompat <> y var
R3954:3954 Coq.FSets.FSetCompat <> x var
R3991:3998 Coq.FSets.FSetCompat Backport_WSets add_3 thm
def 4013:4020 Backport_WSets remove_1
R4046:4049 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4050:4051 Coq.Init.Logic <> ::type_scope:'~'_x not
R4052:4053 Coq.FSets.FSetCompat Backport_WSets In def
R4058:4063 Coq.FSets.FSetCompat Backport_WSets remove def
R4067:4067 Coq.FSets.FSetCompat <> s var
R4065:4065 Coq.FSets.FSetCompat <> x var
R4055:4055 Coq.FSets.FSetCompat <> y var
R4038:4041 Coq.FSets.FSetCompat E eq defax
R4045:4045 Coq.FSets.FSetCompat <> y var
R4043:4043 Coq.FSets.FSetCompat <> x var
R4075:4085 Coq.FSets.FSetCompat Backport_WSets remove_1 thm
def 4100:4107 Backport_WSets remove_2
R4135:4138 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4145:4148 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4149:4150 Coq.FSets.FSetCompat Backport_WSets In def
R4155:4160 Coq.FSets.FSetCompat Backport_WSets remove def
R4164:4164 Coq.FSets.FSetCompat <> s var
R4162:4162 Coq.FSets.FSetCompat <> x var
R4152:4152 Coq.FSets.FSetCompat <> y var
R4139:4140 Coq.FSets.FSetCompat Backport_WSets In def
R4144:4144 Coq.FSets.FSetCompat <> s var
R4142:4142 Coq.FSets.FSetCompat <> y var
R4125:4126 Coq.Init.Logic <> ::type_scope:'~'_x not
R4127:4130 Coq.FSets.FSetCompat E eq defax
R4134:4134 Coq.FSets.FSetCompat <> y var
R4132:4132 Coq.FSets.FSetCompat <> x var
R4172:4182 Coq.FSets.FSetCompat Backport_WSets remove_2 thm
def 4197:4204 Backport_WSets remove_3
R4239:4242 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4243:4244 Coq.FSets.FSetCompat Backport_WSets In def
R4248:4248 Coq.FSets.FSetCompat <> s var
R4246:4246 Coq.FSets.FSetCompat <> y var
R4222:4223 Coq.FSets.FSetCompat Backport_WSets In def
R4228:4233 Coq.FSets.FSetCompat Backport_WSets remove def
R4237:4237 Coq.FSets.FSetCompat <> s var
R4235:4235 Coq.FSets.FSetCompat <> x var
R4225:4225 Coq.FSets.FSetCompat <> y var
R4255:4265 Coq.FSets.FSetCompat Backport_WSets remove_3 thm
def 4280:4286 Backport_WSets union_1
R4322:4325 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4332:4335 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R4326:4327 Coq.FSets.FSetCompat Backport_WSets In def
R4331:4331 Coq.FSets.FSetCompat <> s var
R4329:4329 Coq.FSets.FSetCompat <> x var
R4336:4337 Coq.FSets.FSetCompat Backport_WSets In def
R4341:4342 Coq.FSets.FSetCompat <> s' var
R4339:4339 Coq.FSets.FSetCompat <> x var
R4305:4306 Coq.FSets.FSetCompat Backport_WSets In def
R4311:4315 Coq.FSets.FSetCompat Backport_WSets union def
R4319:4320 Coq.FSets.FSetCompat <> s' var
R4317:4317 Coq.FSets.FSetCompat <> s var
R4308:4308 Coq.FSets.FSetCompat <> x var
R4349:4358 Coq.FSets.FSetCompat Backport_WSets union_1 thm
def 4373:4379 Backport_WSets union_2
R4404:4407 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4408:4409 Coq.FSets.FSetCompat Backport_WSets In def
R4414:4418 Coq.FSets.FSetCompat Backport_WSets union def
R4422:4423 Coq.FSets.FSetCompat <> s' var
R4420:4420 Coq.FSets.FSetCompat <> s var
R4411:4411 Coq.FSets.FSetCompat <> x var
R4398:4399 Coq.FSets.FSetCompat Backport_WSets In def
R4403:4403 Coq.FSets.FSetCompat <> s var
R4401:4401 Coq.FSets.FSetCompat <> x var
R4431:4440 Coq.FSets.FSetCompat Backport_WSets union_2 thm
def 4455:4461 Backport_WSets union_3
R4487:4490 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4491:4492 Coq.FSets.FSetCompat Backport_WSets In def
R4497:4501 Coq.FSets.FSetCompat Backport_WSets union def
R4505:4506 Coq.FSets.FSetCompat <> s' var
R4503:4503 Coq.FSets.FSetCompat <> s var
R4494:4494 Coq.FSets.FSetCompat <> x var
R4480:4481 Coq.FSets.FSetCompat Backport_WSets In def
R4485:4486 Coq.FSets.FSetCompat <> s' var
R4483:4483 Coq.FSets.FSetCompat <> x var
R4514:4523 Coq.FSets.FSetCompat Backport_WSets union_3 thm
def 4538:4544 Backport_WSets inter_1
R4580:4583 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4584:4585 Coq.FSets.FSetCompat Backport_WSets In def
R4589:4589 Coq.FSets.FSetCompat <> s var
R4587:4587 Coq.FSets.FSetCompat <> x var
R4563:4564 Coq.FSets.FSetCompat Backport_WSets In def
R4569:4573 Coq.FSets.FSetCompat Backport_WSets inter def
R4577:4578 Coq.FSets.FSetCompat <> s' var
R4575:4575 Coq.FSets.FSetCompat <> s var
R4566:4566 Coq.FSets.FSetCompat <> x var
R4596:4605 Coq.FSets.FSetCompat Backport_WSets inter_1 thm
def 4620:4626 Backport_WSets inter_2
R4662:4665 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4666:4667 Coq.FSets.FSetCompat Backport_WSets In def
R4671:4672 Coq.FSets.FSetCompat <> s' var
R4669:4669 Coq.FSets.FSetCompat <> x var
R4645:4646 Coq.FSets.FSetCompat Backport_WSets In def
R4651:4655 Coq.FSets.FSetCompat Backport_WSets inter def
R4659:4660 Coq.FSets.FSetCompat <> s' var
R4657:4657 Coq.FSets.FSetCompat <> s var
R4648:4648 Coq.FSets.FSetCompat <> x var
R4679:4688 Coq.FSets.FSetCompat Backport_WSets inter_2 thm
def 4703:4709 Backport_WSets inter_3
R4734:4737 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4745:4748 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4749:4750 Coq.FSets.FSetCompat Backport_WSets In def
R4755:4759 Coq.FSets.FSetCompat Backport_WSets inter def
R4763:4764 Coq.FSets.FSetCompat <> s' var
R4761:4761 Coq.FSets.FSetCompat <> s var
R4752:4752 Coq.FSets.FSetCompat <> x var
R4738:4739 Coq.FSets.FSetCompat Backport_WSets In def
R4743:4744 Coq.FSets.FSetCompat <> s' var
R4741:4741 Coq.FSets.FSetCompat <> x var
R4728:4729 Coq.FSets.FSetCompat Backport_WSets In def
R4733:4733 Coq.FSets.FSetCompat <> s var
R4731:4731 Coq.FSets.FSetCompat <> x var
R4772:4781 Coq.FSets.FSetCompat Backport_WSets inter_3 thm
def 4796:4801 Backport_WSets diff_1
R4836:4839 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4840:4841 Coq.FSets.FSetCompat Backport_WSets In def
R4845:4845 Coq.FSets.FSetCompat <> s var
R4843:4843 Coq.FSets.FSetCompat <> x var
R4820:4821 Coq.FSets.FSetCompat Backport_WSets In def
R4826:4829 Coq.FSets.FSetCompat Backport_WSets diff def
R4833:4834 Coq.FSets.FSetCompat <> s' var
R4831:4831 Coq.FSets.FSetCompat <> s var
R4823:4823 Coq.FSets.FSetCompat <> x var
R4852:4860 Coq.FSets.FSetCompat Backport_WSets diff_1 thm
def 4875:4880 Backport_WSets diff_2
R4915:4918 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4919:4920 Coq.Init.Logic <> ::type_scope:'~'_x not
R4921:4922 Coq.FSets.FSetCompat Backport_WSets In def
R4926:4927 Coq.FSets.FSetCompat <> s' var
R4924:4924 Coq.FSets.FSetCompat <> x var
R4899:4900 Coq.FSets.FSetCompat Backport_WSets In def
R4905:4908 Coq.FSets.FSetCompat Backport_WSets diff def
R4912:4913 Coq.FSets.FSetCompat <> s' var
R4910:4910 Coq.FSets.FSetCompat <> s var
R4902:4902 Coq.FSets.FSetCompat <> x var
R4934:4942 Coq.FSets.FSetCompat Backport_WSets diff_2 thm
def 4957:4962 Backport_WSets diff_3
R4987:4990 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5000:5003 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5004:5005 Coq.FSets.FSetCompat Backport_WSets In def
R5010:5013 Coq.FSets.FSetCompat Backport_WSets diff def
R5017:5018 Coq.FSets.FSetCompat <> s' var
R5015:5015 Coq.FSets.FSetCompat <> s var
R5007:5007 Coq.FSets.FSetCompat <> x var
R4991:4992 Coq.Init.Logic <> ::type_scope:'~'_x not
R4993:4994 Coq.FSets.FSetCompat Backport_WSets In def
R4998:4999 Coq.FSets.FSetCompat <> s' var
R4996:4996 Coq.FSets.FSetCompat <> x var
R4981:4982 Coq.FSets.FSetCompat Backport_WSets In def
R4986:4986 Coq.FSets.FSetCompat <> s var
R4984:4984 Coq.FSets.FSetCompat <> x var
R5026:5034 Coq.FSets.FSetCompat Backport_WSets diff_3 thm
def 5049:5059 Backport_WSets singleton_1
R5093:5096 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5097:5100 Coq.FSets.FSetCompat E eq defax
R5104:5104 Coq.FSets.FSetCompat <> y var
R5102:5102 Coq.FSets.FSetCompat <> x var
R5075:5076 Coq.FSets.FSetCompat Backport_WSets In def
R5081:5089 Coq.FSets.FSetCompat Backport_WSets singleton def
R5091:5091 Coq.FSets.FSetCompat <> x var
R5078:5078 Coq.FSets.FSetCompat <> y var
R5111:5124 Coq.FSets.FSetCompat Backport_WSets singleton_1 thm
def 5139:5149 Backport_WSets singleton_2
R5173:5176 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5177:5178 Coq.FSets.FSetCompat Backport_WSets In def
R5183:5191 Coq.FSets.FSetCompat Backport_WSets singleton def
R5193:5193 Coq.FSets.FSetCompat <> x var
R5180:5180 Coq.FSets.FSetCompat <> y var
R5165:5168 Coq.FSets.FSetCompat E eq defax
R5172:5172 Coq.FSets.FSetCompat <> y var
R5170:5170 Coq.FSets.FSetCompat <> x var
R5201:5214 Coq.FSets.FSetCompat Backport_WSets singleton_2 thm
def 5229:5234 Backport_WSets fold_1
R5263:5263 Coq.FSets.FSetCompat <> A var
R5274:5277 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5279:5282 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5283:5283 Coq.FSets.FSetCompat <> A var
R5278:5278 Coq.FSets.FSetCompat <> A var
R5271:5273 Coq.FSets.FSetCompat Backport_WSets elt def
R5300:5302 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5290:5293 Coq.FSets.FSetCompat Backport_WSets fold def
R5299:5299 Coq.FSets.FSetCompat <> i var
R5297:5297 Coq.FSets.FSetCompat <> s var
R5295:5295 Coq.FSets.FSetCompat <> f var
R5303:5311 Coq.Lists.List <> fold_left def
R5345:5345 Coq.FSets.FSetCompat <> i var
R5333:5340 Coq.FSets.FSetCompat Backport_WSets elements def
R5342:5342 Coq.FSets.FSetCompat <> s var
R5325:5325 Coq.FSets.FSetCompat <> f var
R5329:5329 Coq.FSets.FSetCompat <> a var
R5327:5327 Coq.FSets.FSetCompat <> e var
R5352:5360 Coq.FSets.FSetCompat Backport_WSets fold_1 syndef
def 5375:5384 Backport_WSets cardinal_1
R5408:5410 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5398:5405 Coq.FSets.FSetCompat Backport_WSets cardinal def
R5407:5407 Coq.FSets.FSetCompat <> s var
R5411:5416 Coq.Init.Datatypes <> length def
R5419:5426 Coq.FSets.FSetCompat Backport_WSets elements def
R5428:5428 Coq.FSets.FSetCompat <> s var
R5436:5448 Coq.FSets.FSetCompat Backport_WSets cardinal_1 syndef
def 5463:5470 Backport_WSets filter_1
R5506:5511 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5529:5532 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5533:5534 Coq.FSets.FSetCompat Backport_WSets In def
R5538:5538 Coq.FSets.FSetCompat <> s var
R5536:5536 Coq.FSets.FSetCompat <> x var
R5512:5513 Coq.FSets.FSetCompat Backport_WSets In def
R5518:5523 Coq.FSets.FSetCompat Backport_WSets filter def
R5527:5527 Coq.FSets.FSetCompat <> s var
R5525:5525 Coq.FSets.FSetCompat <> f var
R5515:5515 Coq.FSets.FSetCompat <> x var
R5488:5498 Coq.Lists.SetoidList <> compat_bool def
R5505:5505 Coq.FSets.FSetCompat <> f var
R5500:5503 Coq.FSets.FSetCompat E eq defax
R5545:5555 Coq.FSets.FSetCompat Backport_WSets filter_1 thm
def 5570:5577 Backport_WSets filter_2
R5613:5618 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5636:5639 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5643:5645 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5640:5640 Coq.FSets.FSetCompat <> f var
R5642:5642 Coq.FSets.FSetCompat <> x var
R5646:5649 Coq.Init.Datatypes <> true constr
R5619:5620 Coq.FSets.FSetCompat Backport_WSets In def
R5625:5630 Coq.FSets.FSetCompat Backport_WSets filter def
R5634:5634 Coq.FSets.FSetCompat <> s var
R5632:5632 Coq.FSets.FSetCompat <> f var
R5622:5622 Coq.FSets.FSetCompat <> x var
R5595:5605 Coq.Lists.SetoidList <> compat_bool def
R5612:5612 Coq.FSets.FSetCompat <> f var
R5607:5610 Coq.FSets.FSetCompat E eq defax
R5656:5666 Coq.FSets.FSetCompat Backport_WSets filter_2 thm
def 5681:5688 Backport_WSets filter_3
R5724:5729 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5736:5739 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5750:5753 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5754:5755 Coq.FSets.FSetCompat Backport_WSets In def
R5760:5765 Coq.FSets.FSetCompat Backport_WSets filter def
R5769:5769 Coq.FSets.FSetCompat <> s var
R5767:5767 Coq.FSets.FSetCompat <> f var
R5757:5757 Coq.FSets.FSetCompat <> x var
R5743:5745 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5740:5740 Coq.FSets.FSetCompat <> f var
R5742:5742 Coq.FSets.FSetCompat <> x var
R5746:5749 Coq.Init.Datatypes <> true constr
R5730:5731 Coq.FSets.FSetCompat Backport_WSets In def
R5735:5735 Coq.FSets.FSetCompat <> s var
R5733:5733 Coq.FSets.FSetCompat <> x var
R5706:5716 Coq.Lists.SetoidList <> compat_bool def
R5723:5723 Coq.FSets.FSetCompat <> f var
R5718:5721 Coq.FSets.FSetCompat E eq defax
R5777:5787 Coq.FSets.FSetCompat Backport_WSets filter_3 thm
def 5802:5810 Backport_WSets for_all_1
R5844:5849 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5881:5884 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5896:5898 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5885:5891 Coq.FSets.FSetCompat Backport_WSets for_all def
R5895:5895 Coq.FSets.FSetCompat <> s var
R5893:5893 Coq.FSets.FSetCompat <> f var
R5899:5902 Coq.Init.Datatypes <> true constr
R5850:5856 Coq.FSets.FSetCompat Backport_WSets For_all def
R5880:5880 Coq.FSets.FSetCompat <> s var
R5871:5873 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5868:5868 Coq.FSets.FSetCompat <> f var
R5870:5870 Coq.FSets.FSetCompat <> x var
R5874:5877 Coq.Init.Datatypes <> true constr
R5826:5836 Coq.Lists.SetoidList <> compat_bool def
R5843:5843 Coq.FSets.FSetCompat <> f var
R5838:5841 Coq.FSets.FSetCompat E eq defax
R5909:5920 Coq.FSets.FSetCompat Backport_WSets for_all_1 thm
def 5935:5943 Backport_WSets for_all_2
R5977:5982 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6001:6004 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6005:6011 Coq.FSets.FSetCompat Backport_WSets For_all def
R6035:6035 Coq.FSets.FSetCompat <> s var
R6026:6028 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6023:6023 Coq.FSets.FSetCompat <> f var
R6025:6025 Coq.FSets.FSetCompat <> x var
R6029:6032 Coq.Init.Datatypes <> true constr
R5994:5996 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5983:5989 Coq.FSets.FSetCompat Backport_WSets for_all def
R5993:5993 Coq.FSets.FSetCompat <> s var
R5991:5991 Coq.FSets.FSetCompat <> f var
R5997:6000 Coq.Init.Datatypes <> true constr
R5959:5969 Coq.Lists.SetoidList <> compat_bool def
R5976:5976 Coq.FSets.FSetCompat <> f var
R5971:5974 Coq.FSets.FSetCompat E eq defax
R6042:6053 Coq.FSets.FSetCompat Backport_WSets for_all_2 thm
def 6068:6075 Backport_WSets exists_1
R6109:6114 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6145:6148 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6160:6162 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6149:6155 Coq.FSets.FSetCompat Backport_WSets exists_ def
R6159:6159 Coq.FSets.FSetCompat <> s var
R6157:6157 Coq.FSets.FSetCompat <> f var
R6163:6166 Coq.Init.Datatypes <> true constr
R6115:6120 Coq.FSets.FSetCompat Backport_WSets Exists def
R6144:6144 Coq.FSets.FSetCompat <> s var
R6135:6137 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6132:6132 Coq.FSets.FSetCompat <> f var
R6134:6134 Coq.FSets.FSetCompat <> x var
R6138:6141 Coq.Init.Datatypes <> true constr
R6091:6101 Coq.Lists.SetoidList <> compat_bool def
R6108:6108 Coq.FSets.FSetCompat <> f var
R6103:6106 Coq.FSets.FSetCompat E eq defax
R6173:6183 Coq.FSets.FSetCompat Backport_WSets exists_1 thm
def 6198:6205 Backport_WSets exists_2
R6239:6244 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6263:6266 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6267:6272 Coq.FSets.FSetCompat Backport_WSets Exists def
R6296:6296 Coq.FSets.FSetCompat <> s var
R6287:6289 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6284:6284 Coq.FSets.FSetCompat <> f var
R6286:6286 Coq.FSets.FSetCompat <> x var
R6290:6293 Coq.Init.Datatypes <> true constr
R6256:6258 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6245:6251 Coq.FSets.FSetCompat Backport_WSets exists_ def
R6255:6255 Coq.FSets.FSetCompat <> s var
R6253:6253 Coq.FSets.FSetCompat <> f var
R6259:6262 Coq.Init.Datatypes <> true constr
R6221:6231 Coq.Lists.SetoidList <> compat_bool def
R6238:6238 Coq.FSets.FSetCompat <> f var
R6233:6236 Coq.FSets.FSetCompat E eq defax
R6303:6313 Coq.FSets.FSetCompat Backport_WSets exists_2 thm
def 6328:6338 Backport_WSets partition_1
R6372:6377 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6378:6382 Coq.FSets.FSetCompat Backport_WSets Equal def
R6407:6412 Coq.FSets.FSetCompat Backport_WSets filter def
R6416:6416 Coq.FSets.FSetCompat <> s var
R6414:6414 Coq.FSets.FSetCompat <> f var
R6385:6387 Coq.Init.Datatypes <> fst def
R6390:6398 Coq.FSets.FSetCompat Backport_WSets partition def
R6402:6402 Coq.FSets.FSetCompat <> s var
R6400:6400 Coq.FSets.FSetCompat <> f var
R6354:6364 Coq.Lists.SetoidList <> compat_bool def
R6371:6371 Coq.FSets.FSetCompat <> f var
R6366:6369 Coq.FSets.FSetCompat E eq defax
R6424:6437 Coq.FSets.FSetCompat Backport_WSets partition_1 syndef
def 6452:6462 Backport_WSets partition_2
R6496:6501 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6502:6506 Coq.FSets.FSetCompat Backport_WSets Equal def
R6531:6536 Coq.FSets.FSetCompat Backport_WSets filter def
R6560:6560 Coq.FSets.FSetCompat <> s var
R6548:6551 Coq.Init.Datatypes <> negb def
R6554:6554 Coq.FSets.FSetCompat <> f var
R6556:6556 Coq.FSets.FSetCompat <> x var
R6509:6511 Coq.Init.Datatypes <> snd def
R6514:6522 Coq.FSets.FSetCompat Backport_WSets partition def
R6526:6526 Coq.FSets.FSetCompat <> s var
R6524:6524 Coq.FSets.FSetCompat <> f var
R6478:6488 Coq.Lists.SetoidList <> compat_bool def
R6495:6495 Coq.FSets.FSetCompat <> f var
R6490:6493 Coq.FSets.FSetCompat E eq defax
R6568:6581 Coq.FSets.FSetCompat Backport_WSets partition_2 syndef
def 6596:6603 Backport_WSets choose_1
R6636:6639 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6640:6641 Coq.FSets.FSetCompat Backport_WSets In def
R6645:6645 Coq.FSets.FSetCompat <> s var
R6643:6643 Coq.FSets.FSetCompat <> x var
R6627:6629 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6619:6624 Coq.FSets.FSetCompat Backport_WSets choose def
R6626:6626 Coq.FSets.FSetCompat <> s var
R6630:6633 Coq.Init.Datatypes <> Some constr
R6635:6635 Coq.FSets.FSetCompat <> x var
R6652:6662 Coq.FSets.FSetCompat Backport_WSets choose_1 syndef
def 6677:6684 Backport_WSets choose_2
R6713:6716 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6717:6721 Coq.FSets.FSetCompat Backport_WSets Empty def
R6723:6723 Coq.FSets.FSetCompat <> s var
R6706:6708 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6698:6703 Coq.FSets.FSetCompat Backport_WSets choose def
R6705:6705 Coq.FSets.FSetCompat <> s var
R6709:6712 Coq.Init.Datatypes <> None constr
R6730:6740 Coq.FSets.FSetCompat Backport_WSets choose_2 syndef
def 6755:6764 Backport_WSets elements_1
R6786:6789 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6790:6792 Coq.Lists.SetoidList <> InA ind
R6802:6809 Coq.FSets.FSetCompat Backport_WSets elements def
R6811:6811 Coq.FSets.FSetCompat <> s var
R6799:6799 Coq.FSets.FSetCompat <> x var
R6794:6797 Coq.FSets.FSetCompat E eq defax
R6780:6781 Coq.FSets.FSetCompat Backport_WSets In def
R6785:6785 Coq.FSets.FSetCompat <> s var
R6783:6783 Coq.FSets.FSetCompat <> x var
R6819:6831 Coq.FSets.FSetCompat Backport_WSets elements_1 thm
def 6846:6855 Backport_WSets elements_2
R6894:6897 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6898:6899 Coq.FSets.FSetCompat Backport_WSets In def
R6903:6903 Coq.FSets.FSetCompat <> s var
R6901:6901 Coq.FSets.FSetCompat <> x var
R6871:6873 Coq.Lists.SetoidList <> InA ind
R6883:6890 Coq.FSets.FSetCompat Backport_WSets elements def
R6892:6892 Coq.FSets.FSetCompat <> s var
R6880:6880 Coq.FSets.FSetCompat <> x var
R6875:6878 Coq.FSets.FSetCompat E eq defax
R6910:6922 Coq.FSets.FSetCompat Backport_WSets elements_2 thm
def 6937:6947 Backport_WSets elements_3w
R6961:6966 Coq.Lists.SetoidList <> NoDupA ind
R6974:6981 Coq.FSets.FSetCompat Backport_WSets elements def
R6983:6983 Coq.FSets.FSetCompat <> s var
R6968:6971 Coq.FSets.FSetCompat E eq defax
R6991:7004 Coq.FSets.FSetCompat Backport_WSets elements_3w syndef
R7012:7025 Coq.FSets.FSetCompat Backport_WSets <> mod
R7091:7113 Coq.Structures.OrderedType OrderedType <> mod
R7120:7137 Coq.MSets.MSetInterface Sets <> mod
R7162:7164 Coq.FSets.FSetCompat O t defax
R7213:7216 Coq.FSets.FSetCompat O eq defax
R7265:7268 Coq.FSets.FSetCompat O lt defax
R7275:7289 Coq.FSets.FSetInterface S <> mod
R7306:7306 Coq.FSets.FSetCompat O <> modtype
mod 7073:7085 <> Backport_Sets
R7320:7333 Coq.FSets.FSetCompat Backport_WSets <> modtype
R7335:7335 Coq.FSets.FSetCompat O <> modtype
R7337:7337 Coq.FSets.FSetCompat M <> modtype
R7361:7361 Coq.FSets.FSetCompat Backport_Sets t def
R7386:7388 Coq.FSets.FSetCompat Backport_Sets elt def
def 7405:7406 Backport_Sets lt
R7411:7414 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7416:7419 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7415:7415 Coq.FSets.FSetCompat Backport_Sets t def
R7410:7410 Coq.FSets.FSetCompat Backport_Sets t def
R7428:7431 Coq.FSets.FSetCompat M lt defax
def 7447:7453 Backport_Sets min_elt
R7458:7461 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7462:7467 Coq.Init.Datatypes <> option ind
R7469:7471 Coq.FSets.FSetCompat Backport_Sets elt def
R7457:7457 Coq.FSets.FSetCompat Backport_Sets t def
R7476:7484 Coq.FSets.FSetCompat M min_elt defax
def 7500:7506 Backport_Sets max_elt
R7511:7514 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7515:7520 Coq.Init.Datatypes <> option ind
R7522:7524 Coq.FSets.FSetCompat Backport_Sets elt def
R7510:7510 Coq.FSets.FSetCompat Backport_Sets t def
R7529:7537 Coq.FSets.FSetCompat M max_elt defax
def 7553:7561 Backport_Sets min_elt_1
R7595:7598 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7599:7600 Coq.FSets.FSetCompat Backport_Sets In def
R7604:7604 Coq.FSets.FSetCompat <> s var
R7602:7602 Coq.FSets.FSetCompat <> x var
R7586:7588 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7577:7583 Coq.FSets.FSetCompat Backport_Sets min_elt def
R7585:7585 Coq.FSets.FSetCompat <> s var
R7589:7592 Coq.Init.Datatypes <> Some constr
R7594:7594 Coq.FSets.FSetCompat <> x var
R7612:7626 Coq.FSets.FSetCompat M min_elt_spec1 defax
def 7642:7650 Backport_Sets min_elt_2
R7689:7692 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7699:7702 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7703:7704 Coq.Init.Logic <> ::type_scope:'~'_x not
R7705:7708 Coq.FSets.FSetCompat O lt defax
R7712:7712 Coq.FSets.FSetCompat <> x var
R7710:7710 Coq.FSets.FSetCompat <> y var
R7693:7694 Coq.FSets.FSetCompat Backport_Sets In def
R7698:7698 Coq.FSets.FSetCompat <> s var
R7696:7696 Coq.FSets.FSetCompat <> y var
R7680:7682 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7671:7677 Coq.FSets.FSetCompat Backport_Sets min_elt def
R7679:7679 Coq.FSets.FSetCompat <> s var
R7683:7686 Coq.Init.Datatypes <> Some constr
R7688:7688 Coq.FSets.FSetCompat <> x var
R7720:7734 Coq.FSets.FSetCompat M min_elt_spec2 defax
def 7750:7758 Backport_Sets min_elt_3
R7788:7791 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7792:7796 Coq.FSets.FSetCompat Backport_Sets Empty def
R7798:7798 Coq.FSets.FSetCompat <> s var
R7781:7783 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7772:7778 Coq.FSets.FSetCompat Backport_Sets min_elt def
R7780:7780 Coq.FSets.FSetCompat <> s var
R7784:7787 Coq.Init.Datatypes <> None constr
R7806:7820 Coq.FSets.FSetCompat M min_elt_spec3 defax
def 7836:7844 Backport_Sets max_elt_1
R7878:7881 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7882:7883 Coq.FSets.FSetCompat Backport_Sets In def
R7887:7887 Coq.FSets.FSetCompat <> s var
R7885:7885 Coq.FSets.FSetCompat <> x var
R7869:7871 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7860:7866 Coq.FSets.FSetCompat Backport_Sets max_elt def
R7868:7868 Coq.FSets.FSetCompat <> s var
R7872:7875 Coq.Init.Datatypes <> Some constr
R7877:7877 Coq.FSets.FSetCompat <> x var
R7895:7909 Coq.FSets.FSetCompat M max_elt_spec1 defax
def 7925:7933 Backport_Sets max_elt_2
R7972:7975 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7982:7985 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7986:7987 Coq.Init.Logic <> ::type_scope:'~'_x not
R7988:7991 Coq.FSets.FSetCompat O lt defax
R7995:7995 Coq.FSets.FSetCompat <> y var
R7993:7993 Coq.FSets.FSetCompat <> x var
R7976:7977 Coq.FSets.FSetCompat Backport_Sets In def
R7981:7981 Coq.FSets.FSetCompat <> s var
R7979:7979 Coq.FSets.FSetCompat <> y var
R7963:7965 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7954:7960 Coq.FSets.FSetCompat Backport_Sets max_elt def
R7962:7962 Coq.FSets.FSetCompat <> s var
R7966:7969 Coq.Init.Datatypes <> Some constr
R7971:7971 Coq.FSets.FSetCompat <> x var
R8003:8017 Coq.FSets.FSetCompat M max_elt_spec2 defax
def 8033:8041 Backport_Sets max_elt_3
R8071:8074 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8075:8079 Coq.FSets.FSetCompat Backport_Sets Empty def
R8081:8081 Coq.FSets.FSetCompat <> s var
R8064:8066 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8055:8061 Coq.FSets.FSetCompat Backport_Sets max_elt def
R8063:8063 Coq.FSets.FSetCompat <> s var
R8067:8070 Coq.Init.Datatypes <> None constr
R8089:8103 Coq.FSets.FSetCompat M max_elt_spec3 defax
def 8119:8128 Backport_Sets elements_3
R8142:8145 Coq.Sorting.Sorted <> sort syndef
R8153:8160 Coq.FSets.FSetCompat Backport_Sets elements def
R8162:8162 Coq.FSets.FSetCompat <> s var
R8147:8150 Coq.FSets.FSetCompat O lt defax
R8171:8186 Coq.FSets.FSetCompat M elements_spec2 defax
def 8202:8209 Backport_Sets choose_3
R8250:8253 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8272:8275 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8286:8289 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8290:8293 Coq.FSets.FSetCompat O eq defax
R8297:8297 Coq.FSets.FSetCompat <> y var
R8295:8295 Coq.FSets.FSetCompat <> x var
R8276:8280 Coq.FSets.FSetCompat Backport_Sets Equal def
R8284:8285 Coq.FSets.FSetCompat <> s' var
R8282:8282 Coq.FSets.FSetCompat <> s var
R8263:8265 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8254:8259 Coq.FSets.FSetCompat Backport_Sets choose def
R8261:8262 Coq.FSets.FSetCompat <> s' var
R8266:8269 Coq.Init.Datatypes <> Some constr
R8271:8271 Coq.FSets.FSetCompat <> y var
R8241:8243 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8233:8238 Coq.FSets.FSetCompat Backport_Sets choose def
R8240:8240 Coq.FSets.FSetCompat <> s var
R8244:8247 Coq.Init.Datatypes <> Some constr
R8249:8249 Coq.FSets.FSetCompat <> x var
R8305:8318 Coq.FSets.FSetCompat M choose_spec3 defax
def 8334:8341 Backport_Sets lt_trans
R8369:8372 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8382:8385 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8386:8387 Coq.FSets.FSetCompat Backport_Sets lt def
R8391:8393 Coq.FSets.FSetCompat <> s'' var
R8389:8389 Coq.FSets.FSetCompat <> s var
R8373:8374 Coq.FSets.FSetCompat Backport_Sets lt def
R8379:8381 Coq.FSets.FSetCompat <> s'' var
R8376:8377 Coq.FSets.FSetCompat <> s' var
R8362:8363 Coq.FSets.FSetCompat Backport_Sets lt def
R8367:8368 Coq.FSets.FSetCompat <> s' var
R8365:8365 Coq.FSets.FSetCompat <> s var
R8402:8423 Coq.Classes.RelationClasses <> StrictOrder_Transitive meth
R8429:8441 Coq.FSets.FSetCompat M lt_strorder prfax
prf 8452:8460 Backport_Sets lt_not_eq
R8485:8488 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8489:8490 Coq.Init.Logic <> ::type_scope:'~'_x not
R8491:8492 Coq.FSets.FSetCompat Backport_Sets eq def
R8496:8497 Coq.FSets.FSetCompat <> s' var
R8494:8494 Coq.FSets.FSetCompat <> s var
R8478:8479 Coq.FSets.FSetCompat Backport_Sets lt def
R8483:8484 Coq.FSets.FSetCompat <> s' var
R8481:8481 Coq.FSets.FSetCompat <> s var
R8519:8520 Coq.FSets.FSetCompat Backport_Sets lt def
R8523:8524 Coq.FSets.FSetCompat Backport_Sets eq def
R8578:8600 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R8578:8600 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
def 8633:8639 Backport_Sets compare
R8656:8662 Coq.Structures.OrderedType <> Compare ind
R8672:8673 Coq.FSets.FSetCompat <> s' var
R8670:8670 Coq.FSets.FSetCompat <> s var
R8667:8668 Coq.FSets.FSetCompat Backport_Sets eq def
R8664:8665 Coq.FSets.FSetCompat Backport_Sets lt def
R8711:8723 Coq.Init.Datatypes <> CompSpec2Type thm
R8726:8739 Coq.FSets.FSetCompat M compare_spec defax
R8761:8762 Coq.Structures.OrderedType <> EQ constr
R8772:8773 Coq.Structures.OrderedType <> LT constr
R8783:8784 Coq.Structures.OrderedType <> GT constr
R8711:8723 Coq.Init.Datatypes <> CompSpec2Type thm
R8726:8739 Coq.FSets.FSetCompat M compare_spec defax
R8761:8762 Coq.Structures.OrderedType <> EQ constr
R8772:8773 Coq.Structures.OrderedType <> LT constr
R8783:8784 Coq.Structures.OrderedType <> GT constr
R8821:8821 Coq.FSets.FSetCompat O <> modtype
mod 8816:8816 <> Backport_Sets.E
R8829:8841 Coq.FSets.FSetCompat Backport_Sets <> mod
R8912:8935 Coq.Structures.Equalities DecidableType <> mod
R8942:8957 Coq.FSets.FSetInterface WS <> mod
R8982:8984 Coq.FSets.FSetCompat E t defax
R9031:9034 Coq.FSets.FSetCompat E eq defax
R9041:9061 Coq.MSets.MSetInterface WSetsOn <> mod
R9063:9063 Coq.FSets.FSetCompat E <> modtype
mod 8895:8906 <> Update_WSets
def 9079:9081 Update_WSets elt
R9086:9088 Coq.FSets.FSetCompat E t defax
def 9103:9103 Update_WSets t
R9108:9110 Coq.FSets.FSetCompat M t defax
R9133:9133 Coq.FSets.FSetCompat Update_WSets t def
R9157:9159 Coq.FSets.FSetCompat Update_WSets elt def
R9184:9187 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9188:9191 Coq.Init.Datatypes <> bool ind
R9181:9183 Coq.FSets.FSetCompat Update_WSets elt def
def 9207:9208 Update_WSets In
R9215:9218 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9220:9223 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9219:9219 Coq.FSets.FSetCompat Update_WSets t def
R9212:9214 Coq.FSets.FSetCompat Update_WSets elt def
R9232:9235 Coq.FSets.FSetCompat M In defax
def 9250:9254 Update_WSets Equal
R9275:9277 Coq.FSets.FSetCompat Update_WSets elt def
R9286:9290 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R9280:9281 Coq.FSets.FSetCompat Update_WSets In def
R9285:9285 Coq.FSets.FSetCompat <> s var
R9283:9283 Coq.FSets.FSetCompat <> a var
R9291:9292 Coq.FSets.FSetCompat Update_WSets In def
R9296:9297 Coq.FSets.FSetCompat <> s' var
R9294:9294 Coq.FSets.FSetCompat <> a var
def 9312:9317 Update_WSets Subset
R9338:9340 Coq.FSets.FSetCompat Update_WSets elt def
R9349:9352 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9353:9354 Coq.FSets.FSetCompat Update_WSets In def
R9358:9359 Coq.FSets.FSetCompat <> s' var
R9356:9356 Coq.FSets.FSetCompat <> a var
R9343:9344 Coq.FSets.FSetCompat Update_WSets In def
R9348:9348 Coq.FSets.FSetCompat <> s var
R9346:9346 Coq.FSets.FSetCompat <> a var
def 9374:9378 Update_WSets Empty
R9396:9398 Coq.FSets.FSetCompat Update_WSets elt def
R9401:9402 Coq.Init.Logic <> ::type_scope:'~'_x not
R9403:9404 Coq.FSets.FSetCompat Update_WSets In def
R9408:9408 Coq.FSets.FSetCompat <> s var
R9406:9406 Coq.FSets.FSetCompat <> a var
def 9423:9429 Update_WSets For_all
R9439:9442 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9436:9438 Coq.FSets.FSetCompat Update_WSets elt def
R9470:9473 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9474:9474 Coq.FSets.FSetCompat <> P var
R9476:9476 Coq.FSets.FSetCompat <> x var
R9464:9465 Coq.FSets.FSetCompat Update_WSets In def
R9469:9469 Coq.FSets.FSetCompat <> s var
R9467:9467 Coq.FSets.FSetCompat <> x var
def 9491:9496 Update_WSets Exists
R9506:9509 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9503:9505 Coq.FSets.FSetCompat Update_WSets elt def
R9521:9527 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R9529:9530 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R9537:9540 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R9531:9532 Coq.FSets.FSetCompat Update_WSets In def
R9536:9536 Coq.FSets.FSetCompat <> s var
R9534:9534 Coq.FSets.FSetCompat <> x var
R9541:9541 Coq.FSets.FSetCompat <> P var
R9543:9543 Coq.FSets.FSetCompat <> x var
def 9558:9562 Update_WSets empty
R9566:9566 Coq.FSets.FSetCompat Update_WSets t def
R9571:9577 Coq.FSets.FSetCompat M empty defax
def 9592:9599 Update_WSets is_empty
R9604:9607 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9608:9611 Coq.Init.Datatypes <> bool ind
R9603:9603 Coq.FSets.FSetCompat Update_WSets t def
R9616:9625 Coq.FSets.FSetCompat M is_empty defax
def 9640:9642 Update_WSets mem
R9649:9652 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9654:9657 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9658:9661 Coq.Init.Datatypes <> bool ind
R9653:9653 Coq.FSets.FSetCompat Update_WSets t def
R9646:9648 Coq.FSets.FSetCompat Update_WSets elt def
R9666:9670 Coq.FSets.FSetCompat M mem defax
def 9685:9687 Update_WSets add
R9694:9697 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9699:9702 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9703:9703 Coq.FSets.FSetCompat Update_WSets t def
R9698:9698 Coq.FSets.FSetCompat Update_WSets t def
R9691:9693 Coq.FSets.FSetCompat Update_WSets elt def
R9708:9712 Coq.FSets.FSetCompat M add defax
def 9727:9735 Update_WSets singleton
R9742:9745 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9746:9746 Coq.FSets.FSetCompat Update_WSets t def
R9739:9741 Coq.FSets.FSetCompat Update_WSets elt def
R9751:9761 Coq.FSets.FSetCompat M singleton defax
def 9776:9781 Update_WSets remove
R9788:9791 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9793:9796 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9797:9797 Coq.FSets.FSetCompat Update_WSets t def
R9792:9792 Coq.FSets.FSetCompat Update_WSets t def
R9785:9787 Coq.FSets.FSetCompat Update_WSets elt def
R9802:9809 Coq.FSets.FSetCompat M remove defax
def 9824:9828 Update_WSets union
R9833:9836 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9838:9841 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9842:9842 Coq.FSets.FSetCompat Update_WSets t def
R9837:9837 Coq.FSets.FSetCompat Update_WSets t def
R9832:9832 Coq.FSets.FSetCompat Update_WSets t def
R9847:9853 Coq.FSets.FSetCompat M union defax
def 9868:9872 Update_WSets inter
R9877:9880 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9882:9885 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9886:9886 Coq.FSets.FSetCompat Update_WSets t def
R9881:9881 Coq.FSets.FSetCompat Update_WSets t def
R9876:9876 Coq.FSets.FSetCompat Update_WSets t def
R9891:9897 Coq.FSets.FSetCompat M inter defax
def 9912:9915 Update_WSets diff
R9920:9923 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9925:9928 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9929:9929 Coq.FSets.FSetCompat Update_WSets t def
R9924:9924 Coq.FSets.FSetCompat Update_WSets t def
R9919:9919 Coq.FSets.FSetCompat Update_WSets t def
R9934:9939 Coq.FSets.FSetCompat M diff defax
def 9954:9955 Update_WSets eq
R9960:9963 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9965:9968 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9964:9964 Coq.FSets.FSetCompat Update_WSets t def
R9959:9959 Coq.FSets.FSetCompat Update_WSets t def
R9977:9980 Coq.FSets.FSetCompat M eq def
def 9995:10000 Update_WSets eq_dec
R10017:10017 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R10025:10027 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R10036:10036 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R10018:10019 Coq.FSets.FSetCompat Update_WSets eq def
R10023:10024 Coq.FSets.FSetCompat <> s' var
R10021:10021 Coq.FSets.FSetCompat <> s var
R10028:10028 Coq.Init.Logic <> ::type_scope:'~'_x not
R10029:10030 Coq.FSets.FSetCompat Update_WSets eq def
R10034:10035 Coq.FSets.FSetCompat <> s' var
R10032:10032 Coq.FSets.FSetCompat <> s var
R10040:10047 Coq.FSets.FSetCompat M eq_dec defax
def 10062:10066 Update_WSets equal
R10071:10074 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10076:10079 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10080:10083 Coq.Init.Datatypes <> bool ind
R10075:10075 Coq.FSets.FSetCompat Update_WSets t def
R10070:10070 Coq.FSets.FSetCompat Update_WSets t def
R10088:10094 Coq.FSets.FSetCompat M equal defax
def 10109:10114 Update_WSets subset
R10119:10122 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10124:10127 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10128:10131 Coq.Init.Datatypes <> bool ind
R10123:10123 Coq.FSets.FSetCompat Update_WSets t def
R10118:10118 Coq.FSets.FSetCompat Update_WSets t def
R10136:10143 Coq.FSets.FSetCompat M subset defax
def 10158:10161 Update_WSets fold
R10182:10182 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10196:10200 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10202:10205 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10207:10210 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10211:10211 Coq.FSets.FSetCompat <> A var
R10206:10206 Coq.FSets.FSetCompat <> A var
R10201:10201 Coq.FSets.FSetCompat Update_WSets t def
R10186:10189 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10191:10194 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10195:10195 Coq.FSets.FSetCompat <> A var
R10190:10190 Coq.FSets.FSetCompat <> A var
R10183:10185 Coq.FSets.FSetCompat Update_WSets elt def
R10216:10221 Coq.FSets.FSetCompat M fold defax
def 10236:10242 Update_WSets for_all
R10246:10246 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10258:10262 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10264:10267 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10268:10271 Coq.Init.Datatypes <> bool ind
R10263:10263 Coq.FSets.FSetCompat Update_WSets t def
R10250:10253 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10254:10257 Coq.Init.Datatypes <> bool ind
R10247:10249 Coq.FSets.FSetCompat Update_WSets elt def
R10276:10284 Coq.FSets.FSetCompat M for_all defax
def 10299:10305 Update_WSets exists_
R10309:10309 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10321:10325 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10327:10330 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10331:10334 Coq.Init.Datatypes <> bool ind
R10326:10326 Coq.FSets.FSetCompat Update_WSets t def
R10313:10316 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10317:10320 Coq.Init.Datatypes <> bool ind
R10310:10312 Coq.FSets.FSetCompat Update_WSets elt def
R10339:10347 Coq.FSets.FSetCompat M exists_ defax
def 10362:10367 Update_WSets filter
R10371:10371 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10383:10387 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10389:10392 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10393:10393 Coq.FSets.FSetCompat Update_WSets t def
R10388:10388 Coq.FSets.FSetCompat Update_WSets t def
R10375:10378 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10379:10382 Coq.Init.Datatypes <> bool ind
R10372:10374 Coq.FSets.FSetCompat Update_WSets elt def
R10398:10405 Coq.FSets.FSetCompat M filter defax
def 10420:10428 Update_WSets partition
R10432:10432 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10444:10448 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10450:10453 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10455:10457 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R10454:10454 Coq.FSets.FSetCompat Update_WSets t def
R10458:10458 Coq.FSets.FSetCompat Update_WSets t def
R10449:10449 Coq.FSets.FSetCompat Update_WSets t def
R10436:10439 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10440:10443 Coq.Init.Datatypes <> bool ind
R10433:10435 Coq.FSets.FSetCompat Update_WSets elt def
R10462:10472 Coq.FSets.FSetCompat M partition defax
def 10487:10494 Update_WSets cardinal
R10499:10502 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10503:10505 Coq.Init.Datatypes <> nat ind
R10498:10498 Coq.FSets.FSetCompat Update_WSets t def
R10510:10519 Coq.FSets.FSetCompat M cardinal defax
def 10534:10541 Update_WSets elements
R10546:10549 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10550:10553 Coq.Init.Datatypes <> list ind
R10555:10557 Coq.FSets.FSetCompat Update_WSets elt def
R10545:10545 Coq.FSets.FSetCompat Update_WSets t def
R10562:10571 Coq.FSets.FSetCompat M elements defax
def 10586:10591 Update_WSets choose
R10596:10599 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10600:10605 Coq.Init.Datatypes <> option ind
R10607:10609 Coq.FSets.FSetCompat Update_WSets elt def
R10595:10595 Coq.FSets.FSetCompat Update_WSets t def
R10614:10621 Coq.FSets.FSetCompat M choose defax
R10639:10654 Coq.FSets.FSetFacts WFacts <> modtype
R10656:10656 Coq.FSets.FSetCompat M <> modtype
mod 10633:10634 <> Update_WSets.MF
inst 10670:10678 Update_WSets In_compat
R10682:10687 Coq.Classes.Morphisms <> Proper class
R10713:10714 Coq.FSets.FSetCompat Update_WSets In def
R10694:10696 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R10690:10693 Coq.FSets.FSetCompat E eq defax
R10705:10707 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R10697:10704 Coq.Init.Logic <> eq ind
R10708:10710 Coq.Init.Logic <> iff def
R10762:10773 Coq.FSets.FSetCompat Update_WSets In_eq_iff thm
R10762:10773 Coq.FSets.FSetCompat Update_WSets In_eq_iff thm
inst 10798:10805 Update_WSets eq_equiv
R10809:10819 Coq.Classes.RelationClasses <> Equivalence class
R10821:10822 Coq.FSets.FSetCompat Update_WSets eq def
sec 10840:10843 Update_WSets Spec
var 10857:10857 Update_WSets.Spec s
var 10859:10860 Update_WSets.Spec s'
R10863:10863 Coq.FSets.FSetCompat Update_WSets t def
var 10877:10877 Update_WSets.Spec x
var 10879:10879 Update_WSets.Spec y
R10883:10885 Coq.FSets.FSetCompat Update_WSets elt def
prf 10897:10904 Update_WSets mem_spec
R10922:10926 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R10915:10917 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10908:10910 Coq.FSets.FSetCompat Update_WSets mem def
R10914:10914 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R10912:10912 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R10918:10921 Coq.Init.Datatypes <> true constr
R10927:10928 Coq.FSets.FSetCompat Update_WSets In def
R10932:10932 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R10930:10930 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R10968:10977 Coq.FSets.FSetCompat Update_WSets mem_iff thm
R10968:10977 Coq.FSets.FSetCompat Update_WSets mem_iff thm
prf 10994:11003 Update_WSets equal_spec
R11024:11028 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11017:11019 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11007:11011 Coq.FSets.FSetCompat Update_WSets equal def
R11015:11016 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R11013:11013 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11020:11023 Coq.Init.Datatypes <> true constr
R11029:11033 Coq.FSets.FSetCompat Update_WSets Equal def
R11037:11038 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R11035:11035 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11074:11085 Coq.FSets.FSetCompat Update_WSets equal_iff thm
R11074:11085 Coq.FSets.FSetCompat Update_WSets equal_iff thm
prf 11102:11112 Update_WSets subset_spec
R11134:11138 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11127:11129 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11116:11121 Coq.FSets.FSetCompat Update_WSets subset def
R11125:11126 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R11123:11123 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11130:11133 Coq.Init.Datatypes <> true constr
R11139:11144 Coq.FSets.FSetCompat Update_WSets Subset def
R11148:11149 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R11146:11146 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11185:11197 Coq.FSets.FSetCompat Update_WSets subset_iff thm
R11185:11197 Coq.FSets.FSetCompat Update_WSets subset_iff thm
def 11219:11228 Update_WSets empty_spec
R11232:11236 Coq.FSets.FSetCompat Update_WSets Empty def
R11238:11242 Coq.FSets.FSetCompat Update_WSets empty def
R11247:11255 Coq.FSets.FSetCompat M empty_1 defax
prf 11267:11279 Update_WSets is_empty_spec
R11300:11304 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11293:11295 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11283:11290 Coq.FSets.FSetCompat Update_WSets is_empty def
R11292:11292 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11296:11299 Coq.Init.Datatypes <> true constr
R11305:11309 Coq.FSets.FSetCompat Update_WSets Empty def
R11311:11311 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11347:11361 Coq.FSets.FSetCompat Update_WSets is_empty_iff thm
R11347:11361 Coq.FSets.FSetCompat Update_WSets is_empty_iff thm
R11398:11399 Coq.FSets.FSetCompat Update_WSets In def
R11401:11404 Coq.FSets.FSetCompat M In defax
prf 11416:11423 Update_WSets add_spec
R11441:11445 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11427:11428 Coq.FSets.FSetCompat Update_WSets In def
R11433:11435 Coq.FSets.FSetCompat Update_WSets add def
R11439:11439 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11437:11437 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11430:11430 Coq.FSets.FSetCompat <> Update_WSets.Spec.y var
R11454:11457 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R11446:11449 Coq.FSets.FSetCompat E eq defax
R11453:11453 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11451:11451 Coq.FSets.FSetCompat <> Update_WSets.Spec.y var
R11458:11459 Coq.FSets.FSetCompat Update_WSets In def
R11463:11463 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11461:11461 Coq.FSets.FSetCompat <> Update_WSets.Spec.y var
R11491:11500 Coq.FSets.FSetCompat Update_WSets add_iff thm
R11491:11500 Coq.FSets.FSetCompat Update_WSets add_iff thm
R11491:11500 Coq.FSets.FSetCompat Update_WSets add_iff thm
prf 11528:11538 Update_WSets remove_spec
R11559:11563 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11542:11543 Coq.FSets.FSetCompat Update_WSets In def
R11548:11553 Coq.FSets.FSetCompat Update_WSets remove def
R11557:11557 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11555:11555 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11545:11545 Coq.FSets.FSetCompat <> Update_WSets.Spec.y var
R11570:11573 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R11564:11565 Coq.FSets.FSetCompat Update_WSets In def
R11569:11569 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11567:11567 Coq.FSets.FSetCompat <> Update_WSets.Spec.y var
R11574:11574 Coq.Init.Logic <> ::type_scope:'~'_x not
R11575:11578 Coq.FSets.FSetCompat E eq defax
R11582:11582 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11580:11580 Coq.FSets.FSetCompat <> Update_WSets.Spec.y var
R11610:11622 Coq.FSets.FSetCompat Update_WSets remove_iff thm
R11610:11622 Coq.FSets.FSetCompat Update_WSets remove_iff thm
R11610:11622 Coq.FSets.FSetCompat Update_WSets remove_iff thm
prf 11650:11663 Update_WSets singleton_spec
R11685:11689 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11667:11668 Coq.FSets.FSetCompat Update_WSets In def
R11673:11681 Coq.FSets.FSetCompat Update_WSets singleton def
R11683:11683 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11670:11670 Coq.FSets.FSetCompat <> Update_WSets.Spec.y var
R11690:11693 Coq.FSets.FSetCompat E eq defax
R11697:11697 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11695:11695 Coq.FSets.FSetCompat <> Update_WSets.Spec.y var
R11725:11740 Coq.FSets.FSetCompat Update_WSets singleton_iff thm
R11725:11740 Coq.FSets.FSetCompat Update_WSets singleton_iff thm
R11725:11740 Coq.FSets.FSetCompat Update_WSets singleton_iff thm
def 11773:11782 Update_WSets union_spec
R11803:11807 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11786:11787 Coq.FSets.FSetCompat Update_WSets In def
R11792:11796 Coq.FSets.FSetCompat Update_WSets union def
R11800:11801 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R11798:11798 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11789:11789 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11814:11817 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R11808:11809 Coq.FSets.FSetCompat Update_WSets In def
R11813:11813 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11811:11811 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11818:11819 Coq.FSets.FSetCompat Update_WSets In def
R11823:11824 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R11821:11821 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11833:11844 Coq.FSets.FSetCompat Update_WSets union_iff thm
R11851:11851 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11848:11849 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R11846:11846 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
def 11867:11876 Update_WSets inter_spec
R11897:11901 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11880:11881 Coq.FSets.FSetCompat Update_WSets In def
R11886:11890 Coq.FSets.FSetCompat Update_WSets inter def
R11894:11895 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R11892:11892 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11883:11883 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11908:11911 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R11902:11903 Coq.FSets.FSetCompat Update_WSets In def
R11907:11907 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11905:11905 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11912:11913 Coq.FSets.FSetCompat Update_WSets In def
R11917:11918 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R11915:11915 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11927:11938 Coq.FSets.FSetCompat Update_WSets inter_iff thm
R11945:11945 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R11942:11943 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R11940:11940 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
def 11961:11969 Update_WSets diff_spec
R11989:11993 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11973:11974 Coq.FSets.FSetCompat Update_WSets In def
R11979:11982 Coq.FSets.FSetCompat Update_WSets diff def
R11986:11987 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R11984:11984 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11976:11976 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12000:12003 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R11994:11995 Coq.FSets.FSetCompat Update_WSets In def
R11999:11999 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R11997:11997 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12004:12004 Coq.Init.Logic <> ::type_scope:'~'_x not
R12005:12006 Coq.FSets.FSetCompat Update_WSets In def
R12010:12011 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R12008:12008 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12020:12030 Coq.FSets.FSetCompat Update_WSets diff_iff thm
R12037:12037 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12034:12035 Coq.FSets.FSetCompat <> Update_WSets.Spec.s' var
R12032:12032 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
def 12053:12061 Update_WSets fold_spec
R12088:12088 Coq.FSets.FSetCompat <> A var
R12099:12102 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12104:12107 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12108:12108 Coq.FSets.FSetCompat <> A var
R12103:12103 Coq.FSets.FSetCompat <> A var
R12096:12098 Coq.FSets.FSetCompat Update_WSets elt def
R12125:12127 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12115:12118 Coq.FSets.FSetCompat Update_WSets fold def
R12124:12124 Coq.FSets.FSetCompat <> i var
R12122:12122 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12120:12120 Coq.FSets.FSetCompat <> f var
R12128:12136 Coq.Lists.List <> fold_left def
R12160:12160 Coq.FSets.FSetCompat <> i var
R12148:12155 Coq.FSets.FSetCompat Update_WSets elements def
R12157:12157 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12139:12142 Coq.Program.Basics <> flip def
R12144:12144 Coq.FSets.FSetCompat <> f var
R12169:12176 Coq.FSets.FSetCompat M fold_1 defax
R12178:12178 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
def 12194:12206 Update_WSets cardinal_spec
R12220:12222 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12210:12217 Coq.FSets.FSetCompat Update_WSets cardinal def
R12219:12219 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12223:12228 Coq.Init.Datatypes <> length def
R12231:12238 Coq.FSets.FSetCompat Update_WSets elements def
R12240:12240 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12250:12261 Coq.FSets.FSetCompat M cardinal_1 defax
R12263:12263 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
prf 12275:12288 Update_WSets elements_spec1
R12315:12319 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12292:12294 Coq.Lists.SetoidList <> InA ind
R12304:12311 Coq.FSets.FSetCompat Update_WSets elements def
R12313:12313 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12301:12301 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12296:12299 Coq.FSets.FSetCompat E eq defax
R12320:12321 Coq.FSets.FSetCompat Update_WSets In def
R12325:12325 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12323:12323 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12361:12375 Coq.FSets.FSetCompat Update_WSets elements_iff thm
R12361:12375 Coq.FSets.FSetCompat Update_WSets elements_iff thm
def 12397:12411 Update_WSets elements_spec2w
R12415:12420 Coq.Lists.SetoidList <> NoDupA ind
R12428:12435 Coq.FSets.FSetCompat Update_WSets elements def
R12437:12437 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12422:12425 Coq.FSets.FSetCompat E eq defax
R12447:12459 Coq.FSets.FSetCompat M elements_3w defax
R12461:12461 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
def 12477:12488 Update_WSets choose_spec1
R12509:12512 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12513:12514 Coq.FSets.FSetCompat Update_WSets In def
R12518:12518 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12516:12516 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12500:12502 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12492:12497 Coq.FSets.FSetCompat Update_WSets choose def
R12499:12499 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12503:12506 Coq.Init.Datatypes <> Some constr
R12508:12508 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12527:12536 Coq.FSets.FSetCompat M choose_1 defax
R12540:12540 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12538:12538 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
def 12556:12567 Update_WSets choose_spec2
R12586:12589 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12590:12594 Coq.FSets.FSetCompat Update_WSets Empty def
R12596:12596 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12579:12581 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12571:12576 Coq.FSets.FSetCompat Update_WSets choose def
R12578:12578 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12582:12585 Coq.Init.Datatypes <> None constr
R12605:12614 Coq.FSets.FSetCompat M choose_2 defax
R12616:12616 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
def 12632:12642 Update_WSets filter_spec
R12682:12689 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12732:12732 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12707:12711 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12690:12691 Coq.FSets.FSetCompat Update_WSets In def
R12696:12701 Coq.FSets.FSetCompat Update_WSets filter def
R12705:12705 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12703:12703 Coq.FSets.FSetCompat <> f var
R12693:12693 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12718:12721 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R12712:12713 Coq.FSets.FSetCompat Update_WSets In def
R12717:12717 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12715:12715 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12725:12727 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12722:12722 Coq.FSets.FSetCompat <> f var
R12724:12724 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12728:12731 Coq.Init.Datatypes <> true constr
R12656:12661 Coq.Classes.Morphisms <> Proper class
R12681:12681 Coq.FSets.FSetCompat <> f var
R12668:12670 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R12664:12667 Coq.FSets.FSetCompat E eq defax
R12671:12678 Coq.Init.Logic <> eq ind
R12741:12753 Coq.FSets.FSetCompat Update_WSets filter_iff thm
R12757:12757 Coq.FSets.FSetCompat <> Update_WSets.Spec.x var
R12755:12755 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
def 12773:12787 Update_WSets partition_spec1
R12827:12833 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12834:12838 Coq.FSets.FSetCompat Update_WSets Equal def
R12863:12868 Coq.FSets.FSetCompat Update_WSets filter def
R12872:12872 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12870:12870 Coq.FSets.FSetCompat <> f var
R12841:12843 Coq.Init.Datatypes <> fst def
R12846:12854 Coq.FSets.FSetCompat Update_WSets partition def
R12858:12858 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12856:12856 Coq.FSets.FSetCompat <> f var
R12801:12806 Coq.Classes.Morphisms <> Proper class
R12826:12826 Coq.FSets.FSetCompat <> f var
R12813:12815 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R12809:12812 Coq.FSets.FSetCompat E eq defax
R12816:12823 Coq.Init.Logic <> eq ind
R12882:12894 Coq.FSets.FSetCompat M partition_1 defax
R12896:12896 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
def 12912:12926 Update_WSets partition_spec2
R12966:12972 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12973:12977 Coq.FSets.FSetCompat Update_WSets Equal def
R13002:13007 Coq.FSets.FSetCompat Update_WSets filter def
R13031:13031 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R13019:13022 Coq.Init.Datatypes <> negb def
R13025:13025 Coq.FSets.FSetCompat <> f var
R13027:13027 Coq.FSets.FSetCompat <> x var
R12980:12982 Coq.Init.Datatypes <> snd def
R12985:12993 Coq.FSets.FSetCompat Update_WSets partition def
R12997:12997 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R12995:12995 Coq.FSets.FSetCompat <> f var
R12940:12945 Coq.Classes.Morphisms <> Proper class
R12965:12965 Coq.FSets.FSetCompat <> f var
R12952:12954 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R12948:12951 Coq.FSets.FSetCompat E eq defax
R12955:12962 Coq.Init.Logic <> eq ind
R13041:13053 Coq.FSets.FSetCompat M partition_2 defax
R13055:13055 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
prf 13067:13078 Update_WSets for_all_spec
R13118:13126 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13181:13181 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13145:13149 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R13138:13140 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13127:13133 Coq.FSets.FSetCompat Update_WSets for_all def
R13137:13137 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R13135:13135 Coq.FSets.FSetCompat <> f var
R13141:13144 Coq.Init.Datatypes <> true constr
R13150:13156 Coq.FSets.FSetCompat Update_WSets For_all def
R13180:13180 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R13171:13173 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13168:13168 Coq.FSets.FSetCompat <> f var
R13170:13170 Coq.FSets.FSetCompat <> x var
R13174:13177 Coq.Init.Datatypes <> true constr
R13092:13097 Coq.Classes.Morphisms <> Proper class
R13117:13117 Coq.FSets.FSetCompat <> f var
R13104:13106 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R13100:13103 Coq.FSets.FSetCompat E eq defax
R13107:13114 Coq.Init.Logic <> eq ind
R13217:13230 Coq.FSets.FSetCompat Update_WSets for_all_iff thm
R13217:13230 Coq.FSets.FSetCompat Update_WSets for_all_iff thm
prf 13253:13263 Update_WSets exists_spec
R13303:13311 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13365:13365 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13330:13334 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R13323:13325 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13312:13318 Coq.FSets.FSetCompat Update_WSets exists_ def
R13322:13322 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R13320:13320 Coq.FSets.FSetCompat <> f var
R13326:13329 Coq.Init.Datatypes <> true constr
R13335:13340 Coq.FSets.FSetCompat Update_WSets Exists def
R13364:13364 Coq.FSets.FSetCompat <> Update_WSets.Spec.s var
R13355:13357 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13352:13352 Coq.FSets.FSetCompat <> f var
R13354:13354 Coq.FSets.FSetCompat <> x var
R13358:13361 Coq.Init.Datatypes <> true constr
R13277:13282 Coq.Classes.Morphisms <> Proper class
R13302:13302 Coq.FSets.FSetCompat <> f var
R13289:13291 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R13285:13288 Coq.FSets.FSetCompat E eq defax
R13292:13299 Coq.Init.Logic <> eq ind
R13401:13413 Coq.FSets.FSetCompat Update_WSets exists_iff thm
R13401:13413 Coq.FSets.FSetCompat Update_WSets exists_iff thm
R13434:13437 Coq.FSets.FSetCompat Update_WSets.Spec <> sec
R13445:13456 Coq.FSets.FSetCompat Update_WSets <> mod
R13521:13538 Coq.Structures.Orders OrderedType <> mod
R13545:13559 Coq.FSets.FSetInterface S <> mod
R13584:13586 Coq.FSets.FSetCompat O t defax
R13632:13635 Coq.FSets.FSetCompat O eq defax
R13681:13684 Coq.FSets.FSetCompat O lt defax
R13691:13708 Coq.MSets.MSetInterface Sets <> mod
R13725:13725 Coq.FSets.FSetCompat O <> modtype
mod 13505:13515 <> Update_Sets
R13739:13750 Coq.FSets.FSetCompat Update_WSets <> modtype
R13752:13752 Coq.FSets.FSetCompat O <> modtype
R13754:13754 Coq.FSets.FSetCompat M <> modtype
R13778:13778 Coq.FSets.FSetCompat Update_Sets t def
R13803:13805 Coq.FSets.FSetCompat Update_Sets elt def
def 13822:13823 Update_Sets lt
R13828:13831 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13833:13836 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13832:13832 Coq.FSets.FSetCompat Update_Sets t def
R13827:13827 Coq.FSets.FSetCompat Update_Sets t def
R13845:13848 Coq.FSets.FSetCompat M lt defax
def 13864:13870 Update_Sets min_elt
R13875:13878 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13879:13884 Coq.Init.Datatypes <> option ind
R13886:13888 Coq.FSets.FSetCompat Update_Sets elt def
R13874:13874 Coq.FSets.FSetCompat Update_Sets t def
R13893:13901 Coq.FSets.FSetCompat M min_elt defax
def 13917:13923 Update_Sets max_elt
R13928:13931 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13932:13937 Coq.Init.Datatypes <> option ind
R13939:13941 Coq.FSets.FSetCompat Update_Sets elt def
R13927:13927 Coq.FSets.FSetCompat Update_Sets t def
R13946:13954 Coq.FSets.FSetCompat M max_elt defax
def 13970:13982 Update_Sets min_elt_spec1
R14016:14019 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14020:14021 Coq.FSets.FSetCompat Update_Sets In def
R14025:14025 Coq.FSets.FSetCompat <> s var
R14023:14023 Coq.FSets.FSetCompat <> x var
R14007:14009 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13998:14004 Coq.FSets.FSetCompat Update_Sets min_elt def
R14006:14006 Coq.FSets.FSetCompat <> s var
R14010:14013 Coq.Init.Datatypes <> Some constr
R14015:14015 Coq.FSets.FSetCompat <> x var
R14033:14043 Coq.FSets.FSetCompat M min_elt_1 defax
def 14059:14071 Update_Sets min_elt_spec2
R14110:14113 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14120:14123 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14124:14125 Coq.Init.Logic <> ::type_scope:'~'_x not
R14126:14129 Coq.FSets.FSetCompat O lt defax
R14133:14133 Coq.FSets.FSetCompat <> x var
R14131:14131 Coq.FSets.FSetCompat <> y var
R14114:14115 Coq.FSets.FSetCompat Update_Sets In def
R14119:14119 Coq.FSets.FSetCompat <> s var
R14117:14117 Coq.FSets.FSetCompat <> y var
R14101:14103 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14092:14098 Coq.FSets.FSetCompat Update_Sets min_elt def
R14100:14100 Coq.FSets.FSetCompat <> s var
R14104:14107 Coq.Init.Datatypes <> Some constr
R14109:14109 Coq.FSets.FSetCompat <> x var
R14141:14151 Coq.FSets.FSetCompat M min_elt_2 defax
def 14167:14179 Update_Sets min_elt_spec3
R14209:14212 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14213:14217 Coq.FSets.FSetCompat Update_Sets Empty def
R14219:14219 Coq.FSets.FSetCompat <> s var
R14202:14204 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14193:14199 Coq.FSets.FSetCompat Update_Sets min_elt def
R14201:14201 Coq.FSets.FSetCompat <> s var
R14205:14208 Coq.Init.Datatypes <> None constr
R14227:14237 Coq.FSets.FSetCompat M min_elt_3 defax
def 14253:14265 Update_Sets max_elt_spec1
R14299:14302 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14303:14304 Coq.FSets.FSetCompat Update_Sets In def
R14308:14308 Coq.FSets.FSetCompat <> s var
R14306:14306 Coq.FSets.FSetCompat <> x var
R14290:14292 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14281:14287 Coq.FSets.FSetCompat Update_Sets max_elt def
R14289:14289 Coq.FSets.FSetCompat <> s var
R14293:14296 Coq.Init.Datatypes <> Some constr
R14298:14298 Coq.FSets.FSetCompat <> x var
R14316:14326 Coq.FSets.FSetCompat M max_elt_1 defax
def 14342:14354 Update_Sets max_elt_spec2
R14393:14396 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14403:14406 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14407:14408 Coq.Init.Logic <> ::type_scope:'~'_x not
R14409:14412 Coq.FSets.FSetCompat O lt defax
R14416:14416 Coq.FSets.FSetCompat <> y var
R14414:14414 Coq.FSets.FSetCompat <> x var
R14397:14398 Coq.FSets.FSetCompat Update_Sets In def
R14402:14402 Coq.FSets.FSetCompat <> s var
R14400:14400 Coq.FSets.FSetCompat <> y var
R14384:14386 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14375:14381 Coq.FSets.FSetCompat Update_Sets max_elt def
R14383:14383 Coq.FSets.FSetCompat <> s var
R14387:14390 Coq.Init.Datatypes <> Some constr
R14392:14392 Coq.FSets.FSetCompat <> x var
R14424:14434 Coq.FSets.FSetCompat M max_elt_2 defax
def 14450:14462 Update_Sets max_elt_spec3
R14492:14495 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14496:14500 Coq.FSets.FSetCompat Update_Sets Empty def
R14502:14502 Coq.FSets.FSetCompat <> s var
R14485:14487 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14476:14482 Coq.FSets.FSetCompat Update_Sets max_elt def
R14484:14484 Coq.FSets.FSetCompat <> s var
R14488:14491 Coq.Init.Datatypes <> None constr
R14510:14520 Coq.FSets.FSetCompat M max_elt_3 defax
def 14536:14549 Update_Sets elements_spec2
R14563:14566 Coq.Sorting.Sorted <> sort syndef
R14574:14581 Coq.FSets.FSetCompat Update_Sets elements def
R14583:14583 Coq.FSets.FSetCompat <> s var
R14568:14571 Coq.FSets.FSetCompat O lt defax
R14592:14603 Coq.FSets.FSetCompat M elements_3 defax
def 14619:14630 Update_Sets choose_spec3
R14671:14674 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14693:14696 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14707:14710 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14711:14714 Coq.FSets.FSetCompat O eq defax
R14718:14718 Coq.FSets.FSetCompat <> y var
R14716:14716 Coq.FSets.FSetCompat <> x var
R14697:14701 Coq.FSets.FSetCompat Update_Sets Equal def
R14705:14706 Coq.FSets.FSetCompat <> s' var
R14703:14703 Coq.FSets.FSetCompat <> s var
R14684:14686 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14675:14680 Coq.FSets.FSetCompat Update_Sets choose def
R14682:14683 Coq.FSets.FSetCompat <> s' var
R14687:14690 Coq.Init.Datatypes <> Some constr
R14692:14692 Coq.FSets.FSetCompat <> y var
R14662:14664 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14654:14659 Coq.FSets.FSetCompat Update_Sets choose def
R14661:14661 Coq.FSets.FSetCompat <> s var
R14665:14668 Coq.Init.Datatypes <> Some constr
R14670:14670 Coq.FSets.FSetCompat <> x var
R14726:14735 Coq.FSets.FSetCompat M choose_3 defax
inst 14750:14760 Update_Sets lt_strorder
R14764:14774 Coq.Classes.RelationClasses <> StrictOrder class
R14776:14777 Coq.FSets.FSetCompat Update_Sets lt def
R14822:14832 Coq.FSets.FSetCompat M lt_not_eq defax
R14822:14832 Coq.FSets.FSetCompat M lt_not_eq defax
R14861:14870 Coq.FSets.FSetCompat M lt_trans defax
R14861:14870 Coq.FSets.FSetCompat M lt_trans defax
inst 14892:14900 Update_Sets lt_compat
R14904:14909 Coq.Classes.Morphisms <> Proper class
R14927:14928 Coq.FSets.FSetCompat Update_Sets lt def
R14914:14916 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R14912:14913 Coq.FSets.FSetCompat Update_Sets eq def
R14919:14921 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R14917:14918 Coq.FSets.FSetCompat Update_Sets eq def
R14922:14924 Coq.Init.Logic <> iff def
R14948:14968 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R14948:14968 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R15027:15028 Coq.FSets.FSetCompat Update_Sets lt def
R15027:15028 Coq.FSets.FSetCompat Update_Sets lt def
R15050:15058 Coq.FSets.FSetCompat M compare defax
R15050:15058 Coq.FSets.FSetCompat M compare defax
R15096:15106 Coq.FSets.FSetCompat M lt_not_eq defax
R15096:15106 Coq.FSets.FSetCompat M lt_not_eq defax
R15151:15161 Coq.FSets.FSetCompat M lt_not_eq defax
R15164:15173 Coq.FSets.FSetCompat M lt_trans defax
R15151:15161 Coq.FSets.FSetCompat M lt_not_eq defax
R15164:15173 Coq.FSets.FSetCompat M lt_trans defax
R15201:15209 Coq.FSets.FSetCompat M compare defax
R15201:15209 Coq.FSets.FSetCompat M compare defax
R15247:15257 Coq.FSets.FSetCompat M lt_not_eq defax
R15247:15257 Coq.FSets.FSetCompat M lt_not_eq defax
R15334:15344 Coq.FSets.FSetCompat M lt_not_eq defax
R15347:15356 Coq.FSets.FSetCompat M lt_trans defax
R15334:15344 Coq.FSets.FSetCompat M lt_not_eq defax
R15347:15356 Coq.FSets.FSetCompat M lt_trans defax
def 15401:15407 Update_Sets compare
R15426:15434 Coq.FSets.FSetCompat M compare defax
R15438:15439 Coq.FSets.FSetCompat <> s' var
R15436:15436 Coq.FSets.FSetCompat <> s var
R15452:15453 Coq.Structures.OrderedType <> EQ constr
R15460:15461 Coq.Init.Datatypes <> Eq constr
R15469:15470 Coq.Structures.OrderedType <> LT constr
R15477:15478 Coq.Init.Datatypes <> Lt constr
R15486:15487 Coq.Structures.OrderedType <> GT constr
R15494:15495 Coq.Init.Datatypes <> Gt constr
prf 15514:15525 Update_Sets compare_spec
R15542:15549 Coq.Init.Datatypes <> CompSpec def
R15563:15569 Coq.FSets.FSetCompat Update_Sets compare def
R15573:15574 Coq.FSets.FSetCompat <> s' var
R15571:15571 Coq.FSets.FSetCompat <> s var
R15559:15560 Coq.FSets.FSetCompat <> s' var
R15557:15557 Coq.FSets.FSetCompat <> s var
R15554:15555 Coq.FSets.FSetCompat Update_Sets lt def
R15551:15552 Coq.FSets.FSetCompat Update_Sets eq def
R15602:15608 Coq.FSets.FSetCompat Update_Sets compare def
R15620:15628 Coq.FSets.FSetCompat M compare defax
R15620:15628 Coq.FSets.FSetCompat M compare defax
R15657:15657 Coq.FSets.FSetCompat O <> modtype
mod 15652:15652 <> Update_Sets.E
R15665:15675 Coq.FSets.FSetCompat Update_Sets <> mod

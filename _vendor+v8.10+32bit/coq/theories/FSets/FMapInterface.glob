DIGEST 9b4a735c3b387e154028bb21f28ca49f
FCoq.FSets.FMapInterface
R774:777 Coq.Bool.Bool <> <> lib
R779:791 Coq.Structures.DecidableType <> <> lib
R793:803 Coq.Structures.OrderedType <> <> lib
def 2261:2263 <> Cmp
R2283:2284 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2288:2289 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2290:2293 Coq.Init.Datatypes <> bool ind
R2285:2287 Coq.FSets.FMapInterface <> elt var
R2280:2282 Coq.FSets.FMapInterface <> elt var
R2314:2316 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2305:2307 Coq.FSets.FMapInterface <> cmp var
R2312:2313 Coq.FSets.FMapInterface <> e2 var
R2309:2310 Coq.FSets.FMapInterface <> e1 var
R2317:2320 Coq.Init.Datatypes <> true constr
R2515:2527 Coq.Structures.DecidableType DecidableType <> mod
modtype 2504:2508 <> WSfun
def 2545:2547 WSfun key
R2552:2554 Coq.FSets.FMapInterface E t defax
R2576:2578 Coq.FSets.FMapInterface WSfun key def
ax 2601:2601 WSfun t
R2609:2612 Coq.Init.Logic <> ::type_scope:x_'->'_x not
sec 2665:2669 WSfun Types
var 2686:2688 WSfun.Types elt
ax 2711:2715 WSfun empty
R2719:2719 Coq.FSets.FMapInterface WSfun t defax
R2721:2723 Coq.FSets.FMapInterface <> WSfun.Types.elt var
ax 2767:2774 WSfun is_empty
R2783:2786 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2787:2790 Coq.Init.Datatypes <> bool ind
R2778:2778 Coq.FSets.FMapInterface WSfun t defax
R2780:2782 Coq.FSets.FMapInterface <> WSfun.Types.elt var
ax 2855:2857 WSfun add
R2864:2867 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2871:2874 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2880:2883 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2884:2884 Coq.FSets.FMapInterface WSfun t defax
R2886:2888 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R2875:2875 Coq.FSets.FMapInterface WSfun t defax
R2877:2879 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R2868:2870 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R2861:2863 Coq.FSets.FMapInterface WSfun key def
ax 3078:3081 WSfun find
R3088:3091 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3097:3100 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3101:3106 Coq.Init.Datatypes <> option ind
R3108:3110 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R3092:3092 Coq.FSets.FMapInterface WSfun t defax
R3094:3096 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R3085:3087 Coq.FSets.FMapInterface WSfun key def
ax 3231:3236 WSfun remove
R3243:3246 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3252:3255 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3256:3256 Coq.FSets.FMapInterface WSfun t defax
R3258:3260 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R3247:3247 Coq.FSets.FMapInterface WSfun t defax
R3249:3251 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R3240:3242 Coq.FSets.FMapInterface WSfun key def
ax 3407:3409 WSfun mem
R3416:3419 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3425:3428 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3429:3432 Coq.Init.Datatypes <> bool ind
R3420:3420 Coq.FSets.FMapInterface WSfun t defax
R3422:3424 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R3413:3415 Coq.FSets.FMapInterface WSfun key def
var 3544:3547 WSfun.Types elt'
var 3549:3553 WSfun.Types elt''
ax 3578:3580 WSfun map
R3584:3584 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3596:3600 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3606:3609 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3610:3610 Coq.FSets.FMapInterface WSfun t defax
R3612:3615 Coq.FSets.FMapInterface <> WSfun.Types.elt' var
R3601:3601 Coq.FSets.FMapInterface WSfun t defax
R3603:3605 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R3588:3591 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3592:3595 Coq.FSets.FMapInterface <> WSfun.Types.elt' var
R3585:3587 Coq.FSets.FMapInterface <> WSfun.Types.elt var
ax 3918:3921 WSfun mapi
R3925:3925 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3944:3948 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3954:3957 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3958:3958 Coq.FSets.FMapInterface WSfun t defax
R3960:3963 Coq.FSets.FMapInterface <> WSfun.Types.elt' var
R3949:3949 Coq.FSets.FMapInterface WSfun t defax
R3951:3953 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R3929:3932 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3936:3939 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3940:3943 Coq.FSets.FMapInterface <> WSfun.Types.elt' var
R3933:3935 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R3926:3928 Coq.FSets.FMapInterface WSfun key def
ax 4114:4117 WSfun map2
R4126:4126 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4168:4172 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4178:4181 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4188:4192 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4193:4193 Coq.FSets.FMapInterface WSfun t defax
R4195:4199 Coq.FSets.FMapInterface <> WSfun.Types.elt'' var
R4182:4182 Coq.FSets.FMapInterface WSfun t defax
R4184:4187 Coq.FSets.FMapInterface <> WSfun.Types.elt' var
R4173:4173 Coq.FSets.FMapInterface WSfun t defax
R4175:4177 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R4137:4140 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4152:4155 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4156:4161 Coq.Init.Datatypes <> option ind
R4163:4167 Coq.FSets.FMapInterface <> WSfun.Types.elt'' var
R4141:4146 Coq.Init.Datatypes <> option ind
R4148:4151 Coq.FSets.FMapInterface <> WSfun.Types.elt' var
R4127:4132 Coq.Init.Datatypes <> option ind
R4134:4136 Coq.FSets.FMapInterface <> WSfun.Types.elt var
ax 4475:4482 WSfun elements
R4491:4494 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4495:4498 Coq.Init.Datatypes <> list ind
R4504:4504 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R4501:4503 Coq.FSets.FMapInterface WSfun key def
R4505:4507 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R4486:4486 Coq.FSets.FMapInterface WSfun t defax
R4488:4490 Coq.FSets.FMapInterface <> WSfun.Types.elt var
ax 4632:4639 WSfun cardinal
R4648:4651 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4652:4654 Coq.Init.Datatypes <> nat ind
R4643:4643 Coq.FSets.FMapInterface WSfun t defax
R4645:4647 Coq.FSets.FMapInterface <> WSfun.Types.elt var
ax 4735:4738 WSfun fold
R4758:4758 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4779:4783 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4789:4792 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4794:4797 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4798:4798 Coq.FSets.FMapInterface <> A var
R4793:4793 Coq.FSets.FMapInterface <> A var
R4784:4784 Coq.FSets.FMapInterface WSfun t defax
R4786:4788 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R4762:4765 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4769:4772 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4774:4777 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4778:4778 Coq.FSets.FMapInterface <> A var
R4773:4773 Coq.FSets.FMapInterface <> A var
R4766:4768 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R4759:4761 Coq.FSets.FMapInterface WSfun key def
ax 4998:5002 WSfun equal
R5006:5006 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5025:5029 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5035:5038 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5044:5047 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5048:5051 Coq.Init.Datatypes <> bool ind
R5039:5039 Coq.FSets.FMapInterface WSfun t defax
R5041:5043 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R5030:5030 Coq.FSets.FMapInterface WSfun t defax
R5032:5034 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R5010:5013 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5017:5020 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5021:5024 Coq.Init.Datatypes <> bool ind
R5014:5016 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R5007:5009 Coq.FSets.FMapInterface <> WSfun.Types.elt var
sec 5309:5312 WSfun.Types Spec
var 5331:5331 WSfun.Types.Spec m
var 5333:5334 WSfun.Types.Spec m'
var 5336:5338 WSfun.Types.Spec m''
R5342:5342 Coq.FSets.FMapInterface WSfun t defax
R5344:5346 Coq.FSets.FMapInterface <> WSfun.Types.elt var
var 5364:5364 WSfun.Types.Spec x
var 5366:5366 WSfun.Types.Spec y
var 5368:5368 WSfun.Types.Spec z
R5372:5374 Coq.FSets.FMapInterface WSfun key def
var 5392:5392 WSfun.Types.Spec e
var 5394:5395 WSfun.Types.Spec e'
R5399:5401 Coq.FSets.FMapInterface <> WSfun.Types.elt var
ax 5421:5426 WSfun MapsTo
R5433:5436 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5440:5443 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5449:5452 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5444:5444 Coq.FSets.FMapInterface WSfun t defax
R5446:5448 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R5437:5439 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R5430:5432 Coq.FSets.FMapInterface WSfun key def
def 5477:5478 WSfun In
R5483:5485 Coq.FSets.FMapInterface WSfun key def
R5491:5491 Coq.FSets.FMapInterface WSfun t defax
R5493:5495 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R5508:5514 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5520:5521 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R5517:5519 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R5522:5527 Coq.FSets.FMapInterface WSfun MapsTo defax
R5533:5533 Coq.FSets.FMapInterface <> m var
R5531:5531 Coq.FSets.FMapInterface <> e var
R5529:5529 Coq.FSets.FMapInterface <> k var
def 5554:5558 WSfun Empty
R5577:5579 Coq.FSets.FMapInterface WSfun key def
R5584:5586 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R5591:5592 Coq.Init.Logic <> ::type_scope:'~'_x not
R5593:5598 Coq.FSets.FMapInterface WSfun MapsTo defax
R5604:5604 Coq.FSets.FMapInterface <> m var
R5602:5602 Coq.FSets.FMapInterface <> e var
R5600:5600 Coq.FSets.FMapInterface <> a var
def 5625:5630 WSfun eq_key
R5641:5641 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R5638:5640 Coq.FSets.FMapInterface WSfun key def
R5642:5644 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R5650:5653 Coq.FSets.FMapInterface E eq defax
R5664:5666 Coq.Init.Datatypes <> fst def
R5668:5669 Coq.FSets.FMapInterface <> p' var
R5656:5658 Coq.Init.Datatypes <> fst def
R5660:5660 Coq.FSets.FMapInterface <> p var
def 5691:5700 WSfun eq_key_elt
R5711:5711 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R5708:5710 Coq.FSets.FMapInterface WSfun key def
R5712:5714 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R5751:5754 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5730:5733 Coq.FSets.FMapInterface E eq defax
R5744:5746 Coq.Init.Datatypes <> fst def
R5748:5749 Coq.FSets.FMapInterface <> p' var
R5736:5738 Coq.Init.Datatypes <> fst def
R5740:5740 Coq.FSets.FMapInterface <> p var
R5755:5755 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5761:5765 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5772:5772 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5756:5758 Coq.Init.Datatypes <> snd def
R5760:5760 Coq.FSets.FMapInterface <> p var
R5766:5768 Coq.Init.Datatypes <> snd def
R5770:5771 Coq.FSets.FMapInterface <> p' var
ax 5829:5836 WSfun MapsTo_1
R5848:5851 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5864:5867 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5868:5873 Coq.FSets.FMapInterface WSfun MapsTo defax
R5879:5879 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R5877:5877 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R5875:5875 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R5852:5857 Coq.FSets.FMapInterface WSfun MapsTo defax
R5863:5863 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R5861:5861 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R5859:5859 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R5840:5843 Coq.FSets.FMapInterface E eq defax
R5847:5847 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R5845:5845 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
ax 5933:5937 WSfun mem_1
R5947:5950 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5958:5960 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5951:5953 Coq.FSets.FMapInterface WSfun mem defax
R5957:5957 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R5955:5955 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R5961:5964 Coq.Init.Datatypes <> true constr
R5941:5942 Coq.FSets.FMapInterface WSfun In def
R5946:5946 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R5944:5944 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
ax 5983:5987 WSfun mem_2
R6005:6008 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6009:6010 Coq.FSets.FMapInterface WSfun In def
R6014:6014 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6012:6012 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R5998:6000 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5991:5993 Coq.FSets.FMapInterface WSfun mem defax
R5997:5997 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R5995:5995 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6001:6004 Coq.Init.Datatypes <> true constr
ax 6070:6076 WSfun empty_1
R6080:6084 Coq.FSets.FMapInterface WSfun Empty def
R6086:6090 Coq.FSets.FMapInterface WSfun empty defax
ax 6149:6158 WSfun is_empty_1
R6169:6172 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6183:6185 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6173:6180 Coq.FSets.FMapInterface WSfun is_empty defax
R6182:6182 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6186:6189 Coq.Init.Datatypes <> true constr
R6162:6166 Coq.FSets.FMapInterface WSfun Empty def
R6168:6168 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
ax 6208:6217 WSfun is_empty_2
R6238:6241 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6242:6246 Coq.FSets.FMapInterface WSfun Empty def
R6248:6248 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6231:6233 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6221:6228 Coq.FSets.FMapInterface WSfun is_empty defax
R6230:6230 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6234:6237 Coq.Init.Datatypes <> true constr
ax 6302:6306 WSfun add_1
R6318:6321 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6322:6327 Coq.FSets.FMapInterface WSfun MapsTo defax
R6334:6336 Coq.FSets.FMapInterface WSfun add defax
R6342:6342 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6340:6340 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6338:6338 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6331:6331 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6329:6329 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6310:6313 Coq.FSets.FMapInterface E eq defax
R6317:6317 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6315:6315 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
ax 6362:6366 WSfun add_2
R6380:6383 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6396:6399 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6400:6405 Coq.FSets.FMapInterface WSfun MapsTo defax
R6412:6414 Coq.FSets.FMapInterface WSfun add defax
R6421:6421 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6418:6419 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e' var
R6416:6416 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6409:6409 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6407:6407 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6384:6389 Coq.FSets.FMapInterface WSfun MapsTo defax
R6395:6395 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6393:6393 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6391:6391 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6370:6371 Coq.Init.Logic <> ::type_scope:'~'_x not
R6372:6375 Coq.FSets.FMapInterface E eq defax
R6379:6379 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6377:6377 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
ax 6441:6445 WSfun add_3
R6459:6462 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6486:6489 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6490:6495 Coq.FSets.FMapInterface WSfun MapsTo defax
R6501:6501 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6499:6499 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6497:6497 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6463:6468 Coq.FSets.FMapInterface WSfun MapsTo defax
R6475:6477 Coq.FSets.FMapInterface WSfun add defax
R6484:6484 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6481:6482 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e' var
R6479:6479 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6472:6472 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6470:6470 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6449:6450 Coq.Init.Logic <> ::type_scope:'~'_x not
R6451:6454 Coq.FSets.FMapInterface E eq defax
R6458:6458 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6456:6456 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
ax 6558:6565 WSfun remove_1
R6577:6580 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6581:6582 Coq.Init.Logic <> ::type_scope:'~'_x not
R6583:6584 Coq.FSets.FMapInterface WSfun In def
R6589:6594 Coq.FSets.FMapInterface WSfun remove defax
R6598:6598 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6596:6596 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6586:6586 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6569:6572 Coq.FSets.FMapInterface E eq defax
R6576:6576 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6574:6574 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
ax 6618:6625 WSfun remove_2
R6639:6642 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6655:6658 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6659:6664 Coq.FSets.FMapInterface WSfun MapsTo defax
R6671:6676 Coq.FSets.FMapInterface WSfun remove defax
R6680:6680 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6678:6678 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6668:6668 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6666:6666 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6643:6648 Coq.FSets.FMapInterface WSfun MapsTo defax
R6654:6654 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6652:6652 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6650:6650 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6629:6630 Coq.Init.Logic <> ::type_scope:'~'_x not
R6631:6634 Coq.FSets.FMapInterface E eq defax
R6638:6638 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6636:6636 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
ax 6700:6707 WSfun remove_3
R6734:6737 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6738:6743 Coq.FSets.FMapInterface WSfun MapsTo defax
R6749:6749 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6747:6747 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6745:6745 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
R6711:6716 Coq.FSets.FMapInterface WSfun MapsTo defax
R6723:6728 Coq.FSets.FMapInterface WSfun remove defax
R6732:6732 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6730:6730 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6720:6720 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6718:6718 Coq.FSets.FMapInterface <> WSfun.Types.Spec.y var
ax 6804:6809 WSfun find_1
R6825:6828 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6837:6839 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6829:6832 Coq.FSets.FMapInterface WSfun find defax
R6836:6836 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6834:6834 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6840:6843 Coq.Init.Datatypes <> Some constr
R6845:6845 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6813:6818 Coq.FSets.FMapInterface WSfun MapsTo defax
R6824:6824 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6822:6822 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6820:6820 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
ax 6864:6869 WSfun find_2
R6890:6893 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6894:6899 Coq.FSets.FMapInterface WSfun MapsTo defax
R6905:6905 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6903:6903 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6901:6901 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6881:6883 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6873:6876 Coq.FSets.FMapInterface WSfun find defax
R6880:6880 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6878:6878 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R6884:6887 Coq.Init.Datatypes <> Some constr
R6889:6889 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
ax 6964:6973 WSfun elements_1
R6997:7000 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7001:7003 Coq.Lists.SetoidList <> InA ind
R7023:7030 Coq.FSets.FMapInterface WSfun elements defax
R7032:7032 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R7016:7016 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7018:7018 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7020:7020 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7017:7017 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R7019:7019 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R7005:7014 Coq.FSets.FMapInterface WSfun eq_key_elt def
R6985:6990 Coq.FSets.FMapInterface WSfun MapsTo defax
R6996:6996 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R6994:6994 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R6992:6992 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
ax 7052:7061 WSfun elements_2
R7106:7109 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7110:7115 Coq.FSets.FMapInterface WSfun MapsTo defax
R7121:7121 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R7119:7119 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R7117:7117 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R7073:7075 Coq.Lists.SetoidList <> InA ind
R7095:7102 Coq.FSets.FMapInterface WSfun elements defax
R7104:7104 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R7088:7088 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7090:7090 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7092:7092 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7089:7089 Coq.FSets.FMapInterface <> WSfun.Types.Spec.x var
R7091:7091 Coq.FSets.FMapInterface <> WSfun.Types.Spec.e var
R7077:7086 Coq.FSets.FMapInterface WSfun eq_key_elt def
ax 7247:7257 WSfun elements_3w
R7261:7266 Coq.Lists.SetoidList <> NoDupA ind
R7276:7283 Coq.FSets.FMapInterface WSfun elements defax
R7285:7285 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R7268:7273 Coq.FSets.FMapInterface WSfun eq_key def
ax 7345:7354 WSfun cardinal_1
R7368:7370 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7358:7365 Coq.FSets.FMapInterface WSfun cardinal defax
R7367:7367 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R7371:7376 Coq.Init.Datatypes <> length def
R7379:7386 Coq.FSets.FMapInterface WSfun elements defax
R7388:7388 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
ax 7444:7449 WSfun fold_1
R7477:7477 Coq.FSets.FMapInterface <> A var
R7488:7491 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7495:7498 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7500:7503 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7504:7504 Coq.FSets.FMapInterface <> A var
R7499:7499 Coq.FSets.FMapInterface <> A var
R7492:7494 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R7485:7487 Coq.FSets.FMapInterface WSfun key def
R7526:7528 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7516:7519 Coq.FSets.FMapInterface WSfun fold defax
R7525:7525 Coq.FSets.FMapInterface <> i var
R7523:7523 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R7521:7521 Coq.FSets.FMapInterface <> f var
R7529:7537 Coq.Lists.List <> fold_left def
R7585:7585 Coq.FSets.FMapInterface <> i var
R7573:7580 Coq.FSets.FMapInterface WSfun elements defax
R7582:7582 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R7551:7551 Coq.FSets.FMapInterface <> f var
R7569:7569 Coq.FSets.FMapInterface <> a var
R7562:7564 Coq.Init.Datatypes <> snd def
R7566:7566 Coq.FSets.FMapInterface <> p var
R7554:7556 Coq.Init.Datatypes <> fst def
R7558:7558 Coq.FSets.FMapInterface <> p var
def 8479:8483 WSfun Equal
R8511:8513 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8503:8506 Coq.FSets.FMapInterface WSfun find defax
R8510:8510 Coq.FSets.FMapInterface <> m var
R8508:8508 Coq.FSets.FMapInterface <> y var
R8514:8517 Coq.FSets.FMapInterface WSfun find defax
R8521:8522 Coq.FSets.FMapInterface <> m' var
R8519:8519 Coq.FSets.FMapInterface <> y var
def 8541:8545 WSfun Equiv
R8558:8559 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8563:8564 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8560:8562 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R8555:8557 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R8588:8588 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8617:8631 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8692:8692 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8605:8609 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R8599:8600 Coq.FSets.FMapInterface WSfun In def
R8604:8604 Coq.FSets.FMapInterface <> m var
R8602:8602 Coq.FSets.FMapInterface <> k var
R8610:8611 Coq.FSets.FMapInterface WSfun In def
R8615:8616 Coq.FSets.FMapInterface <> m' var
R8613:8613 Coq.FSets.FMapInterface <> k var
R8659:8662 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8677:8680 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8681:8686 Coq.FSets.FMapInterface <> eq_elt var
R8690:8691 Coq.FSets.FMapInterface <> e' var
R8688:8688 Coq.FSets.FMapInterface <> e var
R8663:8668 Coq.FSets.FMapInterface WSfun MapsTo defax
R8675:8676 Coq.FSets.FMapInterface <> m' var
R8672:8673 Coq.FSets.FMapInterface <> e' var
R8670:8670 Coq.FSets.FMapInterface <> k var
R8647:8652 Coq.FSets.FMapInterface WSfun MapsTo defax
R8658:8658 Coq.FSets.FMapInterface <> m var
R8656:8656 Coq.FSets.FMapInterface <> e var
R8654:8654 Coq.FSets.FMapInterface <> k var
def 8711:8716 WSfun Equivb
R8727:8728 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8732:8733 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8734:8737 Coq.Init.Datatypes <> bool ind
R8729:8731 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R8724:8726 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R8743:8747 Coq.FSets.FMapInterface WSfun Equiv def
R8750:8752 Coq.FSets.FMapInterface <> Cmp def
R8754:8756 Coq.FSets.FMapInterface <> cmp var
var 8813:8815 WSfun.Types.Spec cmp
R8822:8825 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8829:8832 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8833:8836 Coq.Init.Datatypes <> bool ind
R8826:8828 Coq.FSets.FMapInterface <> WSfun.Types.elt var
R8819:8821 Coq.FSets.FMapInterface <> WSfun.Types.elt var
ax 8855:8861 WSfun equal_1
R8880:8883 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8898:8900 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8884:8888 Coq.FSets.FMapInterface WSfun equal defax
R8896:8897 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m' var
R8894:8894 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R8890:8892 Coq.FSets.FMapInterface <> WSfun.Types.Spec.cmp var
R8901:8904 Coq.Init.Datatypes <> true constr
R8865:8870 Coq.FSets.FMapInterface WSfun Equivb def
R8878:8879 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m' var
R8876:8876 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R8872:8874 Coq.FSets.FMapInterface <> WSfun.Types.Spec.cmp var
ax 8922:8928 WSfun equal_2
R8953:8956 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8957:8962 Coq.FSets.FMapInterface WSfun Equivb def
R8970:8971 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m' var
R8968:8968 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R8964:8966 Coq.FSets.FMapInterface <> WSfun.Types.Spec.cmp var
R8946:8948 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8932:8936 Coq.FSets.FMapInterface WSfun equal defax
R8944:8945 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m' var
R8942:8942 Coq.FSets.FMapInterface <> WSfun.Types.Spec.m var
R8938:8940 Coq.FSets.FMapInterface <> WSfun.Types.Spec.cmp var
R8949:8952 Coq.Init.Datatypes <> true constr
R8983:8986 Coq.FSets.FMapInterface WSfun.Types.Spec <> sec
R8996:9000 Coq.FSets.FMapInterface WSfun.Types <> sec
ax 9054:9058 WSfun map_1
R9088:9088 Coq.FSets.FMapInterface WSfun t defax
R9090:9092 Coq.FSets.FMapInterface <> elt var
R9097:9099 Coq.FSets.FMapInterface WSfun key def
R9104:9106 Coq.FSets.FMapInterface <> elt var
R9114:9115 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9116:9119 Coq.FSets.FMapInterface <> elt' var
R9111:9113 Coq.FSets.FMapInterface <> elt var
R9143:9146 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9147:9152 Coq.FSets.FMapInterface WSfun MapsTo defax
R9163:9165 Coq.FSets.FMapInterface WSfun map defax
R9169:9169 Coq.FSets.FMapInterface <> m var
R9167:9167 Coq.FSets.FMapInterface <> f var
R9157:9157 Coq.FSets.FMapInterface <> f var
R9159:9159 Coq.FSets.FMapInterface <> e var
R9154:9154 Coq.FSets.FMapInterface <> x var
R9131:9136 Coq.FSets.FMapInterface WSfun MapsTo defax
R9142:9142 Coq.FSets.FMapInterface <> m var
R9140:9140 Coq.FSets.FMapInterface <> e var
R9138:9138 Coq.FSets.FMapInterface <> x var
ax 9189:9193 WSfun map_2
R9223:9223 Coq.FSets.FMapInterface WSfun t defax
R9225:9227 Coq.FSets.FMapInterface <> elt var
R9232:9234 Coq.FSets.FMapInterface WSfun key def
R9242:9243 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9244:9247 Coq.FSets.FMapInterface <> elt' var
R9239:9241 Coq.FSets.FMapInterface <> elt var
R9273:9276 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9277:9278 Coq.FSets.FMapInterface WSfun In def
R9282:9282 Coq.FSets.FMapInterface <> m var
R9280:9280 Coq.FSets.FMapInterface <> x var
R9259:9260 Coq.FSets.FMapInterface WSfun In def
R9265:9267 Coq.FSets.FMapInterface WSfun map defax
R9271:9271 Coq.FSets.FMapInterface <> m var
R9269:9269 Coq.FSets.FMapInterface <> f var
R9262:9262 Coq.FSets.FMapInterface <> x var
ax 9337:9342 WSfun mapi_1
R9372:9372 Coq.FSets.FMapInterface WSfun t defax
R9374:9376 Coq.FSets.FMapInterface <> elt var
R9381:9383 Coq.FSets.FMapInterface WSfun key def
R9388:9390 Coq.FSets.FMapInterface <> elt var
R9407:9408 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9412:9413 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9414:9417 Coq.FSets.FMapInterface <> elt' var
R9409:9411 Coq.FSets.FMapInterface <> elt var
R9404:9406 Coq.FSets.FMapInterface WSfun key def
R9433:9444 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9445:9451 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R9453:9454 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R9463:9466 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R9455:9458 Coq.FSets.FMapInterface E eq defax
R9462:9462 Coq.FSets.FMapInterface <> x var
R9460:9460 Coq.FSets.FMapInterface <> y var
R9467:9472 Coq.FSets.FMapInterface WSfun MapsTo defax
R9485:9488 Coq.FSets.FMapInterface WSfun mapi defax
R9492:9492 Coq.FSets.FMapInterface <> m var
R9490:9490 Coq.FSets.FMapInterface <> f var
R9477:9477 Coq.FSets.FMapInterface <> f var
R9481:9481 Coq.FSets.FMapInterface <> e var
R9479:9479 Coq.FSets.FMapInterface <> y var
R9474:9474 Coq.FSets.FMapInterface <> x var
R9421:9426 Coq.FSets.FMapInterface WSfun MapsTo defax
R9432:9432 Coq.FSets.FMapInterface <> m var
R9430:9430 Coq.FSets.FMapInterface <> e var
R9428:9428 Coq.FSets.FMapInterface <> x var
ax 9512:9517 WSfun mapi_2
R9547:9547 Coq.FSets.FMapInterface WSfun t defax
R9549:9551 Coq.FSets.FMapInterface <> elt var
R9556:9558 Coq.FSets.FMapInterface WSfun key def
R9575:9576 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9580:9581 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9582:9585 Coq.FSets.FMapInterface <> elt' var
R9577:9579 Coq.FSets.FMapInterface <> elt var
R9572:9574 Coq.FSets.FMapInterface WSfun key def
R9604:9607 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9608:9609 Coq.FSets.FMapInterface WSfun In def
R9613:9613 Coq.FSets.FMapInterface <> m var
R9611:9611 Coq.FSets.FMapInterface <> x var
R9589:9590 Coq.FSets.FMapInterface WSfun In def
R9595:9598 Coq.FSets.FMapInterface WSfun mapi defax
R9602:9602 Coq.FSets.FMapInterface <> m var
R9600:9600 Coq.FSets.FMapInterface <> f var
R9592:9592 Coq.FSets.FMapInterface <> x var
ax 9668:9673 WSfun map2_1
R9709:9709 Coq.FSets.FMapInterface WSfun t defax
R9711:9713 Coq.FSets.FMapInterface <> elt var
R9720:9720 Coq.FSets.FMapInterface WSfun t defax
R9722:9725 Coq.FSets.FMapInterface <> elt' var
R9732:9734 Coq.FSets.FMapInterface WSfun key def
R9749:9750 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9762:9763 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9764:9769 Coq.Init.Datatypes <> option ind
R9771:9775 Coq.FSets.FMapInterface <> elt'' var
R9751:9756 Coq.Init.Datatypes <> option ind
R9758:9761 Coq.FSets.FMapInterface <> elt' var
R9739:9744 Coq.Init.Datatypes <> option ind
R9746:9748 Coq.FSets.FMapInterface <> elt var
R9797:9808 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9829:9831 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9809:9812 Coq.FSets.FMapInterface WSfun find defax
R9817:9820 Coq.FSets.FMapInterface WSfun map2 defax
R9826:9827 Coq.FSets.FMapInterface <> m' var
R9824:9824 Coq.FSets.FMapInterface <> m var
R9822:9822 Coq.FSets.FMapInterface <> f var
R9814:9814 Coq.FSets.FMapInterface <> x var
R9832:9832 Coq.FSets.FMapInterface <> f var
R9846:9849 Coq.FSets.FMapInterface WSfun find defax
R9853:9854 Coq.FSets.FMapInterface <> m' var
R9851:9851 Coq.FSets.FMapInterface <> x var
R9835:9838 Coq.FSets.FMapInterface WSfun find defax
R9842:9842 Coq.FSets.FMapInterface <> m var
R9840:9840 Coq.FSets.FMapInterface <> x var
R9786:9789 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R9780:9781 Coq.FSets.FMapInterface WSfun In def
R9785:9785 Coq.FSets.FMapInterface <> m var
R9783:9783 Coq.FSets.FMapInterface <> x var
R9790:9791 Coq.FSets.FMapInterface WSfun In def
R9795:9796 Coq.FSets.FMapInterface <> m' var
R9793:9793 Coq.FSets.FMapInterface <> x var
ax 9874:9879 WSfun map2_2
R9915:9915 Coq.FSets.FMapInterface WSfun t defax
R9917:9919 Coq.FSets.FMapInterface <> elt var
R9926:9926 Coq.FSets.FMapInterface WSfun t defax
R9928:9931 Coq.FSets.FMapInterface <> elt' var
R9938:9940 Coq.FSets.FMapInterface WSfun key def
R9955:9956 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9968:9969 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9970:9975 Coq.Init.Datatypes <> option ind
R9977:9981 Coq.FSets.FMapInterface <> elt'' var
R9957:9962 Coq.Init.Datatypes <> option ind
R9964:9967 Coq.FSets.FMapInterface <> elt' var
R9945:9950 Coq.Init.Datatypes <> option ind
R9952:9954 Coq.FSets.FMapInterface <> elt var
R10011:10014 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10021:10024 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R10015:10016 Coq.FSets.FMapInterface WSfun In def
R10020:10020 Coq.FSets.FMapInterface <> m var
R10018:10018 Coq.FSets.FMapInterface <> x var
R10025:10026 Coq.FSets.FMapInterface WSfun In def
R10030:10031 Coq.FSets.FMapInterface <> m' var
R10028:10028 Coq.FSets.FMapInterface <> x var
R9993:9994 Coq.FSets.FMapInterface WSfun In def
R9999:10002 Coq.FSets.FMapInterface WSfun map2 defax
R10008:10009 Coq.FSets.FMapInterface <> m' var
R10006:10006 Coq.FSets.FMapInterface <> m var
R10004:10004 Coq.FSets.FMapInterface <> f var
R9996:9996 Coq.FSets.FMapInterface <> x var
R10255:10259 Coq.FSets.FMapInterface WSfun <> modtype
modtype 10381:10382 <> WS
R10406:10418 Coq.Structures.DecidableType DecidableType <> mod
mod 10402:10402 <> WS.E
R10431:10435 Coq.FSets.FMapInterface WSfun <> mod
R10437:10437 Coq.FSets.FMapInterface WS.E <> modtype
R10444:10445 Coq.FSets.FMapInterface WS <> modtype
R10527:10537 Coq.Structures.OrderedType OrderedType <> mod
modtype 10517:10520 <> Sfun
R10551:10555 Coq.FSets.FMapInterface WSfun <> mod
R10557:10557 Coq.FSets.FMapInterface E <> modtype
sec 10570:10572 Sfun elt
var 10586:10588 Sfun.elt elt
def 10610:10615 Sfun lt_key
R10626:10626 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R10623:10625 Coq.FSets.FMapInterface Sfun key def
R10627:10629 Coq.FSets.FMapInterface <> Sfun.elt.elt var
R10635:10638 Coq.FSets.FMapInterface E lt defax
R10649:10651 Coq.Init.Datatypes <> fst def
R10653:10654 Coq.FSets.FMapInterface <> p' var
R10641:10643 Coq.Init.Datatypes <> fst def
R10645:10645 Coq.FSets.FMapInterface <> p var
ax 10719:10728 Sfun elements_3
R10742:10745 Coq.Sorting.Sorted <> sort syndef
R10755:10762 Coq.FSets.FMapInterface Sfun elements defax
R10764:10764 Coq.FSets.FMapInterface <> m var
R10747:10752 Coq.FSets.FMapInterface Sfun lt_key def
R10981:10983 Coq.FSets.FMapInterface Sfun.elt <> sec
R10990:10993 Coq.FSets.FMapInterface Sfun <> modtype
modtype 11069:11069 <> S
R11093:11103 Coq.Structures.OrderedType OrderedType <> mod
mod 11089:11089 <> S.E
R11116:11119 Coq.FSets.FMapInterface Sfun <> mod
R11121:11121 Coq.FSets.FMapInterface S.E <> modtype
R11128:11128 Coq.FSets.FMapInterface S <> modtype
modtype 11199:11202 <> Sord
R11230:11240 Coq.Structures.OrderedType OrderedType <> mod
mod 11223:11226 <> Sord.Data
R11267:11267 Coq.FSets.FMapInterface S <> mod
mod 11260:11263 <> Sord.MapS
def 11299:11299 Sord t
R11304:11309 Coq.FSets.FMapInterface Sord t defax
R11311:11316 Coq.FSets.FMapInterface Sord t defax
ax 11332:11333 Sord eq
R11338:11341 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11343:11346 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11342:11342 Coq.FSets.FMapInterface Sord t def
R11337:11337 Coq.FSets.FMapInterface Sord t def
ax 11365:11366 Sord lt
R11371:11374 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11376:11379 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11375:11375 Coq.FSets.FMapInterface Sord t def
R11370:11370 Coq.FSets.FMapInterface Sord t def
ax 11395:11401 Sord eq_refl
R11416:11416 Coq.FSets.FMapInterface Sord t def
R11419:11420 Coq.FSets.FMapInterface Sord eq defax
R11424:11424 Coq.FSets.FMapInterface <> m var
R11422:11422 Coq.FSets.FMapInterface <> m var
ax 11435:11440 Sord eq_sym
R11459:11459 Coq.FSets.FMapInterface Sord t def
R11470:11473 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11474:11475 Coq.FSets.FMapInterface Sord eq defax
R11480:11481 Coq.FSets.FMapInterface <> m1 var
R11477:11478 Coq.FSets.FMapInterface <> m2 var
R11462:11463 Coq.FSets.FMapInterface Sord eq defax
R11468:11469 Coq.FSets.FMapInterface <> m2 var
R11465:11466 Coq.FSets.FMapInterface <> m1 var
ax 11492:11499 Sord eq_trans
R11521:11521 Coq.FSets.FMapInterface Sord t def
R11532:11535 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11544:11547 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11548:11549 Coq.FSets.FMapInterface Sord eq defax
R11554:11555 Coq.FSets.FMapInterface <> m3 var
R11551:11552 Coq.FSets.FMapInterface <> m1 var
R11536:11537 Coq.FSets.FMapInterface Sord eq defax
R11542:11543 Coq.FSets.FMapInterface <> m3 var
R11539:11540 Coq.FSets.FMapInterface <> m2 var
R11524:11525 Coq.FSets.FMapInterface Sord eq defax
R11530:11531 Coq.FSets.FMapInterface <> m2 var
R11527:11528 Coq.FSets.FMapInterface <> m1 var
ax 11566:11573 Sord lt_trans
R11595:11595 Coq.FSets.FMapInterface Sord t def
R11606:11609 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11618:11621 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11622:11623 Coq.FSets.FMapInterface Sord lt defax
R11628:11629 Coq.FSets.FMapInterface <> m3 var
R11625:11626 Coq.FSets.FMapInterface <> m1 var
R11610:11611 Coq.FSets.FMapInterface Sord lt defax
R11616:11617 Coq.FSets.FMapInterface <> m3 var
R11613:11614 Coq.FSets.FMapInterface <> m2 var
R11598:11599 Coq.FSets.FMapInterface Sord lt defax
R11604:11605 Coq.FSets.FMapInterface <> m2 var
R11601:11602 Coq.FSets.FMapInterface <> m1 var
ax 11640:11648 Sord lt_not_eq
R11667:11667 Coq.FSets.FMapInterface Sord t def
R11678:11681 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11682:11683 Coq.Init.Logic <> ::type_scope:'~'_x not
R11684:11685 Coq.FSets.FMapInterface Sord eq defax
R11690:11691 Coq.FSets.FMapInterface <> m2 var
R11687:11688 Coq.FSets.FMapInterface <> m1 var
R11670:11671 Coq.FSets.FMapInterface Sord lt defax
R11676:11677 Coq.FSets.FMapInterface <> m2 var
R11673:11674 Coq.FSets.FMapInterface <> m1 var
def 11708:11710 Sord cmp
R11726:11737 Coq.FSets.FMapInterface Sord compare defax
R11741:11742 Coq.FSets.FMapInterface <> e' var
R11739:11739 Coq.FSets.FMapInterface <> e var
R11749:11750 Coq.Structures.OrderedType <> EQ constr
R11757:11760 Coq.Init.Datatypes <> true constr
R11769:11773 Coq.Init.Datatypes <> false constr
ax 11793:11796 Sord eq_1
R11828:11831 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11832:11833 Coq.FSets.FMapInterface Sord eq defax
R11837:11838 Coq.FSets.FMapInterface <> m' var
R11835:11835 Coq.FSets.FMapInterface <> m var
R11813:11818 Coq.FSets.FMapInterface Sord Equivb def
R11826:11827 Coq.FSets.FMapInterface <> m' var
R11824:11824 Coq.FSets.FMapInterface <> m var
R11820:11822 Coq.FSets.FMapInterface Sord cmp def
ax 11853:11856 Sord eq_2
R11880:11883 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11884:11889 Coq.FSets.FMapInterface Sord Equivb def
R11897:11898 Coq.FSets.FMapInterface <> m' var
R11895:11895 Coq.FSets.FMapInterface <> m var
R11891:11893 Coq.FSets.FMapInterface Sord cmp def
R11873:11874 Coq.FSets.FMapInterface Sord eq defax
R11878:11879 Coq.FSets.FMapInterface <> m' var
R11876:11876 Coq.FSets.FMapInterface <> m var
ax 11914:11920 Sord compare
R11938:11944 Coq.Structures.OrderedType <> Compare ind
R11955:11956 Coq.FSets.FMapInterface <> m2 var
R11952:11953 Coq.FSets.FMapInterface <> m1 var
R11949:11950 Coq.FSets.FMapInterface Sord eq defax
R11946:11947 Coq.FSets.FMapInterface Sord lt defax
R12108:12111 Coq.FSets.FMapInterface Sord <> modtype

DIGEST 5dbaded1315d31bad4cd422564d0c59c
FCoq.MSets.MSetPositive
R1143:1146 Coq.Bool.Bool <> <> lib
R1148:1153 Coq.PArith.BinPos <> <> lib
R1155:1160 Coq.Structures.Orders <> <> lib
R1162:1169 Coq.Structures.OrdersEx <> <> lib
R1171:1183 Coq.MSets.MSetInterface <> <> lib
R1334:1334 Coq.MSets.MSetInterface S <> mod
R1351:1373 Coq.Structures.OrdersEx PositiveOrderedTypeBits <> modtype
mod 1319:1329 <> PositiveSet
R1389:1411 Coq.Structures.OrdersEx PositiveOrderedTypeBits <> modtype
mod 1386:1386 <> PositiveSet.E
def 1428:1430 PositiveSet elt
R1435:1442 Coq.Numbers.BinNums <> positive ind
ind 1465:1468 PositiveSet tree
constr 1479:1482 PositiveSet Leaf
constr 1497:1500 PositiveSet Node
R1486:1489 Coq.MSets.MSetPositive <> tree ind
R1508:1511 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1516:1519 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1524:1527 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1528:1531 Coq.MSets.MSetPositive <> tree ind
R1520:1523 Coq.MSets.MSetPositive <> tree ind
R1512:1515 Coq.Init.Datatypes <> bool ind
R1504:1507 Coq.MSets.MSetPositive <> tree ind
def 1544:1551 PositiveSet tree_ind
R1570:1573 Coq.MSets.MSetPositive PositiveSet tree ind
def 1600:1600 PositiveSet t
R1605:1608 Coq.MSets.MSetPositive PositiveSet tree ind
def 1632:1636 PositiveSet empty
R1640:1640 Coq.MSets.MSetPositive PositiveSet t def
R1645:1648 Coq.MSets.MSetPositive PositiveSet Leaf constr
def 1663:1670 PositiveSet is_empty
R1677:1677 Coq.MSets.MSetPositive PositiveSet t def
R1682:1685 Coq.Init.Datatypes <> bool ind
R1699:1699 Coq.MSets.MSetPositive <> m var
R1712:1715 Coq.MSets.MSetPositive PositiveSet Leaf constr
R1720:1723 Coq.Init.Datatypes <> true constr
R1731:1734 Coq.MSets.MSetPositive PositiveSet Node constr
R1766:1770 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R1771:1778 Coq.MSets.MSetPositive <> is_empty def
R1751:1755 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R1756:1763 Coq.MSets.MSetPositive <> is_empty def
R1745:1748 Coq.Init.Datatypes <> negb def
def 1802:1804 PositiveSet mem
R1811:1818 Coq.Numbers.BinNums <> positive ind
R1826:1826 Coq.MSets.MSetPositive PositiveSet t def
R1842:1845 Coq.Init.Datatypes <> bool ind
R1860:1860 Coq.MSets.MSetPositive <> m var
R1873:1876 Coq.MSets.MSetPositive PositiveSet Leaf constr
R1881:1885 Coq.Init.Datatypes <> false constr
R1893:1896 Coq.MSets.MSetPositive PositiveSet Node constr
R1921:1921 Coq.MSets.MSetPositive <> i var
R1956:1957 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R1962:1964 Coq.MSets.MSetPositive <> mem def
R1966:1966 Coq.MSets.MSetPositive <> i var
R1981:1982 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R1987:1989 Coq.MSets.MSetPositive <> mem def
R1991:1991 Coq.MSets.MSetPositive <> i var
def 2028:2030 PositiveSet add
R2037:2044 Coq.Numbers.BinNums <> positive ind
R2052:2052 Coq.MSets.MSetPositive PositiveSet t def
R2057:2057 Coq.MSets.MSetPositive PositiveSet t def
R2072:2072 Coq.MSets.MSetPositive <> m var
R2085:2088 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2107:2107 Coq.MSets.MSetPositive <> i var
R2129:2132 Coq.MSets.MSetPositive PositiveSet Node constr
R2144:2147 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2139:2142 Coq.Init.Datatypes <> true constr
R2134:2137 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2160:2161 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R2166:2169 Coq.MSets.MSetPositive PositiveSet Node constr
R2190:2193 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2184:2188 Coq.Init.Datatypes <> false constr
R2172:2174 Coq.MSets.MSetPositive <> add def
R2178:2181 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2176:2176 Coq.MSets.MSetPositive <> i var
R2206:2207 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R2212:2215 Coq.MSets.MSetPositive PositiveSet Node constr
R2229:2231 Coq.MSets.MSetPositive <> add def
R2235:2238 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2233:2233 Coq.MSets.MSetPositive <> i var
R2222:2226 Coq.Init.Datatypes <> false constr
R2217:2220 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2259:2262 Coq.MSets.MSetPositive PositiveSet Node constr
R2287:2287 Coq.MSets.MSetPositive <> i var
R2309:2312 Coq.MSets.MSetPositive PositiveSet Node constr
R2316:2319 Coq.Init.Datatypes <> true constr
R2334:2335 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R2340:2343 Coq.MSets.MSetPositive PositiveSet Node constr
R2346:2348 Coq.MSets.MSetPositive <> add def
R2350:2350 Coq.MSets.MSetPositive <> i var
R2370:2371 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R2376:2379 Coq.MSets.MSetPositive PositiveSet Node constr
R2386:2388 Coq.MSets.MSetPositive <> add def
R2390:2390 Coq.MSets.MSetPositive <> i var
def 2430:2438 PositiveSet singleton
R2445:2447 Coq.MSets.MSetPositive PositiveSet add def
R2451:2455 Coq.MSets.MSetPositive PositiveSet empty def
R2449:2449 Coq.MSets.MSetPositive <> i var
def 2548:2551 PositiveSet node
R2558:2558 Coq.MSets.MSetPositive PositiveSet t def
R2565:2568 Coq.Init.Datatypes <> bool ind
R2576:2576 Coq.MSets.MSetPositive PositiveSet t def
R2581:2581 Coq.MSets.MSetPositive PositiveSet t def
R2593:2593 Coq.MSets.MSetPositive <> b var
R2629:2629 Coq.MSets.MSetPositive <> r var
R2627:2627 Coq.MSets.MSetPositive <> l var
R2645:2648 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2650:2653 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2658:2661 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2679:2682 Coq.MSets.MSetPositive PositiveSet Node constr
R2692:2692 Coq.MSets.MSetPositive <> r var
R2686:2690 Coq.Init.Datatypes <> false constr
R2684:2684 Coq.MSets.MSetPositive <> l var
R2600:2603 Coq.MSets.MSetPositive PositiveSet Node constr
R2609:2609 Coq.MSets.MSetPositive <> r var
R2607:2607 Coq.MSets.MSetPositive <> b var
R2605:2605 Coq.MSets.MSetPositive <> l var
def 2711:2716 PositiveSet remove
R2723:2730 Coq.Numbers.BinNums <> positive ind
R2738:2738 Coq.MSets.MSetPositive PositiveSet t def
R2754:2754 Coq.MSets.MSetPositive PositiveSet t def
R2769:2769 Coq.MSets.MSetPositive <> m var
R2784:2787 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2792:2795 Coq.MSets.MSetPositive PositiveSet Leaf constr
R2805:2808 Coq.MSets.MSetPositive PositiveSet Node constr
R2833:2833 Coq.MSets.MSetPositive <> i var
R2857:2860 Coq.MSets.MSetPositive PositiveSet node def
R2864:2868 Coq.Init.Datatypes <> false constr
R2885:2886 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R2891:2894 Coq.MSets.MSetPositive PositiveSet node def
R2897:2902 Coq.MSets.MSetPositive <> remove def
R2904:2904 Coq.MSets.MSetPositive <> i var
R2926:2927 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R2932:2935 Coq.MSets.MSetPositive PositiveSet node def
R2942:2947 Coq.MSets.MSetPositive <> remove def
R2949:2949 Coq.MSets.MSetPositive <> i var
def 2987:2991 PositiveSet union
R3000:3000 Coq.MSets.MSetPositive PositiveSet t def
R3005:3005 Coq.MSets.MSetPositive PositiveSet t def
R3020:3020 Coq.MSets.MSetPositive <> m var
R3035:3038 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3043:3044 Coq.MSets.MSetPositive <> m' var
R3054:3057 Coq.MSets.MSetPositive PositiveSet Node constr
R3082:3083 Coq.MSets.MSetPositive <> m' var
R3102:3105 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3110:3110 Coq.MSets.MSetPositive <> m var
R3124:3127 Coq.MSets.MSetPositive PositiveSet Node constr
R3141:3144 Coq.MSets.MSetPositive PositiveSet Node constr
R3168:3172 Coq.MSets.MSetPositive <> union def
R3161:3162 Coq.Init.Datatypes <> ::bool_scope:x_'||'_x not
R3147:3151 Coq.MSets.MSetPositive <> union def
def 3213:3217 PositiveSet inter
R3226:3226 Coq.MSets.MSetPositive PositiveSet t def
R3231:3231 Coq.MSets.MSetPositive PositiveSet t def
R3246:3246 Coq.MSets.MSetPositive <> m var
R3261:3264 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3269:3272 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3282:3285 Coq.MSets.MSetPositive PositiveSet Node constr
R3310:3311 Coq.MSets.MSetPositive <> m' var
R3330:3333 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3338:3341 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3355:3358 Coq.MSets.MSetPositive PositiveSet Node constr
R3372:3375 Coq.MSets.MSetPositive PositiveSet node def
R3399:3403 Coq.MSets.MSetPositive <> inter def
R3392:3393 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R3378:3382 Coq.MSets.MSetPositive <> inter def
def 3444:3447 PositiveSet diff
R3456:3456 Coq.MSets.MSetPositive PositiveSet t def
R3461:3461 Coq.MSets.MSetPositive PositiveSet t def
R3476:3476 Coq.MSets.MSetPositive <> m var
R3491:3494 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3499:3502 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3512:3515 Coq.MSets.MSetPositive PositiveSet Node constr
R3540:3541 Coq.MSets.MSetPositive <> m' var
R3560:3563 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3568:3568 Coq.MSets.MSetPositive <> m var
R3582:3585 Coq.MSets.MSetPositive PositiveSet Node constr
R3599:3602 Coq.MSets.MSetPositive PositiveSet node def
R3630:3633 Coq.MSets.MSetPositive <> diff def
R3618:3619 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R3620:3623 Coq.Init.Datatypes <> negb def
R3605:3608 Coq.MSets.MSetPositive <> diff def
def 3674:3678 PositiveSet equal
R3687:3687 Coq.MSets.MSetPositive PositiveSet t def
R3691:3694 Coq.Init.Datatypes <> bool ind
R3709:3709 Coq.MSets.MSetPositive <> m var
R3724:3727 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3732:3739 Coq.MSets.MSetPositive PositiveSet is_empty def
R3741:3742 Coq.MSets.MSetPositive <> m' var
R3752:3755 Coq.MSets.MSetPositive PositiveSet Node constr
R3780:3781 Coq.MSets.MSetPositive <> m' var
R3800:3803 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3808:3815 Coq.MSets.MSetPositive PositiveSet is_empty def
R3817:3817 Coq.MSets.MSetPositive <> m var
R3831:3834 Coq.MSets.MSetPositive PositiveSet Node constr
R3871:3875 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R3876:3880 Coq.MSets.MSetPositive <> equal def
R3856:3860 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R3861:3865 Coq.MSets.MSetPositive <> equal def
R3848:3850 Coq.Bool.Bool <> eqb def
def 3920:3925 PositiveSet subset
R3934:3934 Coq.MSets.MSetPositive PositiveSet t def
R3938:3941 Coq.Init.Datatypes <> bool ind
R3956:3956 Coq.MSets.MSetPositive <> m var
R3971:3974 Coq.MSets.MSetPositive PositiveSet Leaf constr
R3979:3982 Coq.Init.Datatypes <> true constr
R3992:3995 Coq.MSets.MSetPositive PositiveSet Node constr
R4020:4021 Coq.MSets.MSetPositive <> m' var
R4040:4043 Coq.MSets.MSetPositive PositiveSet Leaf constr
R4048:4055 Coq.MSets.MSetPositive PositiveSet is_empty def
R4057:4057 Coq.MSets.MSetPositive <> m var
R4071:4074 Coq.MSets.MSetPositive PositiveSet Node constr
R4119:4123 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R4124:4129 Coq.MSets.MSetPositive <> subset def
R4088:4088 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R4102:4107 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R4108:4113 Coq.MSets.MSetPositive <> subset def
R4095:4099 Coq.Bool.Bool <> ::lazy_bool_scope:x_'|||'_x not
R4089:4092 Coq.Init.Datatypes <> negb def
def 4220:4229 PositiveSet rev_append
R4238:4240 Coq.MSets.MSetPositive PositiveSet elt def
R4245:4247 Coq.MSets.MSetPositive PositiveSet elt def
R4262:4262 Coq.MSets.MSetPositive <> y var
R4282:4282 Coq.MSets.MSetPositive <> x var
R4293:4294 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R4299:4308 Coq.MSets.MSetPositive <> rev_append def
R4313:4314 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R4312:4312 Coq.MSets.MSetPositive <> x var
R4310:4310 Coq.MSets.MSetPositive <> y var
R4325:4326 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R4331:4340 Coq.MSets.MSetPositive <> rev_append def
R4345:4346 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R4344:4344 Coq.MSets.MSetPositive <> x var
R4342:4342 Coq.MSets.MSetPositive <> y var
R4372:4381 Coq.MSets.MSetPositive PositiveSet rev_append def
not 4365:4365 PositiveSet :::x_'@'_x
def 4411:4413 PositiveSet rev
R4421:4421 Coq.MSets.MSetPositive PositiveSet :::x_'@'_x not
R4420:4420 Coq.MSets.MSetPositive <> x var
sec 4436:4439 PositiveSet Fold
var 4457:4457 PositiveSet.Fold B
var 4480:4480 PositiveSet.Fold f
R4492:4495 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4497:4500 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4501:4501 Coq.MSets.MSetPositive <> PositiveSet.Fold.B var
R4496:4496 Coq.MSets.MSetPositive <> PositiveSet.Fold.B var
R4484:4491 Coq.Numbers.BinNums <> positive ind
def 4804:4808 PositiveSet xfold
R4815:4815 Coq.MSets.MSetPositive PositiveSet t def
R4823:4823 Coq.MSets.MSetPositive <> PositiveSet.Fold.B var
R4831:4838 Coq.Numbers.BinNums <> positive ind
R4856:4856 Coq.MSets.MSetPositive <> m var
R4873:4876 Coq.MSets.MSetPositive PositiveSet Leaf constr
R4881:4881 Coq.MSets.MSetPositive <> v var
R4893:4896 Coq.MSets.MSetPositive PositiveSet Node constr
R4900:4903 Coq.Init.Datatypes <> true constr
R4920:4924 Coq.MSets.MSetPositive <> xfold def
R4957:4958 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R4956:4956 Coq.MSets.MSetPositive <> i var
R4929:4929 Coq.MSets.MSetPositive <> PositiveSet.Fold.f var
R4940:4944 Coq.MSets.MSetPositive <> xfold def
R4951:4952 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R4950:4950 Coq.MSets.MSetPositive <> i var
R4948:4948 Coq.MSets.MSetPositive <> v var
R4932:4934 Coq.MSets.MSetPositive PositiveSet rev def
R4936:4936 Coq.MSets.MSetPositive <> i var
R4970:4973 Coq.MSets.MSetPositive PositiveSet Node constr
R4977:4981 Coq.Init.Datatypes <> false constr
R4998:5002 Coq.MSets.MSetPositive <> xfold def
R5023:5024 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R5022:5022 Coq.MSets.MSetPositive <> i var
R5007:5011 Coq.MSets.MSetPositive <> xfold def
R5018:5019 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R5017:5017 Coq.MSets.MSetPositive <> i var
R5015:5015 Coq.MSets.MSetPositive <> v var
def 5052:5055 PositiveSet fold
R5064:5068 Coq.MSets.MSetPositive PositiveSet xfold def
R5072:5072 Coq.MSets.MSetPositive <> i var
R5070:5070 Coq.MSets.MSetPositive <> m var
R5084:5087 Coq.MSets.MSetPositive PositiveSet.Fold <> sec
sec 5101:5111 PositiveSet Quantifiers
var 5128:5128 PositiveSet.Quantifiers f
R5140:5143 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5144:5147 Coq.Init.Datatypes <> bool ind
R5132:5139 Coq.Numbers.BinNums <> positive ind
def 5164:5170 PositiveSet xforall
R5177:5177 Coq.MSets.MSetPositive PositiveSet t def
R5185:5192 Coq.Numbers.BinNums <> positive ind
R5210:5210 Coq.MSets.MSetPositive <> m var
R5227:5230 Coq.MSets.MSetPositive PositiveSet Leaf constr
R5235:5238 Coq.Init.Datatypes <> true constr
R5250:5253 Coq.MSets.MSetPositive PositiveSet Node constr
R5314:5318 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R5319:5325 Coq.MSets.MSetPositive <> xforall def
R5330:5331 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R5329:5329 Coq.MSets.MSetPositive <> i var
R5274:5274 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R5295:5300 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R5301:5307 Coq.MSets.MSetPositive <> xforall def
R5312:5313 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R5311:5311 Coq.MSets.MSetPositive <> i var
R5281:5285 Coq.Bool.Bool <> ::lazy_bool_scope:x_'|||'_x not
R5286:5286 Coq.MSets.MSetPositive <> PositiveSet.Quantifiers.f var
R5289:5291 Coq.MSets.MSetPositive PositiveSet rev def
R5293:5293 Coq.MSets.MSetPositive <> i var
R5275:5278 Coq.Init.Datatypes <> negb def
def 5359:5365 PositiveSet for_all
R5372:5378 Coq.MSets.MSetPositive PositiveSet xforall def
R5380:5380 Coq.MSets.MSetPositive <> m var
def 5399:5405 PositiveSet xexists
R5412:5412 Coq.MSets.MSetPositive PositiveSet t def
R5420:5427 Coq.Numbers.BinNums <> positive ind
R5445:5445 Coq.MSets.MSetPositive <> m var
R5462:5465 Coq.MSets.MSetPositive PositiveSet Leaf constr
R5470:5474 Coq.Init.Datatypes <> false constr
R5486:5489 Coq.MSets.MSetPositive PositiveSet Node constr
R5535:5539 Coq.Bool.Bool <> ::lazy_bool_scope:x_'|||'_x not
R5540:5546 Coq.MSets.MSetPositive <> xexists def
R5551:5552 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R5550:5550 Coq.MSets.MSetPositive <> i var
R5500:5500 Coq.Bool.Bool <> ::lazy_bool_scope:x_'|||'_x not
R5516:5521 Coq.Bool.Bool <> ::lazy_bool_scope:x_'|||'_x not
R5522:5528 Coq.MSets.MSetPositive <> xexists def
R5533:5534 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R5532:5532 Coq.MSets.MSetPositive <> i var
R5502:5506 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R5507:5507 Coq.MSets.MSetPositive <> PositiveSet.Quantifiers.f var
R5510:5512 Coq.MSets.MSetPositive PositiveSet rev def
R5514:5514 Coq.MSets.MSetPositive <> i var
def 5580:5586 PositiveSet exists_
R5593:5599 Coq.MSets.MSetPositive PositiveSet xexists def
R5601:5601 Coq.MSets.MSetPositive <> m var
def 5620:5626 PositiveSet xfilter
R5633:5633 Coq.MSets.MSetPositive PositiveSet t def
R5641:5648 Coq.Numbers.BinNums <> positive ind
R5653:5653 Coq.MSets.MSetPositive PositiveSet t def
R5670:5670 Coq.MSets.MSetPositive <> m var
R5687:5690 Coq.MSets.MSetPositive PositiveSet Leaf constr
R5695:5698 Coq.MSets.MSetPositive PositiveSet Leaf constr
R5710:5713 Coq.MSets.MSetPositive PositiveSet Node constr
R5724:5727 Coq.MSets.MSetPositive PositiveSet node def
R5764:5770 Coq.MSets.MSetPositive <> xfilter def
R5775:5776 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R5774:5774 Coq.MSets.MSetPositive <> i var
R5747:5751 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R5752:5752 Coq.MSets.MSetPositive <> PositiveSet.Quantifiers.f var
R5755:5757 Coq.MSets.MSetPositive PositiveSet rev def
R5759:5759 Coq.MSets.MSetPositive <> i var
R5730:5736 Coq.MSets.MSetPositive <> xfilter def
R5741:5742 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R5740:5740 Coq.MSets.MSetPositive <> i var
def 5805:5810 PositiveSet filter
R5817:5823 Coq.MSets.MSetPositive PositiveSet xfilter def
R5825:5825 Coq.MSets.MSetPositive <> m var
def 5844:5853 PositiveSet xpartition
R5860:5860 Coq.MSets.MSetPositive PositiveSet t def
R5868:5875 Coq.Numbers.BinNums <> positive ind
R5881:5883 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R5880:5880 Coq.MSets.MSetPositive PositiveSet t def
R5884:5884 Coq.MSets.MSetPositive PositiveSet t def
R5901:5901 Coq.MSets.MSetPositive <> m var
R5918:5921 Coq.MSets.MSetPositive PositiveSet Leaf constr
R5926:5926 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5931:5931 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5936:5936 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5927:5930 Coq.MSets.MSetPositive PositiveSet Leaf constr
R5932:5935 Coq.MSets.MSetPositive PositiveSet Leaf constr
R5948:5951 Coq.MSets.MSetPositive PositiveSet Node constr
R5987:5996 Coq.MSets.MSetPositive <> xpartition def
R6001:6002 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R6000:6000 Coq.MSets.MSetPositive <> i var
R6032:6041 Coq.MSets.MSetPositive <> xpartition def
R6046:6047 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R6045:6045 Coq.MSets.MSetPositive <> i var
R6203:6203 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6220:6221 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6238:6238 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6204:6207 Coq.MSets.MSetPositive PositiveSet node def
R6218:6219 Coq.MSets.MSetPositive <> rt var
R6212:6216 Coq.Init.Datatypes <> false constr
R6209:6210 Coq.MSets.MSetPositive <> lt var
R6222:6225 Coq.MSets.MSetPositive PositiveSet node def
R6236:6237 Coq.MSets.MSetPositive <> rf var
R6230:6234 Coq.Init.Datatypes <> false constr
R6227:6228 Coq.MSets.MSetPositive <> lf var
R6100:6100 Coq.MSets.MSetPositive <> PositiveSet.Quantifiers.f var
R6103:6105 Coq.MSets.MSetPositive PositiveSet rev def
R6107:6107 Coq.MSets.MSetPositive <> i var
R6130:6130 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6144:6145 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6166:6166 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6131:6134 Coq.MSets.MSetPositive PositiveSet node def
R6142:6143 Coq.MSets.MSetPositive <> rt var
R6139:6140 Coq.MSets.MSetPositive <> fi var
R6136:6137 Coq.MSets.MSetPositive <> lt var
R6146:6149 Coq.MSets.MSetPositive PositiveSet node def
R6164:6165 Coq.MSets.MSetPositive <> rf var
R6155:6158 Coq.Init.Datatypes <> negb def
R6160:6161 Coq.MSets.MSetPositive <> fi var
R6151:6152 Coq.MSets.MSetPositive <> lf var
def 6266:6274 PositiveSet partition
R6281:6290 Coq.MSets.MSetPositive PositiveSet xpartition def
R6292:6292 Coq.MSets.MSetPositive <> m var
R6304:6314 Coq.MSets.MSetPositive PositiveSet.Quantifiers <> sec
def 6411:6419 PositiveSet xelements
R6426:6426 Coq.MSets.MSetPositive PositiveSet t def
R6434:6441 Coq.Numbers.BinNums <> positive ind
R6448:6451 Coq.Init.Datatypes <> list ind
R6453:6460 Coq.Numbers.BinNums <> positive ind
R6476:6476 Coq.MSets.MSetPositive <> m var
R6491:6494 Coq.MSets.MSetPositive PositiveSet Leaf constr
R6499:6499 Coq.MSets.MSetPositive <> a var
R6509:6512 Coq.MSets.MSetPositive PositiveSet Node constr
R6516:6520 Coq.Init.Datatypes <> false constr
R6527:6535 Coq.MSets.MSetPositive <> xelements def
R6544:6552 Coq.MSets.MSetPositive <> xelements def
R6560:6560 Coq.MSets.MSetPositive <> a var
R6557:6558 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R6556:6556 Coq.MSets.MSetPositive <> i var
R6540:6541 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R6539:6539 Coq.MSets.MSetPositive <> i var
R6571:6574 Coq.MSets.MSetPositive PositiveSet Node constr
R6578:6581 Coq.Init.Datatypes <> true constr
R6588:6596 Coq.MSets.MSetPositive <> xelements def
R6610:6613 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6605:6607 Coq.MSets.MSetPositive PositiveSet rev def
R6609:6609 Coq.MSets.MSetPositive <> i var
R6614:6622 Coq.MSets.MSetPositive <> xelements def
R6630:6630 Coq.MSets.MSetPositive <> a var
R6627:6628 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R6626:6626 Coq.MSets.MSetPositive <> i var
R6601:6602 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R6600:6600 Coq.MSets.MSetPositive <> i var
def 6656:6663 PositiveSet elements
R6670:6670 Coq.MSets.MSetPositive PositiveSet t def
R6676:6684 Coq.MSets.MSetPositive PositiveSet xelements def
R6690:6692 Coq.Init.Datatypes <> nil constr
R6686:6686 Coq.MSets.MSetPositive <> m var
def 6707:6714 PositiveSet cardinal
R6721:6721 Coq.MSets.MSetPositive PositiveSet t def
R6726:6728 Coq.Init.Datatypes <> nat ind
R6743:6743 Coq.MSets.MSetPositive <> m var
R6758:6761 Coq.MSets.MSetPositive PositiveSet Leaf constr
R6766:6766 Coq.Init.Datatypes <> O constr
R6776:6779 Coq.MSets.MSetPositive PositiveSet Node constr
R6783:6787 Coq.Init.Datatypes <> false constr
R6805:6807 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R6795:6802 Coq.MSets.MSetPositive <> cardinal def
R6808:6815 Coq.MSets.MSetPositive <> cardinal def
R6832:6835 Coq.MSets.MSetPositive PositiveSet Node constr
R6839:6842 Coq.Init.Datatypes <> true constr
R6849:6849 Coq.Init.Datatypes <> S constr
R6862:6864 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R6852:6859 Coq.MSets.MSetPositive <> cardinal def
R6865:6872 Coq.MSets.MSetPositive <> cardinal def
def 6979:6984 PositiveSet choose
R6990:6990 Coq.MSets.MSetPositive PositiveSet t def
R6995:7000 Coq.Init.Datatypes <> option ind
R7002:7004 Coq.MSets.MSetPositive PositiveSet elt def
R7019:7019 Coq.MSets.MSetPositive <> m var
R7034:7037 Coq.MSets.MSetPositive PositiveSet Leaf constr
R7042:7045 Coq.Init.Datatypes <> None constr
R7055:7058 Coq.MSets.MSetPositive PositiveSet Node constr
R7105:7110 Coq.MSets.MSetPositive <> choose def
R7131:7134 Coq.Init.Datatypes <> None constr
R7139:7148 Coq.Init.Datatypes <> option_map def
R7154:7159 Coq.MSets.MSetPositive <> choose def
R7150:7151 Coq.Numbers.BinNums <> xI constr
R7176:7179 Coq.Init.Datatypes <> Some constr
R7186:7189 Coq.Init.Datatypes <> Some constr
R7192:7193 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R7079:7082 Coq.Init.Datatypes <> Some constr
def 7228:7234 PositiveSet min_elt
R7240:7240 Coq.MSets.MSetPositive PositiveSet t def
R7245:7250 Coq.Init.Datatypes <> option ind
R7252:7254 Coq.MSets.MSetPositive PositiveSet elt def
R7269:7269 Coq.MSets.MSetPositive <> m var
R7284:7287 Coq.MSets.MSetPositive PositiveSet Leaf constr
R7292:7295 Coq.Init.Datatypes <> None constr
R7305:7308 Coq.MSets.MSetPositive PositiveSet Node constr
R7333:7339 Coq.MSets.MSetPositive <> min_elt def
R7360:7363 Coq.Init.Datatypes <> None constr
R7390:7399 Coq.Init.Datatypes <> option_map def
R7405:7411 Coq.MSets.MSetPositive <> min_elt def
R7401:7402 Coq.Numbers.BinNums <> xI constr
R7378:7381 Coq.Init.Datatypes <> Some constr
R7428:7431 Coq.Init.Datatypes <> Some constr
R7438:7441 Coq.Init.Datatypes <> Some constr
R7444:7445 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
def 7480:7486 PositiveSet max_elt
R7492:7492 Coq.MSets.MSetPositive PositiveSet t def
R7497:7502 Coq.Init.Datatypes <> option ind
R7504:7506 Coq.MSets.MSetPositive PositiveSet elt def
R7521:7521 Coq.MSets.MSetPositive <> m var
R7536:7539 Coq.MSets.MSetPositive PositiveSet Leaf constr
R7544:7547 Coq.Init.Datatypes <> None constr
R7557:7560 Coq.MSets.MSetPositive PositiveSet Node constr
R7585:7591 Coq.MSets.MSetPositive <> max_elt def
R7612:7615 Coq.Init.Datatypes <> None constr
R7642:7651 Coq.Init.Datatypes <> option_map def
R7657:7663 Coq.MSets.MSetPositive <> max_elt def
R7653:7654 Coq.Numbers.BinNums <> xO constr
R7630:7633 Coq.Init.Datatypes <> Some constr
R7680:7683 Coq.Init.Datatypes <> Some constr
R7690:7693 Coq.Init.Datatypes <> Some constr
R7696:7697 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
syndef 7810:7812 PositiveSet lex
R7834:7835 Coq.Init.Datatypes <> Eq constr
R7844:7845 Coq.Init.Datatypes <> Lt constr
R7850:7851 Coq.Init.Datatypes <> Lt constr
R7855:7856 Coq.Init.Datatypes <> Gt constr
R7861:7862 Coq.Init.Datatypes <> Gt constr
def 7883:7894 PositiveSet compare_bool
R7915:7915 Coq.MSets.MSetPositive <> b var
R7913:7913 Coq.MSets.MSetPositive <> a var
R7930:7934 Coq.Init.Datatypes <> false constr
R7937:7940 Coq.Init.Datatypes <> true constr
R7945:7946 Coq.Init.Datatypes <> Lt constr
R7956:7959 Coq.Init.Datatypes <> true constr
R7962:7966 Coq.Init.Datatypes <> false constr
R7971:7972 Coq.Init.Datatypes <> Gt constr
R7989:7990 Coq.Init.Datatypes <> Eq constr
def 8013:8019 PositiveSet compare
R8028:8028 Coq.MSets.MSetPositive PositiveSet t def
R8032:8041 Coq.Init.Datatypes <> comparison ind
R8058:8059 Coq.MSets.MSetPositive <> m' var
R8056:8056 Coq.MSets.MSetPositive <> m var
R8074:8077 Coq.MSets.MSetPositive PositiveSet Leaf constr
R8087:8094 Coq.MSets.MSetPositive PositiveSet is_empty def
R8096:8097 Coq.MSets.MSetPositive <> m' var
R8112:8113 Coq.Init.Datatypes <> Lt constr
R8104:8105 Coq.Init.Datatypes <> Eq constr
R8125:8128 Coq.MSets.MSetPositive PositiveSet Leaf constr
R8136:8143 Coq.MSets.MSetPositive PositiveSet is_empty def
R8145:8145 Coq.MSets.MSetPositive <> m var
R8160:8161 Coq.Init.Datatypes <> Gt constr
R8152:8153 Coq.Init.Datatypes <> Eq constr
R8171:8174 Coq.MSets.MSetPositive PositiveSet Node constr
R8182:8185 Coq.MSets.MSetPositive PositiveSet Node constr
R8207:8209 Coq.MSets.MSetPositive PositiveSet lex syndef
R8212:8223 Coq.MSets.MSetPositive PositiveSet compare_bool def
R8232:8234 Coq.MSets.MSetPositive PositiveSet lex syndef
R8237:8243 Coq.MSets.MSetPositive <> compare def
R8252:8258 Coq.MSets.MSetPositive <> compare def
def 8291:8292 PositiveSet In
R8308:8310 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8301:8303 Coq.MSets.MSetPositive PositiveSet mem def
R8307:8307 Coq.MSets.MSetPositive <> t var
R8305:8305 Coq.MSets.MSetPositive <> i var
R8311:8314 Coq.Init.Datatypes <> true constr
def 8330:8334 PositiveSet Equal
R8355:8357 Coq.MSets.MSetPositive PositiveSet elt def
R8367:8371 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R8360:8361 Coq.MSets.MSetPositive PositiveSet In def
R8366:8366 Coq.MSets.MSetPositive <> s var
R8363:8363 Coq.MSets.MSetPositive <> a var
R8372:8373 Coq.MSets.MSetPositive PositiveSet In def
R8378:8379 Coq.MSets.MSetPositive <> s' var
R8375:8375 Coq.MSets.MSetPositive <> a var
def 8395:8400 PositiveSet Subset
R8421:8423 Coq.MSets.MSetPositive PositiveSet elt def
R8432:8435 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8436:8437 Coq.MSets.MSetPositive PositiveSet In def
R8441:8442 Coq.MSets.MSetPositive <> s' var
R8439:8439 Coq.MSets.MSetPositive <> a var
R8426:8427 Coq.MSets.MSetPositive PositiveSet In def
R8431:8431 Coq.MSets.MSetPositive <> s var
R8429:8429 Coq.MSets.MSetPositive <> a var
def 8458:8462 PositiveSet Empty
R8480:8482 Coq.MSets.MSetPositive PositiveSet elt def
R8485:8486 Coq.Init.Logic <> ::type_scope:'~'_x not
R8487:8488 Coq.MSets.MSetPositive PositiveSet In def
R8492:8492 Coq.MSets.MSetPositive <> s var
R8490:8490 Coq.MSets.MSetPositive <> a var
def 8508:8514 PositiveSet For_all
R8524:8527 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8521:8523 Coq.MSets.MSetPositive PositiveSet elt def
R8555:8558 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8559:8559 Coq.MSets.MSetPositive <> P var
R8561:8561 Coq.MSets.MSetPositive <> x var
R8549:8550 Coq.MSets.MSetPositive PositiveSet In def
R8554:8554 Coq.MSets.MSetPositive <> s var
R8552:8552 Coq.MSets.MSetPositive <> x var
def 8577:8582 PositiveSet Exists
R8592:8595 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8589:8591 Coq.MSets.MSetPositive PositiveSet elt def
R8607:8613 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R8615:8616 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R8623:8626 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8617:8618 Coq.MSets.MSetPositive PositiveSet In def
R8622:8622 Coq.MSets.MSetPositive <> s var
R8620:8620 Coq.MSets.MSetPositive <> x var
R8627:8627 Coq.MSets.MSetPositive <> P var
R8629:8629 Coq.MSets.MSetPositive <> x var
R8660:8664 Coq.MSets.MSetPositive PositiveSet Equal def
not 8644:8644 PositiveSet :::x_'[=]'_x
R8732:8737 Coq.MSets.MSetPositive PositiveSet Subset def
not 8715:8715 PositiveSet :::x_'[<=]'_x
def 8791:8792 PositiveSet eq
R8797:8801 Coq.MSets.MSetPositive PositiveSet Equal def
def 8817:8818 PositiveSet lt
R8840:8842 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8828:8834 Coq.MSets.MSetPositive PositiveSet compare def
R8838:8839 Coq.MSets.MSetPositive <> m' var
R8836:8836 Coq.MSets.MSetPositive <> m var
R8843:8844 Coq.Init.Datatypes <> Lt constr
inst 8891:8899 PositiveSet In_compat
R8903:8908 Coq.Classes.Morphisms <> Proper class
R8934:8935 Coq.MSets.MSetPositive PositiveSet In def
R8915:8917 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R8911:8914 Coq.MSets.MSetPositive PositiveSet eq def
R8926:8928 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R8918:8925 Coq.Init.Logic <> eq ind
R8929:8931 Coq.Init.Logic <> iff def
inst 9058:9065 PositiveSet eq_equiv
R9069:9079 Coq.Classes.RelationClasses <> Equivalence class
R9081:9082 Coq.MSets.MSetPositive PositiveSet eq def
prf 9153:9160 PositiveSet mem_spec
R9189:9193 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R9182:9184 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9175:9177 Coq.MSets.MSetPositive PositiveSet mem def
R9181:9181 Coq.MSets.MSetPositive <> s var
R9179:9179 Coq.MSets.MSetPositive <> x var
R9185:9188 Coq.Init.Datatypes <> true constr
R9194:9195 Coq.MSets.MSetPositive PositiveSet In def
R9199:9199 Coq.MSets.MSetPositive <> s var
R9197:9197 Coq.MSets.MSetPositive <> x var
R9218:9219 Coq.MSets.MSetPositive PositiveSet In def
prf 9284:9291 PositiveSet mem_Leaf
R9314:9316 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9304:9306 Coq.MSets.MSetPositive PositiveSet mem def
R9310:9313 Coq.MSets.MSetPositive PositiveSet Leaf constr
R9308:9308 Coq.MSets.MSetPositive <> x var
R9317:9321 Coq.Init.Datatypes <> false constr
prf 9403:9412 PositiveSet empty_spec
R9416:9420 Coq.MSets.MSetPositive PositiveSet Empty def
R9422:9426 Coq.MSets.MSetPositive PositiveSet empty def
R9445:9449 Coq.MSets.MSetPositive PositiveSet Empty def
R9452:9453 Coq.MSets.MSetPositive PositiveSet In def
R9471:9478 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R9471:9478 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R9471:9478 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
prf 9542:9549 PositiveSet mem_node
R9586:9588 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9568:9570 Coq.MSets.MSetPositive PositiveSet mem def
R9575:9578 Coq.MSets.MSetPositive PositiveSet node def
R9584:9584 Coq.MSets.MSetPositive <> r var
R9582:9582 Coq.MSets.MSetPositive <> o var
R9580:9580 Coq.MSets.MSetPositive <> l var
R9572:9572 Coq.MSets.MSetPositive <> x var
R9589:9591 Coq.MSets.MSetPositive PositiveSet mem def
R9596:9599 Coq.MSets.MSetPositive PositiveSet Node constr
R9605:9605 Coq.MSets.MSetPositive <> r var
R9603:9603 Coq.MSets.MSetPositive <> o var
R9601:9601 Coq.MSets.MSetPositive <> l var
R9593:9593 Coq.MSets.MSetPositive <> x var
R9760:9763 Coq.MSets.MSetPositive PositiveSet node def
prf 9813:9825 PositiveSet is_empty_spec
R9855:9859 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R9848:9850 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9838:9845 Coq.MSets.MSetPositive PositiveSet is_empty def
R9847:9847 Coq.MSets.MSetPositive <> s var
R9851:9854 Coq.Init.Datatypes <> true constr
R9860:9864 Coq.MSets.MSetPositive PositiveSet Empty def
R9866:9866 Coq.MSets.MSetPositive <> s var
R9889:9893 Coq.MSets.MSetPositive PositiveSet Empty def
R9896:9897 Coq.MSets.MSetPositive PositiveSet In def
R9980:9992 Coq.Bool.Bool <> andb_lazy_alt thm
R9996:10008 Coq.Bool.Bool <> andb_true_iff thm
R9980:9992 Coq.Bool.Bool <> andb_lazy_alt thm
R9980:9992 Coq.Bool.Bool <> andb_lazy_alt thm
R9980:9992 Coq.Bool.Bool <> andb_lazy_alt thm
R9996:10008 Coq.Bool.Bool <> andb_true_iff thm
R9996:10008 Coq.Bool.Bool <> andb_true_iff thm
R9996:10008 Coq.Bool.Bool <> andb_true_iff thm
R10272:10273 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R10272:10273 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R10306:10307 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R10306:10307 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
prf 10363:10375 PositiveSet subset_Leaf_s
R10392:10397 Coq.MSets.MSetPositive PositiveSet :::x_'[<=]'_x not
R10388:10391 Coq.MSets.MSetPositive PositiveSet Leaf constr
R10398:10398 Coq.MSets.MSetPositive <> s var
R10431:10440 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R10431:10440 Coq.MSets.MSetPositive PositiveSet empty_spec thm
prf 10472:10482 PositiveSet subset_spec
R10516:10520 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R10509:10511 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10498:10503 Coq.MSets.MSetPositive PositiveSet subset def
R10507:10508 Coq.MSets.MSetPositive <> s' var
R10505:10505 Coq.MSets.MSetPositive <> s var
R10512:10515 Coq.Init.Datatypes <> true constr
R10522:10527 Coq.MSets.MSetPositive PositiveSet :::x_'[<=]'_x not
R10521:10521 Coq.MSets.MSetPositive <> s var
R10528:10529 Coq.MSets.MSetPositive <> s' var
R10632:10644 Coq.MSets.MSetPositive PositiveSet subset_Leaf_s thm
R10632:10644 Coq.MSets.MSetPositive PositiveSet subset_Leaf_s thm
R10688:10700 Coq.MSets.MSetPositive PositiveSet subset_Leaf_s thm
R10688:10700 Coq.MSets.MSetPositive PositiveSet subset_Leaf_s thm
R10735:10747 Coq.Bool.Bool <> andb_lazy_alt thm
R10751:10763 Coq.Bool.Bool <> andb_true_iff thm
R10767:10779 Coq.MSets.MSetPositive PositiveSet is_empty_spec thm
R10735:10747 Coq.Bool.Bool <> andb_lazy_alt thm
R10735:10747 Coq.Bool.Bool <> andb_lazy_alt thm
R10735:10747 Coq.Bool.Bool <> andb_lazy_alt thm
R10751:10763 Coq.Bool.Bool <> andb_true_iff thm
R10751:10763 Coq.Bool.Bool <> andb_true_iff thm
R10751:10763 Coq.Bool.Bool <> andb_true_iff thm
R10767:10779 Coq.MSets.MSetPositive PositiveSet is_empty_spec thm
R10767:10779 Coq.MSets.MSetPositive PositiveSet is_empty_spec thm
R10767:10779 Coq.MSets.MSetPositive PositiveSet is_empty_spec thm
R10882:10891 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R10882:10891 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R11144:11148 Coq.MSets.MSetPositive PositiveSet Empty def
R11172:11181 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R11185:11186 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R11172:11181 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R11185:11186 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R11223:11227 Coq.MSets.MSetPositive PositiveSet Empty def
R11251:11260 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R11264:11265 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R11251:11260 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R11264:11265 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R11304:11316 Coq.Bool.Bool <> andb_lazy_alt thm
R11320:11332 Coq.Bool.Bool <> andb_true_iff thm
R11304:11316 Coq.Bool.Bool <> andb_lazy_alt thm
R11304:11316 Coq.Bool.Bool <> andb_lazy_alt thm
R11304:11316 Coq.Bool.Bool <> andb_lazy_alt thm
R11320:11332 Coq.Bool.Bool <> andb_true_iff thm
R11320:11332 Coq.Bool.Bool <> andb_true_iff thm
R11320:11332 Coq.Bool.Bool <> andb_true_iff thm
R11676:11677 Coq.MSets.MSetPositive PositiveSet In def
R11752:11753 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R11752:11753 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R11800:11801 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R11800:11801 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R12071:12072 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R12071:12072 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R12120:12121 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R12120:12121 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
prf 12199:12210 PositiveSet equal_subset
R12236:12238 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12226:12230 Coq.MSets.MSetPositive PositiveSet equal def
R12234:12235 Coq.MSets.MSetPositive <> s' var
R12232:12232 Coq.MSets.MSetPositive <> s var
R12250:12253 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R12239:12244 Coq.MSets.MSetPositive PositiveSet subset def
R12248:12249 Coq.MSets.MSetPositive <> s' var
R12246:12246 Coq.MSets.MSetPositive <> s var
R12254:12259 Coq.MSets.MSetPositive PositiveSet subset def
R12264:12264 Coq.MSets.MSetPositive <> s var
R12261:12262 Coq.MSets.MSetPositive <> s' var
R12388:12396 Coq.Bool.Bool <> andb_comm thm
R12388:12396 Coq.Bool.Bool <> andb_comm thm
R12388:12396 Coq.Bool.Bool <> andb_comm thm
R12430:12442 Coq.Bool.Bool <> andb_lazy_alt thm
R12430:12442 Coq.Bool.Bool <> andb_lazy_alt thm
R12430:12442 Coq.Bool.Bool <> andb_lazy_alt thm
R12430:12442 Coq.Bool.Bool <> andb_lazy_alt thm
R12430:12442 Coq.Bool.Bool <> andb_lazy_alt thm
R12430:12442 Coq.Bool.Bool <> andb_lazy_alt thm
R12430:12442 Coq.Bool.Bool <> andb_lazy_alt thm
R12430:12442 Coq.Bool.Bool <> andb_lazy_alt thm
R12453:12466 Coq.Bool.Bool <> eq_iff_eq_true thm
R12453:12466 Coq.Bool.Bool <> eq_iff_eq_true thm
R12453:12466 Coq.Bool.Bool <> eq_iff_eq_true thm
R12485:12497 Coq.Bool.Bool <> andb_true_iff thm
R12500:12511 Coq.Bool.Bool <> eqb_true_iff thm
R12485:12497 Coq.Bool.Bool <> andb_true_iff thm
R12485:12497 Coq.Bool.Bool <> andb_true_iff thm
R12485:12497 Coq.Bool.Bool <> andb_true_iff thm
R12485:12497 Coq.Bool.Bool <> andb_true_iff thm
R12485:12497 Coq.Bool.Bool <> andb_true_iff thm
R12485:12497 Coq.Bool.Bool <> andb_true_iff thm
R12485:12497 Coq.Bool.Bool <> andb_true_iff thm
R12485:12497 Coq.Bool.Bool <> andb_true_iff thm
R12500:12511 Coq.Bool.Bool <> eqb_true_iff thm
R12500:12511 Coq.Bool.Bool <> eqb_true_iff thm
R12539:12551 Coq.Bool.Bool <> andb_true_iff thm
R12539:12551 Coq.Bool.Bool <> andb_true_iff thm
R12539:12551 Coq.Bool.Bool <> andb_true_iff thm
R12539:12551 Coq.Bool.Bool <> andb_true_iff thm
prf 12715:12724 PositiveSet equal_spec
R12757:12761 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12750:12752 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12740:12744 Coq.MSets.MSetPositive PositiveSet equal def
R12748:12749 Coq.MSets.MSetPositive <> s' var
R12746:12746 Coq.MSets.MSetPositive <> s var
R12753:12756 Coq.Init.Datatypes <> true constr
R12762:12766 Coq.MSets.MSetPositive PositiveSet Equal def
R12770:12771 Coq.MSets.MSetPositive <> s' var
R12768:12768 Coq.MSets.MSetPositive <> s var
R12803:12814 Coq.MSets.MSetPositive PositiveSet equal_subset thm
R12803:12814 Coq.MSets.MSetPositive PositiveSet equal_subset thm
R12803:12814 Coq.MSets.MSetPositive PositiveSet equal_subset thm
R12825:12837 Coq.Bool.Bool <> andb_true_iff thm
R12825:12837 Coq.Bool.Bool <> andb_true_iff thm
R12825:12837 Coq.Bool.Bool <> andb_true_iff thm
R12853:12863 Coq.MSets.MSetPositive PositiveSet subset_spec thm
R12853:12863 Coq.MSets.MSetPositive PositiveSet subset_spec thm
R12853:12863 Coq.MSets.MSetPositive PositiveSet subset_spec thm
R12853:12863 Coq.MSets.MSetPositive PositiveSet subset_spec thm
R12873:12877 Coq.MSets.MSetPositive PositiveSet Equal def
R12880:12885 Coq.MSets.MSetPositive PositiveSet Subset def
prf 12916:12921 PositiveSet eq_dec
R12938:12939 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R12947:12953 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R12963:12964 Coq.Init.Specif <> ::type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R12940:12941 Coq.MSets.MSetPositive PositiveSet eq def
R12945:12946 Coq.MSets.MSetPositive <> s' var
R12943:12943 Coq.MSets.MSetPositive <> s var
R12954:12955 Coq.Init.Logic <> ::type_scope:'~'_x not
R12956:12957 Coq.MSets.MSetPositive PositiveSet eq def
R12961:12962 Coq.MSets.MSetPositive <> s' var
R12959:12959 Coq.MSets.MSetPositive <> s var
R12987:12988 Coq.MSets.MSetPositive PositiveSet eq def
R13012:13016 Coq.MSets.MSetPositive PositiveSet equal def
R13012:13016 Coq.MSets.MSetPositive PositiveSet equal def
R13051:13060 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R13051:13060 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R13089:13098 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R13089:13098 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R13089:13098 Coq.MSets.MSetPositive PositiveSet equal_spec thm
prf 13179:13185 PositiveSet lex_Opp
R13220:13223 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13238:13245 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13253:13255 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13246:13248 Coq.MSets.MSetPositive PositiveSet lex syndef
R13250:13250 Coq.MSets.MSetPositive <> u var
R13252:13252 Coq.MSets.MSetPositive <> v var
R13256:13262 Coq.Init.Datatypes <> CompOpp def
R13265:13267 Coq.MSets.MSetPositive PositiveSet lex syndef
R13269:13270 Coq.MSets.MSetPositive <> u' var
R13272:13273 Coq.MSets.MSetPositive <> v' var
R13225:13227 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13224:13224 Coq.MSets.MSetPositive <> v var
R13228:13234 Coq.Init.Datatypes <> CompOpp def
R13236:13237 Coq.MSets.MSetPositive <> v' var
R13207:13209 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13206:13206 Coq.MSets.MSetPositive <> u var
R13210:13216 Coq.Init.Datatypes <> CompOpp def
R13218:13219 Coq.MSets.MSetPositive <> u' var
prf 13345:13360 PositiveSet compare_bool_inv
R13397:13399 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13380:13391 Coq.MSets.MSetPositive PositiveSet compare_bool def
R13395:13396 Coq.MSets.MSetPositive <> b' var
R13393:13393 Coq.MSets.MSetPositive <> b var
R13400:13406 Coq.Init.Datatypes <> CompOpp def
R13409:13420 Coq.MSets.MSetPositive PositiveSet compare_bool def
R13425:13425 Coq.MSets.MSetPositive <> b var
R13422:13423 Coq.MSets.MSetPositive <> b' var
prf 13481:13491 PositiveSet compare_inv
R13519:13521 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13507:13513 Coq.MSets.MSetPositive PositiveSet compare def
R13517:13518 Coq.MSets.MSetPositive <> s' var
R13515:13515 Coq.MSets.MSetPositive <> s var
R13522:13528 Coq.Init.Datatypes <> CompOpp def
R13531:13537 Coq.MSets.MSetPositive PositiveSet compare def
R13542:13542 Coq.MSets.MSetPositive <> s var
R13539:13540 Coq.MSets.MSetPositive <> s' var
R13640:13646 Coq.MSets.MSetPositive PositiveSet compare def
R13654:13661 Coq.MSets.MSetPositive PositiveSet is_empty def
R13654:13661 Coq.MSets.MSetPositive PositiveSet is_empty def
R13688:13694 Coq.MSets.MSetPositive PositiveSet compare def
R13702:13709 Coq.MSets.MSetPositive PositiveSet is_empty def
R13702:13709 Coq.MSets.MSetPositive PositiveSet is_empty def
R13744:13759 Coq.MSets.MSetPositive PositiveSet compare_bool_inv thm
R13744:13759 Coq.MSets.MSetPositive PositiveSet compare_bool_inv thm
R13744:13759 Coq.MSets.MSetPositive PositiveSet compare_bool_inv thm
R13772:13783 Coq.MSets.MSetPositive PositiveSet compare_bool def
R13808:13814 Coq.MSets.MSetPositive PositiveSet lex_Opp thm
R13772:13783 Coq.MSets.MSetPositive PositiveSet compare_bool def
R13808:13814 Coq.MSets.MSetPositive PositiveSet lex_Opp thm
prf 13839:13844 PositiveSet lex_Eq
R13871:13875 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R13866:13868 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13859:13861 Coq.MSets.MSetPositive PositiveSet lex syndef
R13863:13863 Coq.MSets.MSetPositive <> u var
R13865:13865 Coq.MSets.MSetPositive <> v var
R13869:13870 Coq.Init.Datatypes <> Eq constr
R13880:13883 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R13877:13877 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13876:13876 Coq.MSets.MSetPositive <> u var
R13878:13879 Coq.Init.Datatypes <> Eq constr
R13885:13885 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13884:13884 Coq.MSets.MSetPositive <> v var
R13886:13887 Coq.Init.Datatypes <> Eq constr
prf 13961:13975 PositiveSet compare_bool_Eq
R14019:14023 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14014:14016 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13996:14007 Coq.MSets.MSetPositive PositiveSet compare_bool def
R14012:14013 Coq.MSets.MSetPositive <> b2 var
R14009:14010 Coq.MSets.MSetPositive <> b1 var
R14017:14018 Coq.Init.Datatypes <> Eq constr
R14033:14035 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14024:14026 Coq.Bool.Bool <> eqb def
R14031:14032 Coq.MSets.MSetPositive <> b2 var
R14028:14029 Coq.MSets.MSetPositive <> b1 var
R14036:14039 Coq.Init.Datatypes <> true constr
prf 14105:14117 PositiveSet compare_equal
R14150:14154 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14145:14147 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14133:14139 Coq.MSets.MSetPositive PositiveSet compare def
R14143:14144 Coq.MSets.MSetPositive <> s' var
R14141:14141 Coq.MSets.MSetPositive <> s var
R14148:14149 Coq.Init.Datatypes <> Eq constr
R14165:14167 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14155:14159 Coq.MSets.MSetPositive PositiveSet equal def
R14163:14164 Coq.MSets.MSetPositive <> s' var
R14161:14161 Coq.MSets.MSetPositive <> s var
R14168:14171 Coq.Init.Datatypes <> true constr
R14279:14285 Coq.MSets.MSetPositive PositiveSet compare def
R14288:14292 Coq.MSets.MSetPositive PositiveSet equal def
R14300:14307 Coq.MSets.MSetPositive PositiveSet is_empty def
R14300:14307 Coq.MSets.MSetPositive PositiveSet is_empty def
R14346:14352 Coq.MSets.MSetPositive PositiveSet compare def
R14355:14359 Coq.MSets.MSetPositive PositiveSet equal def
R14367:14374 Coq.MSets.MSetPositive PositiveSet is_empty def
R14367:14374 Coq.MSets.MSetPositive PositiveSet is_empty def
R14425:14437 Coq.Bool.Bool <> andb_lazy_alt thm
R14441:14453 Coq.Bool.Bool <> andb_true_iff thm
R14425:14437 Coq.Bool.Bool <> andb_lazy_alt thm
R14425:14437 Coq.Bool.Bool <> andb_lazy_alt thm
R14425:14437 Coq.Bool.Bool <> andb_lazy_alt thm
R14441:14453 Coq.Bool.Bool <> andb_true_iff thm
R14441:14453 Coq.Bool.Bool <> andb_true_iff thm
R14441:14453 Coq.Bool.Bool <> andb_true_iff thm
R14488:14502 Coq.MSets.MSetPositive PositiveSet compare_bool_Eq thm
R14488:14502 Coq.MSets.MSetPositive PositiveSet compare_bool_Eq thm
R14488:14502 Coq.MSets.MSetPositive PositiveSet compare_bool_Eq thm
R14533:14541 Coq.Init.Logic <> and_assoc thm
R14533:14541 Coq.Init.Logic <> and_assoc thm
R14533:14541 Coq.Init.Logic <> and_assoc thm
R14556:14561 Coq.MSets.MSetPositive PositiveSet lex_Eq thm
R14556:14561 Coq.MSets.MSetPositive PositiveSet lex_Eq thm
R14556:14561 Coq.MSets.MSetPositive PositiveSet lex_Eq thm
R14556:14561 Coq.MSets.MSetPositive PositiveSet lex_Eq thm
prf 14594:14603 PositiveSet compare_gt
R14636:14639 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14640:14641 Coq.MSets.MSetPositive PositiveSet lt def
R14646:14646 Coq.MSets.MSetPositive <> s var
R14643:14644 Coq.MSets.MSetPositive <> s' var
R14631:14633 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14619:14625 Coq.MSets.MSetPositive PositiveSet compare def
R14629:14630 Coq.MSets.MSetPositive <> s' var
R14627:14627 Coq.MSets.MSetPositive <> s var
R14634:14635 Coq.Init.Datatypes <> Gt constr
R14669:14670 Coq.MSets.MSetPositive PositiveSet lt def
R14694:14704 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R14694:14704 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R14694:14704 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R14717:14723 Coq.MSets.MSetPositive PositiveSet compare def
R14717:14723 Coq.MSets.MSetPositive PositiveSet compare def
prf 14773:14782 PositiveSet compare_eq
R14815:14818 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14819:14820 Coq.MSets.MSetPositive PositiveSet eq def
R14824:14825 Coq.MSets.MSetPositive <> s' var
R14822:14822 Coq.MSets.MSetPositive <> s var
R14810:14812 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14798:14804 Coq.MSets.MSetPositive PositiveSet compare def
R14808:14809 Coq.MSets.MSetPositive <> s' var
R14806:14806 Coq.MSets.MSetPositive <> s var
R14813:14814 Coq.Init.Datatypes <> Eq constr
R14848:14849 Coq.MSets.MSetPositive PositiveSet eq def
R14873:14885 Coq.MSets.MSetPositive PositiveSet compare_equal thm
R14888:14897 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R14873:14885 Coq.MSets.MSetPositive PositiveSet compare_equal thm
R14873:14885 Coq.MSets.MSetPositive PositiveSet compare_equal thm
R14888:14897 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R14888:14897 Coq.MSets.MSetPositive PositiveSet equal_spec thm
prf 14925:14936 PositiveSet compare_spec
R14954:14954 Coq.MSets.MSetPositive PositiveSet t def
R14957:14964 Coq.Init.Datatypes <> CompSpec def
R14978:14984 Coq.MSets.MSetPositive PositiveSet compare def
R14988:14989 Coq.MSets.MSetPositive <> s' var
R14986:14986 Coq.MSets.MSetPositive <> s var
R14974:14975 Coq.MSets.MSetPositive <> s' var
R14972:14972 Coq.MSets.MSetPositive <> s var
R14969:14970 Coq.MSets.MSetPositive PositiveSet lt def
R14966:14967 Coq.MSets.MSetPositive PositiveSet eq def
R15023:15029 Coq.MSets.MSetPositive PositiveSet compare def
R15023:15029 Coq.MSets.MSetPositive PositiveSet compare def
R15070:15079 Coq.MSets.MSetPositive PositiveSet compare_eq thm
R15070:15079 Coq.MSets.MSetPositive PositiveSet compare_eq thm
R15111:15120 Coq.MSets.MSetPositive PositiveSet compare_gt thm
R15111:15120 Coq.MSets.MSetPositive PositiveSet compare_gt thm
sec 15144:15150 PositiveSet lt_spec
ind 15166:15167 PositiveSet ct
constr 15224:15229 PositiveSet ct_xxx
constr 15257:15262 PositiveSet ct_xex
constr 15290:15295 PositiveSet ct_exx
constr 15323:15328 PositiveSet ct_glx
constr 15356:15361 PositiveSet ct_lgx
R15180:15183 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15194:15197 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15208:15211 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15198:15207 Coq.Init.Datatypes <> comparison ind
R15184:15193 Coq.Init.Datatypes <> comparison ind
R15170:15179 Coq.Init.Datatypes <> comparison ind
R15180:15183 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15194:15197 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15208:15211 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15198:15207 Coq.Init.Datatypes <> comparison ind
R15184:15193 Coq.Init.Datatypes <> comparison ind
R15170:15179 Coq.Init.Datatypes <> comparison ind
R15242:15243 Coq.MSets.MSetPositive <> ct ind
R15251:15251 Coq.MSets.MSetPositive <> x var
R15248:15248 Coq.MSets.MSetPositive <> x var
R15245:15245 Coq.MSets.MSetPositive <> x var
R15275:15276 Coq.MSets.MSetPositive <> ct ind
R15284:15284 Coq.MSets.MSetPositive <> x var
R15281:15282 Coq.Init.Datatypes <> Eq constr
R15278:15278 Coq.MSets.MSetPositive <> x var
R15308:15309 Coq.MSets.MSetPositive <> ct ind
R15317:15317 Coq.MSets.MSetPositive <> x var
R15314:15314 Coq.MSets.MSetPositive <> x var
R15311:15312 Coq.Init.Datatypes <> Eq constr
R15341:15342 Coq.MSets.MSetPositive <> ct ind
R15350:15350 Coq.MSets.MSetPositive <> x var
R15347:15348 Coq.Init.Datatypes <> Lt constr
R15344:15345 Coq.Init.Datatypes <> Gt constr
R15374:15375 Coq.MSets.MSetPositive <> ct ind
R15383:15383 Coq.MSets.MSetPositive <> x var
R15380:15381 Coq.Init.Datatypes <> Gt constr
R15377:15378 Coq.Init.Datatypes <> Lt constr
prf 15395:15400 PositiveSet ct_cxe
R15413:15414 Coq.MSets.MSetPositive PositiveSet ct ind
R15430:15431 Coq.Init.Datatypes <> Eq constr
R15428:15428 Coq.MSets.MSetPositive <> x var
R15417:15423 Coq.Init.Datatypes <> CompOpp def
R15425:15425 Coq.MSets.MSetPositive <> x var
prf 15482:15487 PositiveSet ct_xce
R15500:15501 Coq.MSets.MSetPositive PositiveSet ct ind
R15517:15518 Coq.Init.Datatypes <> Eq constr
R15506:15512 Coq.Init.Datatypes <> CompOpp def
R15514:15514 Coq.MSets.MSetPositive <> x var
R15503:15503 Coq.MSets.MSetPositive <> x var
prf 15569:15574 PositiveSet ct_lxl
R15587:15588 Coq.MSets.MSetPositive PositiveSet ct ind
R15595:15596 Coq.Init.Datatypes <> Lt constr
R15593:15593 Coq.MSets.MSetPositive <> x var
R15590:15591 Coq.Init.Datatypes <> Lt constr
prf 15647:15652 PositiveSet ct_gxg
R15665:15666 Coq.MSets.MSetPositive PositiveSet ct ind
R15673:15674 Coq.Init.Datatypes <> Gt constr
R15671:15671 Coq.MSets.MSetPositive <> x var
R15668:15669 Coq.Init.Datatypes <> Gt constr
prf 15725:15730 PositiveSet ct_xll
R15743:15744 Coq.MSets.MSetPositive PositiveSet ct ind
R15751:15752 Coq.Init.Datatypes <> Lt constr
R15748:15749 Coq.Init.Datatypes <> Lt constr
R15746:15746 Coq.MSets.MSetPositive <> x var
prf 15803:15808 PositiveSet ct_xgg
R15821:15822 Coq.MSets.MSetPositive PositiveSet ct ind
R15829:15830 Coq.Init.Datatypes <> Gt constr
R15826:15827 Coq.Init.Datatypes <> Gt constr
R15824:15824 Coq.MSets.MSetPositive <> x var
R15899:15900 Coq.MSets.MSetPositive <> ct ind
prf 16014:16019 PositiveSet ct_lex
R16057:16060 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16072:16075 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16076:16077 Coq.MSets.MSetPositive PositiveSet ct ind
R16102:16104 Coq.MSets.MSetPositive PositiveSet lex syndef
R16106:16106 Coq.MSets.MSetPositive <> w var
R16108:16109 Coq.MSets.MSetPositive <> w' var
R16091:16093 Coq.MSets.MSetPositive PositiveSet lex syndef
R16095:16095 Coq.MSets.MSetPositive <> v var
R16097:16098 Coq.MSets.MSetPositive <> v' var
R16080:16082 Coq.MSets.MSetPositive PositiveSet lex syndef
R16084:16084 Coq.MSets.MSetPositive <> u var
R16086:16087 Coq.MSets.MSetPositive <> u' var
R16061:16062 Coq.MSets.MSetPositive PositiveSet ct ind
R16070:16071 Coq.MSets.MSetPositive <> w' var
R16067:16068 Coq.MSets.MSetPositive <> v' var
R16064:16065 Coq.MSets.MSetPositive <> u' var
R16049:16050 Coq.MSets.MSetPositive PositiveSet ct ind
R16056:16056 Coq.MSets.MSetPositive <> w var
R16054:16054 Coq.MSets.MSetPositive <> v var
R16052:16052 Coq.MSets.MSetPositive <> u var
prf 16250:16264 PositiveSet ct_compare_bool
R16285:16286 Coq.MSets.MSetPositive PositiveSet ct ind
R16327:16338 Coq.MSets.MSetPositive PositiveSet compare_bool def
R16342:16342 Coq.MSets.MSetPositive <> c var
R16340:16340 Coq.MSets.MSetPositive <> a var
R16308:16319 Coq.MSets.MSetPositive PositiveSet compare_bool def
R16323:16323 Coq.MSets.MSetPositive <> c var
R16321:16321 Coq.MSets.MSetPositive <> b var
R16289:16300 Coq.MSets.MSetPositive PositiveSet compare_bool def
R16304:16304 Coq.MSets.MSetPositive <> b var
R16302:16302 Coq.MSets.MSetPositive <> a var
prf 16408:16421 PositiveSet compare_x_Leaf
R16452:16454 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16438:16444 Coq.MSets.MSetPositive PositiveSet compare def
R16448:16451 Coq.MSets.MSetPositive PositiveSet Leaf constr
R16446:16446 Coq.MSets.MSetPositive <> s var
R16458:16465 Coq.MSets.MSetPositive PositiveSet is_empty def
R16467:16467 Coq.MSets.MSetPositive <> s var
R16482:16483 Coq.Init.Datatypes <> Gt constr
R16474:16475 Coq.Init.Datatypes <> Eq constr
R16515:16525 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R16515:16525 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R16515:16525 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R16541:16548 Coq.MSets.MSetPositive PositiveSet is_empty def
R16541:16548 Coq.MSets.MSetPositive PositiveSet is_empty def
prf 16583:16597 PositiveSet compare_empty_x
R16627:16634 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16656:16658 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16645:16651 Coq.MSets.MSetPositive PositiveSet compare def
R16655:16655 Coq.MSets.MSetPositive <> b var
R16653:16653 Coq.MSets.MSetPositive <> a var
R16662:16669 Coq.MSets.MSetPositive PositiveSet is_empty def
R16671:16671 Coq.MSets.MSetPositive <> b var
R16686:16687 Coq.Init.Datatypes <> Lt constr
R16678:16679 Coq.Init.Datatypes <> Eq constr
R16620:16622 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16610:16617 Coq.MSets.MSetPositive PositiveSet is_empty def
R16619:16619 Coq.MSets.MSetPositive <> a var
R16623:16626 Coq.Init.Datatypes <> true constr
R16813:16825 Coq.Bool.Bool <> andb_lazy_alt thm
R16828:16840 Coq.Bool.Bool <> andb_true_iff thm
R16813:16825 Coq.Bool.Bool <> andb_lazy_alt thm
R16813:16825 Coq.Bool.Bool <> andb_lazy_alt thm
R16828:16840 Coq.Bool.Bool <> andb_true_iff thm
R16828:16840 Coq.Bool.Bool <> andb_true_iff thm
R17000:17007 Coq.MSets.MSetPositive PositiveSet is_empty def
R17020:17027 Coq.MSets.MSetPositive PositiveSet is_empty def
R17000:17007 Coq.MSets.MSetPositive PositiveSet is_empty def
R17020:17027 Coq.MSets.MSetPositive PositiveSet is_empty def
R17020:17027 Coq.MSets.MSetPositive PositiveSet is_empty def
prf 17059:17073 PositiveSet compare_x_empty
R17103:17110 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17132:17134 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17121:17127 Coq.MSets.MSetPositive PositiveSet compare def
R17131:17131 Coq.MSets.MSetPositive <> a var
R17129:17129 Coq.MSets.MSetPositive <> b var
R17138:17145 Coq.MSets.MSetPositive PositiveSet is_empty def
R17147:17147 Coq.MSets.MSetPositive <> b var
R17162:17163 Coq.Init.Datatypes <> Gt constr
R17154:17155 Coq.Init.Datatypes <> Eq constr
R17096:17098 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17086:17093 Coq.MSets.MSetPositive PositiveSet is_empty def
R17095:17095 Coq.MSets.MSetPositive <> a var
R17099:17102 Coq.Init.Datatypes <> true constr
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17197:17210 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17235:17245 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R17252:17266 Coq.MSets.MSetPositive PositiveSet compare_empty_x thm
R17235:17245 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R17235:17245 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R17235:17245 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R17252:17266 Coq.MSets.MSetPositive PositiveSet compare_empty_x thm
R17252:17266 Coq.MSets.MSetPositive PositiveSet compare_empty_x thm
prf 17303:17312 PositiveSet ct_compare
R17333:17334 Coq.MSets.MSetPositive PositiveSet ct ind
R17365:17371 Coq.MSets.MSetPositive PositiveSet compare def
R17375:17375 Coq.MSets.MSetPositive <> c var
R17373:17373 Coq.MSets.MSetPositive <> a var
R17351:17357 Coq.MSets.MSetPositive PositiveSet compare def
R17361:17361 Coq.MSets.MSetPositive <> c var
R17359:17359 Coq.MSets.MSetPositive <> b var
R17337:17343 Coq.MSets.MSetPositive PositiveSet compare def
R17347:17347 Coq.MSets.MSetPositive <> b var
R17345:17345 Coq.MSets.MSetPositive <> a var
R17523:17533 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R17523:17533 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R17523:17533 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R17553:17559 Coq.MSets.MSetPositive PositiveSet compare def
R17576:17583 Coq.MSets.MSetPositive PositiveSet is_empty def
R17586:17589 Coq.MSets.MSetPositive PositiveSet Node constr
R17576:17583 Coq.MSets.MSetPositive PositiveSet is_empty def
R17586:17589 Coq.MSets.MSetPositive PositiveSet Node constr
R17629:17643 Coq.MSets.MSetPositive PositiveSet compare_empty_x thm
R17629:17643 Coq.MSets.MSetPositive PositiveSet compare_empty_x thm
R17629:17643 Coq.MSets.MSetPositive PositiveSet compare_empty_x thm
R17670:17676 Coq.MSets.MSetPositive PositiveSet compare def
R17693:17700 Coq.MSets.MSetPositive PositiveSet is_empty def
R17703:17706 Coq.MSets.MSetPositive PositiveSet Node constr
R17693:17700 Coq.MSets.MSetPositive PositiveSet is_empty def
R17703:17706 Coq.MSets.MSetPositive PositiveSet Node constr
R17751:17765 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R17751:17765 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R17751:17765 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R17884:17890 Coq.MSets.MSetPositive PositiveSet compare def
R17906:17919 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17906:17919 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17906:17919 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R17937:17944 Coq.MSets.MSetPositive PositiveSet is_empty def
R17947:17950 Coq.MSets.MSetPositive PositiveSet Node constr
R17937:17944 Coq.MSets.MSetPositive PositiveSet is_empty def
R17947:17950 Coq.MSets.MSetPositive PositiveSet Node constr
R17986:18000 Coq.MSets.MSetPositive PositiveSet compare_empty_x thm
R17986:18000 Coq.MSets.MSetPositive PositiveSet compare_empty_x thm
R17986:18000 Coq.MSets.MSetPositive PositiveSet compare_empty_x thm
R18028:18035 Coq.MSets.MSetPositive PositiveSet is_empty def
R18038:18041 Coq.MSets.MSetPositive PositiveSet Node constr
R18028:18035 Coq.MSets.MSetPositive PositiveSet is_empty def
R18038:18041 Coq.MSets.MSetPositive PositiveSet Node constr
R18086:18100 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R18086:18100 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R18086:18100 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R18146:18159 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R18146:18159 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R18146:18159 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R18146:18159 Coq.MSets.MSetPositive PositiveSet compare_x_Leaf thm
R18177:18184 Coq.MSets.MSetPositive PositiveSet is_empty def
R18187:18190 Coq.MSets.MSetPositive PositiveSet Node constr
R18177:18184 Coq.MSets.MSetPositive PositiveSet is_empty def
R18187:18190 Coq.MSets.MSetPositive PositiveSet Node constr
R18225:18235 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R18239:18253 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R18225:18235 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R18225:18235 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R18239:18253 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R18239:18253 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R18281:18288 Coq.MSets.MSetPositive PositiveSet is_empty def
R18291:18294 Coq.MSets.MSetPositive PositiveSet Node constr
R18281:18288 Coq.MSets.MSetPositive PositiveSet is_empty def
R18291:18294 Coq.MSets.MSetPositive PositiveSet Node constr
R18335:18349 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R18335:18349 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R18335:18349 Coq.MSets.MSetPositive PositiveSet compare_x_empty thm
R18405:18410 Coq.MSets.MSetPositive PositiveSet ct_lex thm
R18405:18410 Coq.MSets.MSetPositive PositiveSet ct_lex thm
R18419:18433 Coq.MSets.MSetPositive PositiveSet ct_compare_bool thm
R18419:18433 Coq.MSets.MSetPositive PositiveSet ct_compare_bool thm
R18449:18454 Coq.MSets.MSetPositive PositiveSet ct_lex thm
R18449:18454 Coq.MSets.MSetPositive PositiveSet ct_lex thm
R18480:18486 Coq.MSets.MSetPositive PositiveSet.lt_spec <> sec
inst 18501:18511 PositiveSet lt_strorder
R18515:18525 Coq.Classes.RelationClasses <> StrictOrder class
R18527:18528 Coq.MSets.MSetPositive PositiveSet lt def
R18550:18551 Coq.MSets.MSetPositive PositiveSet lt def
R18598:18600 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18587:18593 Coq.MSets.MSetPositive PositiveSet compare def
R18601:18602 Coq.Init.Datatypes <> Eq constr
R18598:18600 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18587:18593 Coq.MSets.MSetPositive PositiveSet compare def
R18601:18602 Coq.Init.Datatypes <> Eq constr
R18616:18628 Coq.MSets.MSetPositive PositiveSet compare_equal thm
R18631:18640 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R18616:18628 Coq.MSets.MSetPositive PositiveSet compare_equal thm
R18631:18640 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R18701:18710 Coq.MSets.MSetPositive PositiveSet ct_compare thm
R18701:18710 Coq.MSets.MSetPositive PositiveSet ct_compare thm
inst 18799:18814 PositiveSet compare_compat_1
R18818:18823 Coq.Classes.Morphisms <> Proper class
R18852:18858 Coq.MSets.MSetPositive PositiveSet compare def
R18828:18830 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R18826:18827 Coq.MSets.MSetPositive PositiveSet eq def
R18839:18841 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R18831:18838 Coq.Init.Logic <> eq ind
R18842:18849 Coq.Init.Logic <> eq ind
R18917:18918 Coq.MSets.MSetPositive PositiveSet eq def
R18937:18946 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R18952:18964 Coq.MSets.MSetPositive PositiveSet compare_equal thm
R18937:18946 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R18937:18946 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R18952:18964 Coq.MSets.MSetPositive PositiveSet compare_equal thm
R18952:18964 Coq.MSets.MSetPositive PositiveSet compare_equal thm
R18986:18995 Coq.MSets.MSetPositive PositiveSet ct_compare thm
R18986:18995 Coq.MSets.MSetPositive PositiveSet ct_compare thm
inst 19061:19074 PositiveSet compare_compat
R19078:19083 Coq.Classes.Morphisms <> Proper class
R19106:19112 Coq.MSets.MSetPositive PositiveSet compare def
R19088:19090 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R19086:19087 Coq.MSets.MSetPositive PositiveSet eq def
R19093:19095 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R19091:19092 Coq.MSets.MSetPositive PositiveSet eq def
R19096:19103 Coq.Init.Logic <> eq ind
R19174:19184 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R19194:19204 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R19174:19184 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R19174:19184 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R19194:19204 Coq.MSets.MSetPositive PositiveSet compare_inv thm
R19194:19204 Coq.MSets.MSetPositive PositiveSet compare_inv thm
inst 19245:19253 PositiveSet lt_compat
R19257:19262 Coq.Classes.Morphisms <> Proper class
R19280:19281 Coq.MSets.MSetPositive PositiveSet lt def
R19267:19269 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R19265:19266 Coq.MSets.MSetPositive PositiveSet eq def
R19272:19274 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R19270:19271 Coq.MSets.MSetPositive PositiveSet eq def
R19275:19277 Coq.Init.Logic <> iff def
R19327:19328 Coq.MSets.MSetPositive PositiveSet lt def
prf 19407:19414 PositiveSet add_spec
R19445:19449 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R19431:19432 Coq.MSets.MSetPositive PositiveSet In def
R19437:19439 Coq.MSets.MSetPositive PositiveSet add def
R19443:19443 Coq.MSets.MSetPositive <> s var
R19441:19441 Coq.MSets.MSetPositive <> x var
R19434:19434 Coq.MSets.MSetPositive <> y var
R19453:19456 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19451:19451 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19450:19450 Coq.MSets.MSetPositive <> y var
R19452:19452 Coq.MSets.MSetPositive <> x var
R19457:19458 Coq.MSets.MSetPositive PositiveSet In def
R19462:19462 Coq.MSets.MSetPositive <> s var
R19460:19460 Coq.MSets.MSetPositive <> y var
R19485:19486 Coq.MSets.MSetPositive PositiveSet In def
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19612:19619 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
prf 19696:19706 PositiveSet remove_spec
R19740:19744 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R19723:19724 Coq.MSets.MSetPositive PositiveSet In def
R19729:19734 Coq.MSets.MSetPositive PositiveSet remove def
R19738:19738 Coq.MSets.MSetPositive <> s var
R19736:19736 Coq.MSets.MSetPositive <> x var
R19726:19726 Coq.MSets.MSetPositive <> y var
R19751:19754 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R19745:19746 Coq.MSets.MSetPositive PositiveSet In def
R19750:19750 Coq.MSets.MSetPositive <> s var
R19748:19748 Coq.MSets.MSetPositive <> y var
R19756:19757 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R19755:19755 Coq.MSets.MSetPositive <> y var
R19758:19758 Coq.MSets.MSetPositive <> x var
R19781:19782 Coq.MSets.MSetPositive PositiveSet In def
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19877:19884 Coq.MSets.MSetPositive PositiveSet mem_node thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R19942:19949 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
prf 20034:20047 PositiveSet singleton_spec
R20081:20085 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R20063:20064 Coq.MSets.MSetPositive PositiveSet In def
R20069:20077 Coq.MSets.MSetPositive PositiveSet singleton def
R20079:20079 Coq.MSets.MSetPositive <> x var
R20066:20066 Coq.MSets.MSetPositive <> y var
R20087:20087 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20086:20086 Coq.MSets.MSetPositive <> y var
R20088:20088 Coq.MSets.MSetPositive <> x var
R20111:20119 Coq.MSets.MSetPositive PositiveSet singleton def
R20142:20149 Coq.MSets.MSetPositive PositiveSet add_spec thm
R20142:20149 Coq.MSets.MSetPositive PositiveSet add_spec thm
R20142:20149 Coq.MSets.MSetPositive PositiveSet add_spec thm
R20174:20175 Coq.MSets.MSetPositive PositiveSet In def
R20191:20198 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R20191:20198 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R20191:20198 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
prf 20271:20280 PositiveSet union_spec
R20315:20319 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R20298:20299 Coq.MSets.MSetPositive PositiveSet In def
R20304:20308 Coq.MSets.MSetPositive PositiveSet union def
R20312:20313 Coq.MSets.MSetPositive <> s' var
R20310:20310 Coq.MSets.MSetPositive <> s var
R20301:20301 Coq.MSets.MSetPositive <> x var
R20326:20329 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R20320:20321 Coq.MSets.MSetPositive PositiveSet In def
R20325:20325 Coq.MSets.MSetPositive <> s var
R20323:20323 Coq.MSets.MSetPositive <> x var
R20330:20331 Coq.MSets.MSetPositive PositiveSet In def
R20335:20336 Coq.MSets.MSetPositive <> s' var
R20333:20333 Coq.MSets.MSetPositive <> x var
R20359:20360 Coq.MSets.MSetPositive PositiveSet In def
R20533:20544 Coq.Bool.Bool <> orb_true_iff thm
R20533:20544 Coq.Bool.Bool <> orb_true_iff thm
prf 20598:20607 PositiveSet inter_spec
R20642:20646 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R20625:20626 Coq.MSets.MSetPositive PositiveSet In def
R20631:20635 Coq.MSets.MSetPositive PositiveSet inter def
R20639:20640 Coq.MSets.MSetPositive <> s' var
R20637:20637 Coq.MSets.MSetPositive <> s var
R20628:20628 Coq.MSets.MSetPositive <> x var
R20653:20656 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R20647:20648 Coq.MSets.MSetPositive PositiveSet In def
R20652:20652 Coq.MSets.MSetPositive <> s var
R20650:20650 Coq.MSets.MSetPositive <> x var
R20657:20658 Coq.MSets.MSetPositive PositiveSet In def
R20662:20663 Coq.MSets.MSetPositive <> s' var
R20660:20660 Coq.MSets.MSetPositive <> x var
R20686:20687 Coq.MSets.MSetPositive PositiveSet In def
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20784:20791 Coq.MSets.MSetPositive PositiveSet mem_node thm
R20877:20889 Coq.Bool.Bool <> andb_true_iff thm
R20877:20889 Coq.Bool.Bool <> andb_true_iff thm
prf 20942:20950 PositiveSet diff_spec
R20984:20988 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R20968:20969 Coq.MSets.MSetPositive PositiveSet In def
R20974:20977 Coq.MSets.MSetPositive PositiveSet diff def
R20981:20982 Coq.MSets.MSetPositive <> s' var
R20979:20979 Coq.MSets.MSetPositive <> s var
R20971:20971 Coq.MSets.MSetPositive <> x var
R20995:20998 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R20989:20990 Coq.MSets.MSetPositive PositiveSet In def
R20994:20994 Coq.MSets.MSetPositive <> s var
R20992:20992 Coq.MSets.MSetPositive <> x var
R20999:21000 Coq.Init.Logic <> ::type_scope:'~'_x not
R21001:21002 Coq.MSets.MSetPositive PositiveSet In def
R21006:21007 Coq.MSets.MSetPositive <> s' var
R21004:21004 Coq.MSets.MSetPositive <> x var
R21030:21031 Coq.MSets.MSetPositive PositiveSet In def
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21147:21154 Coq.MSets.MSetPositive PositiveSet mem_node thm
R21244:21256 Coq.Bool.Bool <> andb_true_iff thm
R21244:21256 Coq.Bool.Bool <> andb_true_iff thm
R21244:21256 Coq.Bool.Bool <> andb_true_iff thm
prf 21346:21354 PositiveSet fold_spec
R21382:21382 Coq.MSets.MSetPositive <> A var
R21393:21396 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21398:21401 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21402:21402 Coq.MSets.MSetPositive <> A var
R21397:21397 Coq.MSets.MSetPositive <> A var
R21390:21392 Coq.MSets.MSetPositive PositiveSet elt def
R21422:21424 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21412:21415 Coq.MSets.MSetPositive PositiveSet fold def
R21421:21421 Coq.MSets.MSetPositive <> i var
R21419:21419 Coq.MSets.MSetPositive <> s var
R21417:21417 Coq.MSets.MSetPositive <> f var
R21425:21433 Coq.Lists.List <> fold_left def
R21467:21467 Coq.MSets.MSetPositive <> i var
R21455:21462 Coq.MSets.MSetPositive PositiveSet elements def
R21464:21464 Coq.MSets.MSetPositive <> s var
R21447:21447 Coq.MSets.MSetPositive <> f var
R21451:21451 Coq.MSets.MSetPositive <> a var
R21449:21449 Coq.MSets.MSetPositive <> e var
R21490:21493 Coq.MSets.MSetPositive PositiveSet fold def
R21496:21503 Coq.MSets.MSetPositive PositiveSet elements def
R21564:21564 Coq.MSets.MSetPositive <> a var
R21562:21562 Coq.MSets.MSetPositive <> e var
R21564:21564 Coq.MSets.MSetPositive <> a var
R21562:21562 Coq.MSets.MSetPositive <> e var
R21639:21647 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21607:21615 Coq.Lists.List <> fold_left def
R21625:21629 Coq.MSets.MSetPositive PositiveSet xfold def
R21637:21637 Coq.MSets.MSetPositive <> j var
R21635:21635 Coq.MSets.MSetPositive <> i var
R21633:21633 Coq.MSets.MSetPositive <> s var
R21620:21622 Coq.MSets.MSetPositive <> acc var
R21648:21656 Coq.Lists.List <> fold_left def
R21681:21681 Coq.MSets.MSetPositive <> i var
R21662:21670 Coq.MSets.MSetPositive PositiveSet xelements def
R21676:21678 Coq.MSets.MSetPositive <> acc var
R21674:21674 Coq.MSets.MSetPositive <> j var
R21672:21672 Coq.MSets.MSetPositive <> s var
R21639:21647 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21607:21615 Coq.Lists.List <> fold_left def
R21625:21629 Coq.MSets.MSetPositive PositiveSet xfold def
R21637:21637 Coq.MSets.MSetPositive <> j var
R21635:21635 Coq.MSets.MSetPositive <> i var
R21633:21633 Coq.MSets.MSetPositive <> s var
R21620:21622 Coq.MSets.MSetPositive <> acc var
R21648:21656 Coq.Lists.List <> fold_left def
R21681:21681 Coq.MSets.MSetPositive <> i var
R21662:21670 Coq.MSets.MSetPositive PositiveSet xelements def
R21676:21678 Coq.MSets.MSetPositive <> acc var
R21674:21674 Coq.MSets.MSetPositive <> j var
R21672:21672 Coq.MSets.MSetPositive <> s var
R21890:21892 Coq.Init.Datatypes <> nil constr
R21890:21892 Coq.Init.Datatypes <> nil constr
prf 21950:21962 PositiveSet cardinal_spec
R21985:21987 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21975:21982 Coq.MSets.MSetPositive PositiveSet cardinal def
R21984:21984 Coq.MSets.MSetPositive <> s var
R21988:21993 Coq.Init.Datatypes <> length def
R21996:22003 Coq.MSets.MSetPositive PositiveSet elements def
R22005:22005 Coq.MSets.MSetPositive <> s var
R22029:22036 Coq.MSets.MSetPositive PositiveSet elements def
R22115:22117 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22097:22099 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R22087:22094 Coq.MSets.MSetPositive PositiveSet cardinal def
R22096:22096 Coq.MSets.MSetPositive <> s var
R22100:22105 Coq.Init.Datatypes <> length def
R22107:22109 Coq.MSets.MSetPositive <> acc var
R22118:22123 Coq.Init.Datatypes <> length def
R22126:22134 Coq.MSets.MSetPositive PositiveSet xelements def
R22140:22142 Coq.MSets.MSetPositive <> acc var
R22138:22138 Coq.MSets.MSetPositive <> j var
R22136:22136 Coq.MSets.MSetPositive <> s var
R22115:22117 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22097:22099 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R22087:22094 Coq.MSets.MSetPositive PositiveSet cardinal def
R22096:22096 Coq.MSets.MSetPositive <> s var
R22100:22105 Coq.Init.Datatypes <> length def
R22107:22109 Coq.MSets.MSetPositive <> acc var
R22118:22123 Coq.Init.Datatypes <> length def
R22126:22134 Coq.MSets.MSetPositive PositiveSet xelements def
R22140:22142 Coq.MSets.MSetPositive <> acc var
R22138:22138 Coq.MSets.MSetPositive <> j var
R22136:22136 Coq.MSets.MSetPositive <> s var
R22290:22298 Coq.Init.Peano <> plus_n_Sm thm
R22301:22315 Coq.Arith.Plus <> plus_assoc syndef
R22290:22298 Coq.Init.Peano <> plus_n_Sm thm
R22290:22298 Coq.Init.Peano <> plus_n_Sm thm
R22301:22315 Coq.Arith.Plus <> plus_assoc syndef
R22301:22315 Coq.Arith.Plus <> plus_assoc syndef
R22369:22383 Coq.Arith.Plus <> plus_assoc syndef
R22369:22383 Coq.Arith.Plus <> plus_assoc syndef
R22369:22383 Coq.Arith.Plus <> plus_assoc syndef
R22441:22454 Coq.Arith.Plus <> plus_comm syndef
R22441:22454 Coq.Arith.Plus <> plus_comm syndef
R22441:22454 Coq.Arith.Plus <> plus_comm syndef
prf 22522:22533 PositiveSet xfilter_spec
R22576:22580 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R22556:22557 Coq.MSets.MSetPositive PositiveSet In def
R22562:22568 Coq.MSets.MSetPositive PositiveSet xfilter def
R22574:22574 Coq.MSets.MSetPositive <> i var
R22572:22572 Coq.MSets.MSetPositive <> s var
R22570:22570 Coq.MSets.MSetPositive <> f var
R22559:22559 Coq.MSets.MSetPositive <> x var
R22587:22590 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R22581:22582 Coq.MSets.MSetPositive PositiveSet In def
R22586:22586 Coq.MSets.MSetPositive <> s var
R22584:22584 Coq.MSets.MSetPositive <> x var
R22598:22600 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22591:22591 Coq.MSets.MSetPositive <> f var
R22595:22595 Coq.MSets.MSetPositive PositiveSet :::x_'@'_x not
R22594:22594 Coq.MSets.MSetPositive <> i var
R22596:22596 Coq.MSets.MSetPositive <> x var
R22601:22604 Coq.Init.Datatypes <> true constr
R22636:22637 Coq.MSets.MSetPositive PositiveSet In def
R22717:22724 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R22717:22724 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R22717:22724 Coq.MSets.MSetPositive PositiveSet mem_Leaf thm
R22764:22771 Coq.MSets.MSetPositive PositiveSet mem_node thm
R22764:22771 Coq.MSets.MSetPositive PositiveSet mem_node thm
R22764:22771 Coq.MSets.MSetPositive PositiveSet mem_node thm
R22877:22889 Coq.Bool.Bool <> andb_lazy_alt thm
R22877:22889 Coq.Bool.Bool <> andb_lazy_alt thm
R22877:22889 Coq.Bool.Bool <> andb_lazy_alt thm
R22898:22910 Coq.Bool.Bool <> andb_true_iff thm
R22898:22910 Coq.Bool.Bool <> andb_true_iff thm
prf 22929:22939 PositiveSet filter_spec
R22979:22987 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23030:23030 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23005:23009 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R22988:22989 Coq.MSets.MSetPositive PositiveSet In def
R22994:22999 Coq.MSets.MSetPositive PositiveSet filter def
R23003:23003 Coq.MSets.MSetPositive <> s var
R23001:23001 Coq.MSets.MSetPositive <> f var
R22991:22991 Coq.MSets.MSetPositive <> x var
R23016:23019 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R23010:23011 Coq.MSets.MSetPositive PositiveSet In def
R23015:23015 Coq.MSets.MSetPositive <> s var
R23013:23013 Coq.MSets.MSetPositive <> x var
R23023:23025 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23020:23020 Coq.MSets.MSetPositive <> f var
R23022:23022 Coq.MSets.MSetPositive <> x var
R23026:23029 Coq.Init.Datatypes <> true constr
R22957:22967 Coq.Lists.SetoidList <> compat_bool def
R22978:22978 Coq.MSets.MSetPositive <> f var
R22973:22976 Coq.MSets.MSetPositive PositiveSet eq def
R22969:22971 Coq.MSets.MSetPositive PositiveSet elt def
R23056:23067 Coq.MSets.MSetPositive PositiveSet xfilter_spec thm
R23056:23067 Coq.MSets.MSetPositive PositiveSet xfilter_spec thm
prf 23121:23132 PositiveSet xforall_spec
R23173:23177 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R23166:23168 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23153:23159 Coq.MSets.MSetPositive PositiveSet xforall def
R23165:23165 Coq.MSets.MSetPositive <> i var
R23163:23163 Coq.MSets.MSetPositive <> s var
R23161:23161 Coq.MSets.MSetPositive <> f var
R23169:23172 Coq.Init.Datatypes <> true constr
R23178:23184 Coq.MSets.MSetPositive PositiveSet For_all def
R23212:23212 Coq.MSets.MSetPositive <> s var
R23203:23205 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23196:23196 Coq.MSets.MSetPositive <> f var
R23200:23200 Coq.MSets.MSetPositive PositiveSet :::x_'@'_x not
R23199:23199 Coq.MSets.MSetPositive <> i var
R23201:23201 Coq.MSets.MSetPositive <> x var
R23206:23209 Coq.Init.Datatypes <> true constr
R23235:23241 Coq.MSets.MSetPositive PositiveSet For_all def
R23244:23245 Coq.MSets.MSetPositive PositiveSet In def
R23356:23368 Coq.Bool.Bool <> andb_lazy_alt thm
R23374:23385 Coq.Bool.Bool <> orb_lazy_alt thm
R23390:23402 Coq.Bool.Bool <> andb_true_iff thm
R23356:23368 Coq.Bool.Bool <> andb_lazy_alt thm
R23356:23368 Coq.Bool.Bool <> andb_lazy_alt thm
R23356:23368 Coq.Bool.Bool <> andb_lazy_alt thm
R23374:23385 Coq.Bool.Bool <> orb_lazy_alt thm
R23374:23385 Coq.Bool.Bool <> orb_lazy_alt thm
R23390:23402 Coq.Bool.Bool <> andb_true_iff thm
R23390:23402 Coq.Bool.Bool <> andb_true_iff thm
R23390:23402 Coq.Bool.Bool <> andb_true_iff thm
prf 23767:23778 PositiveSet for_all_spec
R23816:23824 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23879:23879 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23843:23847 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R23836:23838 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23825:23831 Coq.MSets.MSetPositive PositiveSet for_all def
R23835:23835 Coq.MSets.MSetPositive <> s var
R23833:23833 Coq.MSets.MSetPositive <> f var
R23839:23842 Coq.Init.Datatypes <> true constr
R23848:23854 Coq.MSets.MSetPositive PositiveSet For_all def
R23878:23878 Coq.MSets.MSetPositive <> s var
R23869:23871 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23866:23866 Coq.MSets.MSetPositive <> f var
R23868:23868 Coq.MSets.MSetPositive <> x var
R23872:23875 Coq.Init.Datatypes <> true constr
R23794:23804 Coq.Lists.SetoidList <> compat_bool def
R23815:23815 Coq.MSets.MSetPositive <> f var
R23810:23813 Coq.MSets.MSetPositive PositiveSet eq def
R23806:23808 Coq.MSets.MSetPositive PositiveSet elt def
R23905:23916 Coq.MSets.MSetPositive PositiveSet xforall_spec thm
R23905:23916 Coq.MSets.MSetPositive PositiveSet xforall_spec thm
prf 23969:23980 PositiveSet xexists_spec
R24021:24025 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R24014:24016 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24001:24007 Coq.MSets.MSetPositive PositiveSet xexists def
R24013:24013 Coq.MSets.MSetPositive <> i var
R24011:24011 Coq.MSets.MSetPositive <> s var
R24009:24009 Coq.MSets.MSetPositive <> f var
R24017:24020 Coq.Init.Datatypes <> true constr
R24026:24031 Coq.MSets.MSetPositive PositiveSet Exists def
R24059:24059 Coq.MSets.MSetPositive <> s var
R24050:24052 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24043:24043 Coq.MSets.MSetPositive <> f var
R24047:24047 Coq.MSets.MSetPositive PositiveSet :::x_'@'_x not
R24046:24046 Coq.MSets.MSetPositive <> i var
R24048:24048 Coq.MSets.MSetPositive <> x var
R24053:24056 Coq.Init.Datatypes <> true constr
R24082:24087 Coq.MSets.MSetPositive PositiveSet Exists def
R24090:24091 Coq.MSets.MSetPositive PositiveSet In def
R24191:24202 Coq.Bool.Bool <> orb_lazy_alt thm
R24206:24217 Coq.Bool.Bool <> orb_true_iff thm
R24223:24235 Coq.Bool.Bool <> andb_lazy_alt thm
R24238:24250 Coq.Bool.Bool <> andb_true_iff thm
R24191:24202 Coq.Bool.Bool <> orb_lazy_alt thm
R24191:24202 Coq.Bool.Bool <> orb_lazy_alt thm
R24191:24202 Coq.Bool.Bool <> orb_lazy_alt thm
R24206:24217 Coq.Bool.Bool <> orb_true_iff thm
R24206:24217 Coq.Bool.Bool <> orb_true_iff thm
R24206:24217 Coq.Bool.Bool <> orb_true_iff thm
R24223:24235 Coq.Bool.Bool <> andb_lazy_alt thm
R24223:24235 Coq.Bool.Bool <> andb_lazy_alt thm
R24238:24250 Coq.Bool.Bool <> andb_true_iff thm
R24238:24250 Coq.Bool.Bool <> andb_true_iff thm
R24384:24385 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R24384:24385 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R24414:24415 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R24414:24415 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
prf 24477:24487 PositiveSet exists_spec
R24526:24534 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24588:24588 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24553:24557 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R24546:24548 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24535:24541 Coq.MSets.MSetPositive PositiveSet exists_ def
R24545:24545 Coq.MSets.MSetPositive <> s var
R24543:24543 Coq.MSets.MSetPositive <> f var
R24549:24552 Coq.Init.Datatypes <> true constr
R24558:24563 Coq.MSets.MSetPositive PositiveSet Exists def
R24587:24587 Coq.MSets.MSetPositive <> s var
R24578:24580 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24575:24575 Coq.MSets.MSetPositive <> f var
R24577:24577 Coq.MSets.MSetPositive <> x var
R24581:24584 Coq.Init.Datatypes <> true constr
R24504:24514 Coq.Lists.SetoidList <> compat_bool def
R24525:24525 Coq.MSets.MSetPositive <> f var
R24520:24523 Coq.MSets.MSetPositive PositiveSet eq def
R24516:24518 Coq.MSets.MSetPositive PositiveSet elt def
R24614:24625 Coq.MSets.MSetPositive PositiveSet xexists_spec thm
R24614:24625 Coq.MSets.MSetPositive PositiveSet xexists_spec thm
prf 24682:24697 PositiveSet partition_filter
R24730:24732 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24717:24725 Coq.MSets.MSetPositive PositiveSet partition def
R24729:24729 Coq.MSets.MSetPositive <> s var
R24727:24727 Coq.MSets.MSetPositive <> f var
R24733:24733 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24744:24745 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24776:24776 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24734:24739 Coq.MSets.MSetPositive PositiveSet filter def
R24743:24743 Coq.MSets.MSetPositive <> s var
R24741:24741 Coq.MSets.MSetPositive <> f var
R24746:24751 Coq.MSets.MSetPositive PositiveSet filter def
R24775:24775 Coq.MSets.MSetPositive <> s var
R24763:24766 Coq.Init.Datatypes <> negb def
R24769:24769 Coq.MSets.MSetPositive <> f var
R24771:24771 Coq.MSets.MSetPositive <> x var
R24799:24807 Coq.MSets.MSetPositive PositiveSet partition def
R24810:24815 Coq.MSets.MSetPositive PositiveSet filter def
prf 24986:25000 PositiveSet partition_spec1
R25039:25048 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25049:25053 Coq.MSets.MSetPositive PositiveSet Equal def
R25078:25083 Coq.MSets.MSetPositive PositiveSet filter def
R25087:25087 Coq.MSets.MSetPositive <> s var
R25085:25085 Coq.MSets.MSetPositive <> f var
R25056:25058 Coq.Init.Datatypes <> fst def
R25061:25069 Coq.MSets.MSetPositive PositiveSet partition def
R25073:25073 Coq.MSets.MSetPositive <> s var
R25071:25071 Coq.MSets.MSetPositive <> f var
R25017:25027 Coq.Lists.SetoidList <> compat_bool def
R25038:25038 Coq.MSets.MSetPositive <> f var
R25033:25036 Coq.MSets.MSetPositive PositiveSet eq def
R25029:25031 Coq.MSets.MSetPositive PositiveSet elt def
R25116:25131 Coq.MSets.MSetPositive PositiveSet partition_filter thm
R25116:25131 Coq.MSets.MSetPositive PositiveSet partition_filter thm
R25116:25131 Coq.MSets.MSetPositive PositiveSet partition_filter thm
prf 25161:25175 PositiveSet partition_spec2
R25214:25223 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25224:25228 Coq.MSets.MSetPositive PositiveSet Equal def
R25253:25258 Coq.MSets.MSetPositive PositiveSet filter def
R25282:25282 Coq.MSets.MSetPositive <> s var
R25270:25273 Coq.Init.Datatypes <> negb def
R25276:25276 Coq.MSets.MSetPositive <> f var
R25278:25278 Coq.MSets.MSetPositive <> x var
R25231:25233 Coq.Init.Datatypes <> snd def
R25236:25244 Coq.MSets.MSetPositive PositiveSet partition def
R25248:25248 Coq.MSets.MSetPositive <> s var
R25246:25246 Coq.MSets.MSetPositive <> f var
R25192:25202 Coq.Lists.SetoidList <> compat_bool def
R25213:25213 Coq.MSets.MSetPositive <> f var
R25208:25211 Coq.MSets.MSetPositive PositiveSet eq def
R25204:25206 Coq.MSets.MSetPositive PositiveSet elt def
R25311:25326 Coq.MSets.MSetPositive PositiveSet partition_filter thm
R25311:25326 Coq.MSets.MSetPositive PositiveSet partition_filter thm
R25311:25326 Coq.MSets.MSetPositive PositiveSet partition_filter thm
syndef 25398:25400 PositiveSet InL
R25406:25408 Coq.Lists.SetoidList <> InA ind
R25410:25413 Coq.MSets.MSetPositive PositiveSet eq def
prf 25426:25439 PositiveSet xelements_spec
R25489:25501 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R25464:25466 Coq.MSets.MSetPositive PositiveSet InL syndef
R25471:25479 Coq.MSets.MSetPositive PositiveSet xelements def
R25485:25487 Coq.MSets.MSetPositive <> acc var
R25483:25483 Coq.MSets.MSetPositive <> j var
R25481:25481 Coq.MSets.MSetPositive <> s var
R25468:25468 Coq.MSets.MSetPositive <> y var
R25511:25514 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R25502:25504 Coq.MSets.MSetPositive PositiveSet InL syndef
R25508:25510 Coq.MSets.MSetPositive <> acc var
R25506:25506 Coq.MSets.MSetPositive <> y var
R25515:25521 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R25523:25524 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R25532:25535 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25526:25527 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25531:25531 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25525:25525 Coq.MSets.MSetPositive <> y var
R25529:25529 Coq.MSets.MSetPositive PositiveSet :::x_'@'_x not
R25528:25528 Coq.MSets.MSetPositive <> j var
R25530:25530 Coq.MSets.MSetPositive <> x var
R25543:25545 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25536:25538 Coq.MSets.MSetPositive PositiveSet mem def
R25542:25542 Coq.MSets.MSetPositive <> s var
R25540:25540 Coq.MSets.MSetPositive <> x var
R25546:25549 Coq.Init.Datatypes <> true constr
R25787:25794 Coq.Lists.SetoidList <> InA_cons thm
R25787:25794 Coq.Lists.SetoidList <> InA_cons thm
R25787:25794 Coq.Lists.SetoidList <> InA_cons thm
R25916:25917 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R25916:25917 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R25953:25954 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R25953:25954 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R26306:26307 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R26306:26307 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R26343:26344 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
R26343:26344 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'0' not
prf 26554:26567 PositiveSet elements_spec1
R26600:26604 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R26582:26584 Coq.MSets.MSetPositive PositiveSet InL syndef
R26589:26596 Coq.MSets.MSetPositive PositiveSet elements def
R26598:26598 Coq.MSets.MSetPositive <> s var
R26586:26586 Coq.MSets.MSetPositive <> x var
R26605:26606 Coq.MSets.MSetPositive PositiveSet In def
R26610:26610 Coq.MSets.MSetPositive <> s var
R26608:26608 Coq.MSets.MSetPositive <> x var
R26632:26639 Coq.MSets.MSetPositive PositiveSet elements def
R26658:26671 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R26658:26671 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R26658:26671 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
prf 26806:26818 PositiveSet lt_rev_append
R26843:26846 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26847:26850 Coq.MSets.MSetPositive PositiveSet lt def
R26860:26860 Coq.MSets.MSetPositive PositiveSet :::x_'@'_x not
R26859:26859 Coq.MSets.MSetPositive <> j var
R26861:26861 Coq.MSets.MSetPositive <> y var
R26854:26854 Coq.MSets.MSetPositive PositiveSet :::x_'@'_x not
R26853:26853 Coq.MSets.MSetPositive <> j var
R26855:26855 Coq.MSets.MSetPositive <> x var
R26835:26838 Coq.MSets.MSetPositive PositiveSet lt def
R26842:26842 Coq.MSets.MSetPositive <> y var
R26840:26840 Coq.MSets.MSetPositive <> x var
prf 26922:26935 PositiveSet elements_spec2
R26948:26951 Coq.Sorting.Sorted <> sort syndef
R26959:26966 Coq.MSets.MSetPositive PositiveSet elements def
R26968:26968 Coq.MSets.MSetPositive <> s var
R26953:26956 Coq.MSets.MSetPositive PositiveSet lt def
R26992:26999 Coq.MSets.MSetPositive PositiveSet elements def
R27052:27061 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27062:27062 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27111:27121 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27122:27125 Coq.Sorting.Sorted <> sort syndef
R27133:27141 Coq.MSets.MSetPositive PositiveSet xelements def
R27147:27149 Coq.MSets.MSetPositive <> acc var
R27145:27145 Coq.MSets.MSetPositive <> j var
R27143:27143 Coq.MSets.MSetPositive <> s var
R27127:27130 Coq.MSets.MSetPositive PositiveSet lt def
R27081:27085 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27095:27098 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27099:27102 Coq.MSets.MSetPositive PositiveSet lt def
R27110:27110 Coq.MSets.MSetPositive <> y var
R27106:27106 Coq.MSets.MSetPositive PositiveSet :::x_'@'_x not
R27105:27105 Coq.MSets.MSetPositive <> j var
R27107:27107 Coq.MSets.MSetPositive <> x var
R27086:27088 Coq.MSets.MSetPositive PositiveSet InL syndef
R27092:27094 Coq.MSets.MSetPositive <> acc var
R27090:27090 Coq.MSets.MSetPositive <> y var
R27075:27076 Coq.MSets.MSetPositive PositiveSet In def
R27080:27080 Coq.MSets.MSetPositive <> s var
R27078:27078 Coq.MSets.MSetPositive <> x var
R27039:27042 Coq.Sorting.Sorted <> sort syndef
R27049:27051 Coq.MSets.MSetPositive <> acc var
R27044:27047 Coq.MSets.MSetPositive PositiveSet lt def
R27052:27061 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27062:27062 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27111:27121 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27122:27125 Coq.Sorting.Sorted <> sort syndef
R27133:27141 Coq.MSets.MSetPositive PositiveSet xelements def
R27147:27149 Coq.MSets.MSetPositive <> acc var
R27145:27145 Coq.MSets.MSetPositive <> j var
R27143:27143 Coq.MSets.MSetPositive <> s var
R27127:27130 Coq.MSets.MSetPositive PositiveSet lt def
R27081:27085 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27095:27098 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27099:27102 Coq.MSets.MSetPositive PositiveSet lt def
R27110:27110 Coq.MSets.MSetPositive <> y var
R27106:27106 Coq.MSets.MSetPositive PositiveSet :::x_'@'_x not
R27105:27105 Coq.MSets.MSetPositive <> j var
R27107:27107 Coq.MSets.MSetPositive <> x var
R27086:27088 Coq.MSets.MSetPositive PositiveSet InL syndef
R27092:27094 Coq.MSets.MSetPositive <> acc var
R27090:27090 Coq.MSets.MSetPositive <> y var
R27075:27076 Coq.MSets.MSetPositive PositiveSet In def
R27080:27080 Coq.MSets.MSetPositive <> s var
R27078:27078 Coq.MSets.MSetPositive <> x var
R27039:27042 Coq.Sorting.Sorted <> sort syndef
R27049:27051 Coq.MSets.MSetPositive <> acc var
R27044:27047 Coq.MSets.MSetPositive PositiveSet lt def
R27375:27383 Coq.MSets.MSetPositive PositiveSet xelements def
R27388:27389 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R27375:27383 Coq.MSets.MSetPositive PositiveSet xelements def
R27388:27389 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R27463:27465 Coq.MSets.MSetPositive PositiveSet InL syndef
R27470:27478 Coq.MSets.MSetPositive PositiveSet xelements def
R27483:27484 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R27463:27465 Coq.MSets.MSetPositive PositiveSet InL syndef
R27470:27478 Coq.MSets.MSetPositive PositiveSet xelements def
R27483:27484 Coq.PArith.BinPosDef <> ::positive_scope:x_'~'_'1' not
R27564:27577 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R27564:27577 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R27564:27577 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R27691:27703 Coq.MSets.MSetPositive PositiveSet lt_rev_append thm
R27691:27703 Coq.MSets.MSetPositive PositiveSet lt_rev_append thm
R27712:27712 Coq.Init.Logic <> I constr
R27712:27712 Coq.Init.Logic <> I constr
R27793:27805 Coq.MSets.MSetPositive PositiveSet lt_rev_append thm
R27793:27805 Coq.MSets.MSetPositive PositiveSet lt_rev_append thm
R27814:27814 Coq.Init.Logic <> I constr
R27814:27814 Coq.Init.Logic <> I constr
R27834:27847 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R27834:27847 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R27834:27847 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R27947:27959 Coq.MSets.MSetPositive PositiveSet lt_rev_append thm
R27947:27959 Coq.MSets.MSetPositive PositiveSet lt_rev_append thm
R27968:27968 Coq.Init.Logic <> I constr
R27968:27968 Coq.Init.Logic <> I constr
R28095:28108 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R28095:28108 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R28095:28108 Coq.MSets.MSetPositive PositiveSet xelements_spec thm
R28214:28226 Coq.MSets.MSetPositive PositiveSet lt_rev_append thm
R28214:28226 Coq.MSets.MSetPositive PositiveSet lt_rev_append thm
R28235:28235 Coq.Init.Logic <> I constr
R28235:28235 Coq.Init.Logic <> I constr
prf 28326:28340 PositiveSet elements_spec2w
R28353:28358 Coq.Lists.SetoidList <> NoDupA ind
R28366:28373 Coq.MSets.MSetPositive PositiveSet elements def
R28375:28375 Coq.MSets.MSetPositive <> s var
R28360:28363 Coq.MSets.MSetPositive PositiveSet eq def
R28423:28426 Coq.MSets.MSetPositive PositiveSet lt def
R28405:28416 Coq.Lists.SetoidList <> SortA_NoDupA thm
R28423:28426 Coq.MSets.MSetPositive PositiveSet lt def
R28405:28416 Coq.Lists.SetoidList <> SortA_NoDupA thm
R28452:28465 Coq.MSets.MSetPositive PositiveSet elements_spec2 thm
R28452:28465 Coq.MSets.MSetPositive PositiveSet elements_spec2 thm
prf 28521:28532 PositiveSet choose_spec1
R28564:28567 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28568:28569 Coq.MSets.MSetPositive PositiveSet In def
R28573:28573 Coq.MSets.MSetPositive <> s var
R28571:28571 Coq.MSets.MSetPositive <> x var
R28555:28557 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28547:28552 Coq.MSets.MSetPositive PositiveSet choose def
R28554:28554 Coq.MSets.MSetPositive <> s var
R28558:28561 Coq.Init.Datatypes <> Some constr
R28563:28563 Coq.MSets.MSetPositive <> x var
R28762:28767 Coq.MSets.MSetPositive PositiveSet choose def
R28762:28767 Coq.MSets.MSetPositive PositiveSet choose def
R28889:28894 Coq.MSets.MSetPositive PositiveSet choose def
R28889:28894 Coq.MSets.MSetPositive PositiveSet choose def
prf 29028:29039 PositiveSet choose_spec2
R29067:29070 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29071:29075 Coq.MSets.MSetPositive PositiveSet Empty def
R29077:29077 Coq.MSets.MSetPositive <> s var
R29060:29062 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29052:29057 Coq.MSets.MSetPositive PositiveSet choose def
R29059:29059 Coq.MSets.MSetPositive <> s var
R29063:29066 Coq.Init.Datatypes <> None constr
R29100:29104 Coq.MSets.MSetPositive PositiveSet Empty def
R29107:29108 Coq.MSets.MSetPositive PositiveSet In def
R29179:29188 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R29179:29188 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R29261:29266 Coq.MSets.MSetPositive PositiveSet choose def
R29261:29266 Coq.MSets.MSetPositive PositiveSet choose def
R29316:29321 Coq.MSets.MSetPositive PositiveSet choose def
R29316:29321 Coq.MSets.MSetPositive PositiveSet choose def
prf 29500:29511 PositiveSet choose_empty
R29541:29544 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29553:29555 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29545:29550 Coq.MSets.MSetPositive PositiveSet choose def
R29552:29552 Coq.MSets.MSetPositive <> s var
R29556:29559 Coq.Init.Datatypes <> None constr
R29534:29536 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29524:29531 Coq.MSets.MSetPositive PositiveSet is_empty def
R29533:29533 Coq.MSets.MSetPositive <> s var
R29537:29540 Coq.Init.Datatypes <> true constr
R29597:29602 Coq.MSets.MSetPositive PositiveSet choose def
R29597:29602 Coq.MSets.MSetPositive PositiveSet choose def
R29640:29651 Coq.MSets.MSetPositive PositiveSet choose_spec1 thm
R29640:29651 Coq.MSets.MSetPositive PositiveSet choose_spec1 thm
R29666:29678 Coq.MSets.MSetPositive PositiveSet is_empty_spec thm
R29666:29678 Coq.MSets.MSetPositive PositiveSet is_empty_spec thm
prf 29724:29736 PositiveSet choose_spec3'
R29762:29765 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29774:29776 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29766:29771 Coq.MSets.MSetPositive PositiveSet choose def
R29773:29773 Coq.MSets.MSetPositive <> s var
R29777:29782 Coq.MSets.MSetPositive PositiveSet choose def
R29784:29785 Coq.MSets.MSetPositive <> s' var
R29752:29756 Coq.MSets.MSetPositive PositiveSet Equal def
R29760:29761 Coq.MSets.MSetPositive <> s' var
R29758:29758 Coq.MSets.MSetPositive <> s var
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29819:29828 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R29898:29909 Coq.MSets.MSetPositive PositiveSet choose_empty thm
R29898:29909 Coq.MSets.MSetPositive PositiveSet choose_empty thm
R29979:29982 Coq.MSets.MSetPositive PositiveSet Node constr
R29979:29982 Coq.MSets.MSetPositive PositiveSet Node constr
R30018:30029 Coq.MSets.MSetPositive PositiveSet choose_empty thm
R30018:30029 Coq.MSets.MSetPositive PositiveSet choose_empty thm
R30048:30057 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R30048:30057 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R30048:30057 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R30091:30100 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R30091:30100 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R30091:30100 Coq.MSets.MSetPositive PositiveSet equal_spec thm
R30156:30168 Coq.Bool.Bool <> andb_lazy_alt thm
R30172:30184 Coq.Bool.Bool <> andb_true_iff thm
R30187:30198 Coq.Bool.Bool <> eqb_true_iff thm
R30156:30168 Coq.Bool.Bool <> andb_lazy_alt thm
R30156:30168 Coq.Bool.Bool <> andb_lazy_alt thm
R30156:30168 Coq.Bool.Bool <> andb_lazy_alt thm
R30172:30184 Coq.Bool.Bool <> andb_true_iff thm
R30172:30184 Coq.Bool.Bool <> andb_true_iff thm
R30172:30184 Coq.Bool.Bool <> andb_true_iff thm
R30187:30198 Coq.Bool.Bool <> eqb_true_iff thm
R30187:30198 Coq.Bool.Bool <> eqb_true_iff thm
prf 30291:30302 PositiveSet choose_spec3
R30343:30346 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30365:30368 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30379:30382 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30383:30386 Coq.MSets.MSetPositive PositiveSet eq def
R30390:30390 Coq.MSets.MSetPositive <> y var
R30388:30388 Coq.MSets.MSetPositive <> x var
R30369:30373 Coq.MSets.MSetPositive PositiveSet Equal def
R30377:30378 Coq.MSets.MSetPositive <> s' var
R30375:30375 Coq.MSets.MSetPositive <> s var
R30356:30358 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30347:30352 Coq.MSets.MSetPositive PositiveSet choose def
R30354:30355 Coq.MSets.MSetPositive <> s' var
R30359:30362 Coq.Init.Datatypes <> Some constr
R30364:30364 Coq.MSets.MSetPositive <> y var
R30334:30336 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30326:30331 Coq.MSets.MSetPositive PositiveSet choose def
R30333:30333 Coq.MSets.MSetPositive <> s var
R30337:30340 Coq.Init.Datatypes <> Some constr
R30342:30342 Coq.MSets.MSetPositive <> x var
R30433:30445 Coq.MSets.MSetPositive PositiveSet choose_spec3' thm
R30433:30445 Coq.MSets.MSetPositive PositiveSet choose_spec3' thm
prf 30517:30529 PositiveSet min_elt_spec1
R30562:30565 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30566:30567 Coq.MSets.MSetPositive PositiveSet In def
R30571:30571 Coq.MSets.MSetPositive <> s var
R30569:30569 Coq.MSets.MSetPositive <> x var
R30553:30555 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30544:30550 Coq.MSets.MSetPositive PositiveSet min_elt def
R30552:30552 Coq.MSets.MSetPositive <> s var
R30556:30559 Coq.Init.Datatypes <> Some constr
R30561:30561 Coq.MSets.MSetPositive <> x var
R30593:30594 Coq.MSets.MSetPositive PositiveSet In def
R30693:30699 Coq.MSets.MSetPositive PositiveSet min_elt def
R30693:30699 Coq.MSets.MSetPositive PositiveSet min_elt def
R30849:30855 Coq.MSets.MSetPositive PositiveSet min_elt def
R30849:30855 Coq.MSets.MSetPositive PositiveSet min_elt def
prf 30968:30980 PositiveSet min_elt_spec3
R31009:31012 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31013:31017 Coq.MSets.MSetPositive PositiveSet Empty def
R31019:31019 Coq.MSets.MSetPositive <> s var
R31002:31004 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30993:30999 Coq.MSets.MSetPositive PositiveSet min_elt def
R31001:31001 Coq.MSets.MSetPositive <> s var
R31005:31008 Coq.Init.Datatypes <> None constr
R31042:31046 Coq.MSets.MSetPositive PositiveSet Empty def
R31049:31050 Coq.MSets.MSetPositive PositiveSet In def
R31121:31130 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R31121:31130 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R31207:31213 Coq.MSets.MSetPositive PositiveSet min_elt def
R31207:31213 Coq.MSets.MSetPositive PositiveSet min_elt def
R31243:31249 Coq.MSets.MSetPositive PositiveSet min_elt def
R31243:31249 Coq.MSets.MSetPositive PositiveSet min_elt def
R31357:31363 Coq.MSets.MSetPositive PositiveSet min_elt def
R31357:31363 Coq.MSets.MSetPositive PositiveSet min_elt def
R31445:31451 Coq.MSets.MSetPositive PositiveSet min_elt def
R31445:31451 Coq.MSets.MSetPositive PositiveSet min_elt def
prf 31531:31543 PositiveSet min_elt_spec2
R31578:31581 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31588:31591 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31592:31593 Coq.Init.Logic <> ::type_scope:'~'_x not
R31594:31597 Coq.MSets.MSetPositive PositiveSet lt def
R31601:31601 Coq.MSets.MSetPositive <> x var
R31599:31599 Coq.MSets.MSetPositive <> y var
R31582:31583 Coq.MSets.MSetPositive PositiveSet In def
R31587:31587 Coq.MSets.MSetPositive <> s var
R31585:31585 Coq.MSets.MSetPositive <> y var
R31569:31571 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31560:31566 Coq.MSets.MSetPositive PositiveSet min_elt def
R31568:31568 Coq.MSets.MSetPositive <> s var
R31572:31575 Coq.Init.Datatypes <> Some constr
R31577:31577 Coq.MSets.MSetPositive <> x var
R31624:31625 Coq.MSets.MSetPositive PositiveSet In def
R31729:31735 Coq.MSets.MSetPositive PositiveSet min_elt def
R31729:31735 Coq.MSets.MSetPositive PositiveSet min_elt def
R31918:31930 Coq.MSets.MSetPositive PositiveSet min_elt_spec3 thm
R31918:31930 Coq.MSets.MSetPositive PositiveSet min_elt_spec3 thm
R32084:32090 Coq.MSets.MSetPositive PositiveSet min_elt def
R32084:32090 Coq.MSets.MSetPositive PositiveSet min_elt def
prf 32339:32351 PositiveSet max_elt_spec1
R32384:32387 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32388:32389 Coq.MSets.MSetPositive PositiveSet In def
R32393:32393 Coq.MSets.MSetPositive <> s var
R32391:32391 Coq.MSets.MSetPositive <> x var
R32375:32377 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32366:32372 Coq.MSets.MSetPositive PositiveSet max_elt def
R32374:32374 Coq.MSets.MSetPositive <> s var
R32378:32381 Coq.Init.Datatypes <> Some constr
R32383:32383 Coq.MSets.MSetPositive <> x var
R32415:32416 Coq.MSets.MSetPositive PositiveSet In def
R32515:32521 Coq.MSets.MSetPositive PositiveSet max_elt def
R32515:32521 Coq.MSets.MSetPositive PositiveSet max_elt def
R32671:32677 Coq.MSets.MSetPositive PositiveSet max_elt def
R32671:32677 Coq.MSets.MSetPositive PositiveSet max_elt def
prf 32790:32802 PositiveSet max_elt_spec3
R32831:32834 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32835:32839 Coq.MSets.MSetPositive PositiveSet Empty def
R32841:32841 Coq.MSets.MSetPositive <> s var
R32824:32826 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32815:32821 Coq.MSets.MSetPositive PositiveSet max_elt def
R32823:32823 Coq.MSets.MSetPositive <> s var
R32827:32830 Coq.Init.Datatypes <> None constr
R32864:32868 Coq.MSets.MSetPositive PositiveSet Empty def
R32871:32872 Coq.MSets.MSetPositive PositiveSet In def
R32943:32952 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R32943:32952 Coq.MSets.MSetPositive PositiveSet empty_spec thm
R33029:33035 Coq.MSets.MSetPositive PositiveSet max_elt def
R33029:33035 Coq.MSets.MSetPositive PositiveSet max_elt def
R33133:33139 Coq.MSets.MSetPositive PositiveSet max_elt def
R33133:33139 Coq.MSets.MSetPositive PositiveSet max_elt def
R33169:33175 Coq.MSets.MSetPositive PositiveSet max_elt def
R33169:33175 Coq.MSets.MSetPositive PositiveSet max_elt def
R33267:33273 Coq.MSets.MSetPositive PositiveSet max_elt def
R33267:33273 Coq.MSets.MSetPositive PositiveSet max_elt def
prf 33353:33365 PositiveSet max_elt_spec2
R33400:33403 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33410:33413 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33414:33415 Coq.Init.Logic <> ::type_scope:'~'_x not
R33416:33419 Coq.MSets.MSetPositive PositiveSet lt def
R33423:33423 Coq.MSets.MSetPositive <> y var
R33421:33421 Coq.MSets.MSetPositive <> x var
R33404:33405 Coq.MSets.MSetPositive PositiveSet In def
R33409:33409 Coq.MSets.MSetPositive <> s var
R33407:33407 Coq.MSets.MSetPositive <> y var
R33391:33393 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33382:33388 Coq.MSets.MSetPositive PositiveSet max_elt def
R33390:33390 Coq.MSets.MSetPositive <> s var
R33394:33397 Coq.Init.Datatypes <> Some constr
R33399:33399 Coq.MSets.MSetPositive <> x var
R33446:33447 Coq.MSets.MSetPositive PositiveSet In def
R33551:33557 Coq.MSets.MSetPositive PositiveSet max_elt def
R33551:33557 Coq.MSets.MSetPositive PositiveSet max_elt def
R33740:33752 Coq.MSets.MSetPositive PositiveSet max_elt_spec3 thm
R33740:33752 Coq.MSets.MSetPositive PositiveSet max_elt_spec3 thm
R33906:33912 Coq.MSets.MSetPositive PositiveSet max_elt def
R33906:33912 Coq.MSets.MSetPositive PositiveSet max_elt def
R34119:34129 Coq.MSets.MSetPositive PositiveSet <> mod

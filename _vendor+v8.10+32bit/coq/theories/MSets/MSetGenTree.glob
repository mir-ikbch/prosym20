DIGEST 98b626e61df1765d5f1df55b0055eeca
FCoq.MSets.MSetGenTree
R1442:1447 Coq.funind.FunInd <> <> lib
R1449:1454 Coq.Structures.Orders <> <> lib
R1456:1466 Coq.Structures.OrdersFacts <> <> lib
R1468:1480 Coq.MSets.MSetInterface <> <> lib
R1482:1489 Coq.Arith.PeanoNat <> <> lib
modtype 1681:1687 <> InfoTyp
ax 1701:1701 InfoTyp t
R1714:1720 Coq.MSets.MSetGenTree InfoTyp <> modtype
R1778:1788 Coq.Structures.Orders OrderedType <> mod
R1796:1802 Coq.MSets.MSetGenTree InfoTyp <> mod
modtype 1771:1773 <> Ops
def 1818:1820 Ops elt
R1825:1827 Coq.MSets.MSetGenTree X t defax
R1847:1849 Coq.MSets.MSetGenTree Ops elt def
ind 1870:1873 Ops tree
constr 1888:1891 Ops Leaf
constr 1902:1905 Ops Node
R1895:1898 Coq.MSets.MSetGenTree <> tree ind
R1915:1918 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1923:1926 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1930:1933 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1938:1941 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1942:1945 Coq.MSets.MSetGenTree <> tree ind
R1934:1937 Coq.MSets.MSetGenTree <> tree ind
R1927:1929 Coq.MSets.MSetGenTree X t defax
R1919:1922 Coq.MSets.MSetGenTree <> tree ind
R1909:1914 Coq.MSets.MSetGenTree Info t defax
def 2004:2008 Ops empty
R2013:2016 Coq.MSets.MSetGenTree Ops Leaf constr
def 2031:2038 Ops is_empty
R2052:2052 Coq.MSets.MSetGenTree <> t var
R2062:2065 Coq.MSets.MSetGenTree Ops Leaf constr
R2070:2073 Coq.Init.Datatypes <> true constr
R2083:2087 Coq.Init.Datatypes <> false constr
def 2267:2269 Ops mem
R2285:2285 Coq.MSets.MSetGenTree <> t var
R2295:2298 Coq.MSets.MSetGenTree Ops Leaf constr
R2303:2307 Coq.Init.Datatypes <> false constr
R2312:2315 Coq.MSets.MSetGenTree Ops Node constr
R2337:2345 Coq.MSets.MSetGenTree X compare defax
R2347:2347 Coq.MSets.MSetGenTree <> x var
R2363:2364 Coq.Init.Datatypes <> Lt constr
R2369:2371 Coq.MSets.MSetGenTree <> mem def
R2373:2373 Coq.MSets.MSetGenTree <> x var
R2384:2385 Coq.Init.Datatypes <> Eq constr
R2390:2393 Coq.Init.Datatypes <> true constr
R2402:2403 Coq.Init.Datatypes <> Gt constr
R2408:2410 Coq.MSets.MSetGenTree <> mem def
R2412:2412 Coq.MSets.MSetGenTree <> x var
def 2487:2493 Ops min_elt
R2500:2503 Coq.MSets.MSetGenTree Ops tree ind
R2508:2513 Coq.Init.Datatypes <> option ind
R2515:2517 Coq.MSets.MSetGenTree Ops elt def
R2529:2529 Coq.MSets.MSetGenTree <> t var
R2539:2542 Coq.MSets.MSetGenTree Ops Leaf constr
R2547:2550 Coq.Init.Datatypes <> None constr
R2555:2558 Coq.MSets.MSetGenTree Ops Node constr
R2562:2565 Coq.MSets.MSetGenTree Ops Leaf constr
R2574:2577 Coq.Init.Datatypes <> Some constr
R2584:2587 Coq.MSets.MSetGenTree Ops Node constr
R2600:2606 Coq.MSets.MSetGenTree <> min_elt def
def 2626:2632 Ops max_elt
R2639:2642 Coq.MSets.MSetGenTree Ops tree ind
R2647:2652 Coq.Init.Datatypes <> option ind
R2654:2656 Coq.MSets.MSetGenTree Ops elt def
R2669:2669 Coq.MSets.MSetGenTree <> t var
R2680:2683 Coq.MSets.MSetGenTree Ops Leaf constr
R2688:2691 Coq.Init.Datatypes <> None constr
R2697:2700 Coq.MSets.MSetGenTree Ops Node constr
R2708:2711 Coq.MSets.MSetGenTree Ops Leaf constr
R2716:2719 Coq.Init.Datatypes <> Some constr
R2727:2730 Coq.MSets.MSetGenTree Ops Node constr
R2743:2749 Coq.MSets.MSetGenTree <> max_elt def
def 2772:2777 Ops choose
R2782:2788 Coq.MSets.MSetGenTree Ops min_elt def
def 2834:2837 Ops fold
R2856:2859 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2861:2864 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2865:2865 Coq.MSets.MSetGenTree <> A var
R2860:2860 Coq.MSets.MSetGenTree <> A var
R2853:2855 Coq.MSets.MSetGenTree Ops elt def
R2872:2875 Coq.MSets.MSetGenTree Ops tree ind
R2885:2885 Coq.MSets.MSetGenTree <> A var
R2890:2890 Coq.MSets.MSetGenTree <> A var
R2903:2903 Coq.MSets.MSetGenTree <> t var
R2914:2917 Coq.MSets.MSetGenTree Ops Leaf constr
R2922:2925 Coq.MSets.MSetGenTree <> base var
R2931:2934 Coq.MSets.MSetGenTree Ops Node constr
R2947:2950 Coq.MSets.MSetGenTree <> fold def
R2957:2957 Coq.MSets.MSetGenTree <> f var
R2962:2965 Coq.MSets.MSetGenTree <> fold def
R2971:2974 Coq.MSets.MSetGenTree <> base var
R2967:2967 Coq.MSets.MSetGenTree <> f var
R2952:2952 Coq.MSets.MSetGenTree <> f var
def 2994:3005 Ops elements_aux
R3024:3024 Coq.MSets.MSetGenTree <> s var
R3036:3039 Coq.MSets.MSetGenTree Ops Leaf constr
R3044:3046 Coq.MSets.MSetGenTree <> acc var
R3053:3056 Coq.MSets.MSetGenTree Ops Node constr
R3069:3080 Coq.MSets.MSetGenTree <> elements_aux def
R3084:3087 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3088:3099 Coq.MSets.MSetGenTree <> elements_aux def
R3101:3103 Coq.MSets.MSetGenTree <> acc var
def 3129:3136 Ops elements
R3141:3152 Coq.MSets.MSetGenTree Ops elements_aux def
R3154:3156 Coq.Init.Datatypes <> nil constr
def 3169:3184 Ops rev_elements_aux
R3203:3203 Coq.MSets.MSetGenTree <> s var
R3215:3218 Coq.MSets.MSetGenTree Ops Leaf constr
R3223:3225 Coq.MSets.MSetGenTree <> acc var
R3232:3235 Coq.MSets.MSetGenTree Ops Node constr
R3248:3263 Coq.MSets.MSetGenTree <> rev_elements_aux def
R3267:3270 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3271:3286 Coq.MSets.MSetGenTree <> rev_elements_aux def
R3288:3290 Coq.MSets.MSetGenTree <> acc var
def 3316:3327 Ops rev_elements
R3332:3347 Coq.MSets.MSetGenTree Ops rev_elements_aux def
R3349:3351 Coq.Init.Datatypes <> nil constr
def 3364:3371 Ops cardinal
R3378:3381 Coq.MSets.MSetGenTree Ops tree ind
R3386:3388 Coq.Init.Datatypes <> nat ind
R3401:3401 Coq.MSets.MSetGenTree <> s var
R3413:3416 Coq.MSets.MSetGenTree Ops Leaf constr
R3428:3431 Coq.MSets.MSetGenTree Ops Node constr
R3444:3444 Coq.Init.Datatypes <> S constr
R3457:3459 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R3447:3454 Coq.MSets.MSetGenTree <> cardinal def
R3460:3467 Coq.MSets.MSetGenTree <> cardinal def
def 3489:3496 Ops maxdepth
R3510:3510 Coq.MSets.MSetGenTree <> s var
R3520:3523 Coq.MSets.MSetGenTree Ops Leaf constr
R3533:3536 Coq.MSets.MSetGenTree Ops Node constr
R3549:3549 Coq.Init.Datatypes <> S constr
R3552:3554 Coq.Init.Peano <> max syndef
R3570:3577 Coq.MSets.MSetGenTree <> maxdepth def
R3557:3564 Coq.MSets.MSetGenTree <> maxdepth def
def 3599:3606 Ops mindepth
R3620:3620 Coq.MSets.MSetGenTree <> s var
R3630:3633 Coq.MSets.MSetGenTree Ops Leaf constr
R3643:3646 Coq.MSets.MSetGenTree Ops Node constr
R3659:3659 Coq.Init.Datatypes <> S constr
R3662:3664 Coq.Init.Peano <> min syndef
R3680:3687 Coq.MSets.MSetGenTree <> mindepth def
R3667:3674 Coq.MSets.MSetGenTree <> mindepth def
def 3845:3851 Ops for_all
R3859:3860 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3861:3864 Coq.Init.Datatypes <> bool ind
R3856:3858 Coq.MSets.MSetGenTree Ops elt def
R3878:3878 Coq.MSets.MSetGenTree <> s var
R3889:3892 Coq.MSets.MSetGenTree Ops Leaf constr
R3897:3900 Coq.Init.Datatypes <> true constr
R3906:3909 Coq.MSets.MSetGenTree Ops Node constr
R3941:3945 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R3946:3952 Coq.MSets.MSetGenTree <> for_all def
R3954:3954 Coq.MSets.MSetGenTree <> f var
R3925:3929 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R3930:3936 Coq.MSets.MSetGenTree <> for_all def
R3938:3938 Coq.MSets.MSetGenTree <> f var
R3922:3922 Coq.MSets.MSetGenTree <> f var
def 3973:3979 Ops exists_
R3987:3988 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3989:3992 Coq.Init.Datatypes <> bool ind
R3984:3986 Coq.MSets.MSetGenTree Ops elt def
R4006:4006 Coq.MSets.MSetGenTree <> s var
R4017:4020 Coq.MSets.MSetGenTree Ops Leaf constr
R4025:4029 Coq.Init.Datatypes <> false constr
R4035:4038 Coq.MSets.MSetGenTree Ops Node constr
R4070:4074 Coq.Bool.Bool <> ::lazy_bool_scope:x_'|||'_x not
R4075:4081 Coq.MSets.MSetGenTree <> exists_ def
R4083:4083 Coq.MSets.MSetGenTree <> f var
R4054:4058 Coq.Bool.Bool <> ::lazy_bool_scope:x_'|||'_x not
R4059:4065 Coq.MSets.MSetGenTree <> exists_ def
R4067:4067 Coq.MSets.MSetGenTree <> f var
R4051:4051 Coq.MSets.MSetGenTree <> f var
ind 4668:4678 Ops enumeration
constr 4686:4688 Ops End
constr 4707:4710 Ops More
R4692:4702 Coq.MSets.MSetGenTree <> enumeration ind
R4717:4720 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4725:4728 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4740:4743 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4744:4754 Coq.MSets.MSetGenTree <> enumeration ind
R4729:4739 Coq.MSets.MSetGenTree <> enumeration ind
R4721:4724 Coq.MSets.MSetGenTree Ops tree ind
R4714:4716 Coq.MSets.MSetGenTree Ops elt def
def 4853:4856 Ops cons
R4864:4874 Coq.MSets.MSetGenTree Ops enumeration ind
R4886:4886 Coq.MSets.MSetGenTree <> s var
R4897:4900 Coq.MSets.MSetGenTree Ops Leaf constr
R4905:4905 Coq.MSets.MSetGenTree <> e var
R4911:4914 Coq.MSets.MSetGenTree Ops Node constr
R4927:4930 Coq.MSets.MSetGenTree <> cons def
R4935:4938 Coq.MSets.MSetGenTree Ops More constr
R4944:4944 Coq.MSets.MSetGenTree <> e var
def 5008:5019 Ops compare_more
R5041:5042 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5043:5052 Coq.Init.Datatypes <> comparison ind
R5030:5040 Coq.MSets.MSetGenTree Ops enumeration ind
R5068:5069 Coq.MSets.MSetGenTree <> e2 var
R5079:5081 Coq.MSets.MSetGenTree Ops End constr
R5086:5087 Coq.Init.Datatypes <> Gt constr
R5092:5095 Coq.MSets.MSetGenTree Ops More constr
R5120:5128 Coq.MSets.MSetGenTree X compare defax
R5130:5131 Coq.MSets.MSetGenTree <> x1 var
R5149:5150 Coq.Init.Datatypes <> Eq constr
R5155:5158 Coq.MSets.MSetGenTree <> cont var
R5161:5164 Coq.MSets.MSetGenTree Ops cons def
R5169:5170 Coq.MSets.MSetGenTree <> e2 var
R5181:5182 Coq.Init.Datatypes <> Lt constr
R5187:5188 Coq.Init.Datatypes <> Lt constr
R5198:5199 Coq.Init.Datatypes <> Gt constr
R5204:5205 Coq.Init.Datatypes <> Gt constr
def 5297:5308 Ops compare_cont
R5330:5331 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5332:5341 Coq.Init.Datatypes <> comparison ind
R5319:5329 Coq.MSets.MSetGenTree Ops enumeration ind
R5357:5358 Coq.MSets.MSetGenTree <> s1 var
R5369:5372 Coq.MSets.MSetGenTree Ops Leaf constr
R5377:5380 Coq.MSets.MSetGenTree <> cont var
R5382:5383 Coq.MSets.MSetGenTree <> e2 var
R5389:5392 Coq.MSets.MSetGenTree Ops Node constr
R5413:5424 Coq.MSets.MSetGenTree <> compare_cont def
R5470:5471 Coq.MSets.MSetGenTree <> e2 var
R5430:5441 Coq.MSets.MSetGenTree Ops compare_more def
R5447:5458 Coq.MSets.MSetGenTree <> compare_cont def
R5463:5466 Coq.MSets.MSetGenTree <> cont var
def 5521:5531 Ops compare_end
R5546:5547 Coq.MSets.MSetGenTree <> e2 var
R5554:5556 Coq.MSets.MSetGenTree Ops End constr
R5561:5562 Coq.Init.Datatypes <> Eq constr
R5571:5572 Coq.Init.Datatypes <> Lt constr
def 5623:5629 Ops compare
R5640:5651 Coq.MSets.MSetGenTree Ops compare_cont def
R5669:5672 Coq.MSets.MSetGenTree Ops cons def
R5677:5679 Coq.MSets.MSetGenTree Ops End constr
R5674:5675 Coq.MSets.MSetGenTree <> s2 var
R5656:5666 Coq.MSets.MSetGenTree Ops compare_end def
R5653:5654 Coq.MSets.MSetGenTree <> s1 var
def 5695:5699 Ops equal
R5717:5723 Coq.MSets.MSetGenTree Ops compare def
R5728:5729 Coq.MSets.MSetGenTree <> s2 var
R5725:5726 Coq.MSets.MSetGenTree <> s1 var
R5736:5737 Coq.Init.Datatypes <> Eq constr
R5742:5745 Coq.Init.Datatypes <> true constr
R5754:5758 Coq.Init.Datatypes <> false constr
def 6287:6293 Ops subsetl
R6312:6315 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6316:6319 Coq.Init.Datatypes <> bool ind
R6308:6311 Coq.MSets.MSetGenTree Ops tree ind
R6330:6333 Coq.Init.Datatypes <> bool ind
R6345:6346 Coq.MSets.MSetGenTree <> s2 var
R6357:6360 Coq.MSets.MSetGenTree Ops Leaf constr
R6365:6369 Coq.Init.Datatypes <> false constr
R6375:6378 Coq.MSets.MSetGenTree Ops Node constr
R6405:6413 Coq.MSets.MSetGenTree X compare defax
R6415:6416 Coq.MSets.MSetGenTree <> x1 var
R6434:6435 Coq.Init.Datatypes <> Eq constr
R6440:6448 Coq.MSets.MSetGenTree <> subset_l1 var
R6461:6462 Coq.Init.Datatypes <> Lt constr
R6467:6473 Coq.MSets.MSetGenTree <> subsetl def
R6485:6486 Coq.MSets.MSetGenTree <> x1 var
R6475:6483 Coq.MSets.MSetGenTree <> subset_l1 var
R6499:6500 Coq.Init.Datatypes <> Gt constr
R6514:6518 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R6519:6527 Coq.MSets.MSetGenTree <> subset_l1 var
R6529:6530 Coq.MSets.MSetGenTree <> s2 var
R6505:6507 Coq.MSets.MSetGenTree Ops mem def
R6509:6510 Coq.MSets.MSetGenTree <> x1 var
def 6557:6563 Ops subsetr
R6582:6585 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6586:6589 Coq.Init.Datatypes <> bool ind
R6578:6581 Coq.MSets.MSetGenTree Ops tree ind
R6600:6603 Coq.Init.Datatypes <> bool ind
R6615:6616 Coq.MSets.MSetGenTree <> s2 var
R6627:6630 Coq.MSets.MSetGenTree Ops Leaf constr
R6635:6639 Coq.Init.Datatypes <> false constr
R6645:6648 Coq.MSets.MSetGenTree Ops Node constr
R6675:6683 Coq.MSets.MSetGenTree X compare defax
R6685:6686 Coq.MSets.MSetGenTree <> x1 var
R6704:6705 Coq.Init.Datatypes <> Eq constr
R6710:6718 Coq.MSets.MSetGenTree <> subset_r1 var
R6731:6732 Coq.Init.Datatypes <> Lt constr
R6746:6750 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R6751:6759 Coq.MSets.MSetGenTree <> subset_r1 var
R6761:6762 Coq.MSets.MSetGenTree <> s2 var
R6737:6739 Coq.MSets.MSetGenTree Ops mem def
R6741:6742 Coq.MSets.MSetGenTree <> x1 var
R6772:6773 Coq.Init.Datatypes <> Gt constr
R6778:6784 Coq.MSets.MSetGenTree <> subsetr def
R6796:6797 Coq.MSets.MSetGenTree <> x1 var
R6786:6794 Coq.MSets.MSetGenTree <> subset_r1 var
def 6827:6832 Ops subset
R6842:6845 Coq.Init.Datatypes <> bool ind
R6860:6861 Coq.MSets.MSetGenTree <> s2 var
R6856:6857 Coq.MSets.MSetGenTree <> s1 var
R6872:6875 Coq.MSets.MSetGenTree Ops Leaf constr
R6883:6886 Coq.Init.Datatypes <> true constr
R6892:6895 Coq.MSets.MSetGenTree Ops Node constr
R6906:6909 Coq.MSets.MSetGenTree Ops Leaf constr
R6914:6918 Coq.Init.Datatypes <> false constr
R6924:6927 Coq.MSets.MSetGenTree Ops Node constr
R6941:6944 Coq.MSets.MSetGenTree Ops Node constr
R6971:6979 Coq.MSets.MSetGenTree X compare defax
R7000:7001 Coq.Init.Datatypes <> Eq constr
R7018:7022 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R7023:7028 Coq.MSets.MSetGenTree <> subset def
R7006:7011 Coq.MSets.MSetGenTree <> subset def
R7044:7045 Coq.Init.Datatypes <> Lt constr
R7075:7079 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R7080:7085 Coq.MSets.MSetGenTree <> subset def
R7090:7091 Coq.MSets.MSetGenTree <> s2 var
R7050:7056 Coq.MSets.MSetGenTree Ops subsetl def
R7059:7064 Coq.MSets.MSetGenTree <> subset def
R7101:7102 Coq.Init.Datatypes <> Gt constr
R7132:7136 Coq.Bool.Bool <> ::lazy_bool_scope:x_'&&&'_x not
R7137:7142 Coq.MSets.MSetGenTree <> subset def
R7147:7148 Coq.MSets.MSetGenTree <> s2 var
R7107:7113 Coq.MSets.MSetGenTree Ops subsetr def
R7116:7121 Coq.MSets.MSetGenTree <> subset def
R7170:7172 Coq.MSets.MSetGenTree Ops <> modtype
R7262:7272 Coq.Structures.Orders OrderedType <> mod
R7280:7286 Coq.MSets.MSetGenTree InfoTyp <> mod
R7298:7300 Coq.MSets.MSetGenTree Ops <> mod
R7302:7302 Coq.MSets.MSetGenTree X <> modtype
R7304:7307 Coq.MSets.MSetGenTree Info <> modtype
modtype 7253:7257 <> Props
ind 7354:7356 Props InT
constr 7390:7395 Props IsRoot
constr 7452:7457 Props InLeft
constr 7513:7519 Props InRight
R7363:7365 Coq.MSets.MSetGenTree M elt def
R7374:7377 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7370:7373 Coq.MSets.MSetGenTree M tree ind
R7363:7365 Coq.MSets.MSetGenTree M elt def
R7374:7377 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7370:7373 Coq.MSets.MSetGenTree M tree ind
R7423:7426 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7427:7429 Coq.MSets.MSetGenTree <> InT ind
R7434:7437 Coq.MSets.MSetGenTree M Node constr
R7445:7445 Coq.MSets.MSetGenTree <> r var
R7443:7443 Coq.MSets.MSetGenTree <> y var
R7441:7441 Coq.MSets.MSetGenTree <> l var
R7439:7439 Coq.MSets.MSetGenTree <> c var
R7431:7431 Coq.MSets.MSetGenTree <> x var
R7415:7418 Coq.MSets.MSetGenTree X eq defax
R7422:7422 Coq.MSets.MSetGenTree <> y var
R7420:7420 Coq.MSets.MSetGenTree <> x var
R7484:7487 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7488:7490 Coq.MSets.MSetGenTree <> InT ind
R7495:7498 Coq.MSets.MSetGenTree M Node constr
R7506:7506 Coq.MSets.MSetGenTree <> r var
R7504:7504 Coq.MSets.MSetGenTree <> y var
R7502:7502 Coq.MSets.MSetGenTree <> l var
R7500:7500 Coq.MSets.MSetGenTree <> c var
R7492:7492 Coq.MSets.MSetGenTree <> x var
R7477:7479 Coq.MSets.MSetGenTree <> InT ind
R7483:7483 Coq.MSets.MSetGenTree <> l var
R7481:7481 Coq.MSets.MSetGenTree <> x var
R7546:7549 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7550:7552 Coq.MSets.MSetGenTree <> InT ind
R7557:7560 Coq.MSets.MSetGenTree M Node constr
R7568:7568 Coq.MSets.MSetGenTree <> r var
R7566:7566 Coq.MSets.MSetGenTree <> y var
R7564:7564 Coq.MSets.MSetGenTree <> l var
R7562:7562 Coq.MSets.MSetGenTree <> c var
R7554:7554 Coq.MSets.MSetGenTree <> x var
R7539:7541 Coq.MSets.MSetGenTree <> InT ind
R7545:7545 Coq.MSets.MSetGenTree <> r var
R7543:7543 Coq.MSets.MSetGenTree <> x var
def 7584:7585 Props In
R7590:7592 Coq.MSets.MSetGenTree Props InT ind
def 7633:7637 Props Equal
R7658:7660 Coq.MSets.MSetGenTree M elt def
R7670:7674 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R7663:7665 Coq.MSets.MSetGenTree Props InT ind
R7669:7669 Coq.MSets.MSetGenTree <> s var
R7667:7667 Coq.MSets.MSetGenTree <> a var
R7675:7677 Coq.MSets.MSetGenTree Props InT ind
R7681:7682 Coq.MSets.MSetGenTree <> s' var
R7679:7679 Coq.MSets.MSetGenTree <> a var
def 7696:7701 Props Subset
R7722:7724 Coq.MSets.MSetGenTree M elt def
R7734:7737 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7738:7740 Coq.MSets.MSetGenTree Props InT ind
R7744:7745 Coq.MSets.MSetGenTree <> s' var
R7742:7742 Coq.MSets.MSetGenTree <> a var
R7727:7729 Coq.MSets.MSetGenTree Props InT ind
R7733:7733 Coq.MSets.MSetGenTree <> s var
R7731:7731 Coq.MSets.MSetGenTree <> a var
def 7759:7763 Props Empty
R7781:7783 Coq.MSets.MSetGenTree M elt def
R7786:7787 Coq.Init.Logic <> ::type_scope:'~'_x not
R7788:7790 Coq.MSets.MSetGenTree Props InT ind
R7794:7794 Coq.MSets.MSetGenTree <> s var
R7792:7792 Coq.MSets.MSetGenTree <> a var
def 7808:7814 Props For_all
R7824:7827 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7821:7823 Coq.MSets.MSetGenTree M elt def
R7856:7859 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7860:7860 Coq.MSets.MSetGenTree <> P var
R7862:7862 Coq.MSets.MSetGenTree <> x var
R7849:7851 Coq.MSets.MSetGenTree Props InT ind
R7855:7855 Coq.MSets.MSetGenTree <> s var
R7853:7853 Coq.MSets.MSetGenTree <> x var
def 7876:7881 Props Exists
R7891:7894 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7888:7890 Coq.MSets.MSetGenTree M elt def
R7906:7912 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R7914:7915 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R7923:7926 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7916:7918 Coq.MSets.MSetGenTree Props InT ind
R7922:7922 Coq.MSets.MSetGenTree <> s var
R7920:7920 Coq.MSets.MSetGenTree <> x var
R7927:7927 Coq.MSets.MSetGenTree <> P var
R7929:7929 Coq.MSets.MSetGenTree <> x var
def 8072:8078 Props lt_tree
R8104:8107 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8108:8111 Coq.MSets.MSetGenTree X lt defax
R8115:8115 Coq.MSets.MSetGenTree <> x var
R8113:8113 Coq.MSets.MSetGenTree <> y var
R8097:8099 Coq.MSets.MSetGenTree Props InT ind
R8103:8103 Coq.MSets.MSetGenTree <> s var
R8101:8101 Coq.MSets.MSetGenTree <> y var
def 8129:8135 Props gt_tree
R8161:8164 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8165:8168 Coq.MSets.MSetGenTree X lt defax
R8172:8172 Coq.MSets.MSetGenTree <> y var
R8170:8170 Coq.MSets.MSetGenTree <> x var
R8154:8156 Coq.MSets.MSetGenTree Props InT ind
R8160:8160 Coq.MSets.MSetGenTree <> s var
R8158:8158 Coq.MSets.MSetGenTree <> y var
ind 8232:8234 Props bst
constr 8258:8263 Props BSLeaf
constr 8280:8285 Props BSNode
R8242:8245 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8238:8241 Coq.MSets.MSetGenTree M tree ind
R8242:8245 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8238:8241 Coq.MSets.MSetGenTree M tree ind
R8267:8269 Coq.MSets.MSetGenTree <> bst ind
R8271:8274 Coq.MSets.MSetGenTree M Leaf constr
R8310:8313 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8319:8327 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8339:8342 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8354:8357 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8358:8360 Coq.MSets.MSetGenTree <> bst ind
R8363:8366 Coq.MSets.MSetGenTree M Node constr
R8374:8374 Coq.MSets.MSetGenTree <> r var
R8372:8372 Coq.MSets.MSetGenTree <> x var
R8370:8370 Coq.MSets.MSetGenTree <> l var
R8368:8368 Coq.MSets.MSetGenTree <> c var
R8343:8349 Coq.MSets.MSetGenTree Props gt_tree def
R8353:8353 Coq.MSets.MSetGenTree <> r var
R8351:8351 Coq.MSets.MSetGenTree <> x var
R8328:8334 Coq.MSets.MSetGenTree Props lt_tree def
R8338:8338 Coq.MSets.MSetGenTree <> l var
R8336:8336 Coq.MSets.MSetGenTree <> x var
R8314:8316 Coq.MSets.MSetGenTree <> bst ind
R8318:8318 Coq.MSets.MSetGenTree <> r var
R8305:8307 Coq.MSets.MSetGenTree <> bst ind
R8309:8309 Coq.MSets.MSetGenTree <> l var
def 8465:8468 Props IsOk
R8473:8475 Coq.MSets.MSetGenTree Props bst ind
ind 8485:8486 Props Ok
constr 8507:8508 Props ok
rec 8485:8486 Props Ok
proj 8507:8508 Props ok
R8491:8494 Coq.MSets.MSetGenTree M tree ind
R8512:8514 Coq.MSets.MSetGenTree Props bst ind
R8516:8516 Coq.MSets.MSetGenTree <> s var
inst 8529:8534 Props bst_Ok
R8544:8546 Coq.MSets.MSetGenTree Props bst ind
R8548:8548 Coq.MSets.MSetGenTree <> s var
R8553:8554 Coq.MSets.MSetGenTree Props Ok class
R8556:8556 Coq.MSets.MSetGenTree <> s var
R8563:8564 Coq.MSets.MSetGenTree Props ok def
def 8585:8592 Props ltb_tree
R8608:8608 Coq.MSets.MSetGenTree <> s var
R8619:8622 Coq.MSets.MSetGenTree M Leaf constr
R8627:8630 Coq.Init.Datatypes <> true constr
R8636:8639 Coq.MSets.MSetGenTree M Node constr
R8663:8671 Coq.MSets.MSetGenTree X compare defax
R8673:8673 Coq.MSets.MSetGenTree <> x var
R8690:8691 Coq.Init.Datatypes <> Gt constr
R8708:8711 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R8696:8703 Coq.MSets.MSetGenTree <> ltb_tree def
R8705:8705 Coq.MSets.MSetGenTree <> x var
R8712:8719 Coq.MSets.MSetGenTree <> ltb_tree def
R8721:8721 Coq.MSets.MSetGenTree <> x var
R8738:8742 Coq.Init.Datatypes <> false constr
def 8769:8776 Props gtb_tree
R8792:8792 Coq.MSets.MSetGenTree <> s var
R8803:8806 Coq.MSets.MSetGenTree M Leaf constr
R8811:8814 Coq.Init.Datatypes <> true constr
R8820:8823 Coq.MSets.MSetGenTree M Node constr
R8847:8855 Coq.MSets.MSetGenTree X compare defax
R8857:8857 Coq.MSets.MSetGenTree <> x var
R8874:8875 Coq.Init.Datatypes <> Lt constr
R8892:8895 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R8880:8887 Coq.MSets.MSetGenTree <> gtb_tree def
R8889:8889 Coq.MSets.MSetGenTree <> x var
R8896:8903 Coq.MSets.MSetGenTree <> gtb_tree def
R8905:8905 Coq.MSets.MSetGenTree <> x var
R8922:8926 Coq.Init.Datatypes <> false constr
def 8953:8956 Props isok
R8970:8970 Coq.MSets.MSetGenTree <> s var
R8981:8984 Coq.MSets.MSetGenTree M Leaf constr
R8989:8992 Coq.Init.Datatypes <> true constr
R8998:9001 Coq.MSets.MSetGenTree M Node constr
R9047:9050 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R9031:9034 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R9021:9024 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R9015:9018 Coq.MSets.MSetGenTree <> isok def
R9025:9028 Coq.MSets.MSetGenTree <> isok def
R9035:9042 Coq.MSets.MSetGenTree Props ltb_tree def
R9051:9058 Coq.MSets.MSetGenTree Props gtb_tree def
R9135:9150 Coq.Structures.OrdersFacts OrderedTypeFacts <> modtype
R9152:9152 Coq.MSets.MSetGenTree X <> modtype
mod 9129:9130 <> Props.MX
def 9207:9214 Props tree_ind
R9233:9236 Coq.MSets.MSetGenTree M tree ind
def 9256:9262 Props bst_ind
R9281:9283 Coq.MSets.MSetGenTree Props bst ind
R9419:9420 Coq.MSets.MSetGenTree Props In def
R9422:9428 Coq.MSets.MSetGenTree Props lt_tree def
R9430:9436 Coq.MSets.MSetGenTree Props gt_tree def
R9470:9472 Coq.MSets.MSetGenTree <> InT ind
R9474:9476 Coq.MSets.MSetGenTree <> bst ind
R9504:9505 Coq.MSets.MSetGenTree Props Ok class
R9655:9656 Coq.MSets.MSetGenTree Props Ok class
R9659:9662 Coq.MSets.MSetGenTree M Node constr
R9655:9656 Coq.MSets.MSetGenTree Props Ok class
R9659:9662 Coq.MSets.MSetGenTree M Node constr
R9712:9713 Coq.MSets.MSetGenTree Props Ok class
R9715:9718 Coq.MSets.MSetGenTree M Leaf constr
R9712:9713 Coq.MSets.MSetGenTree Props Ok class
R9715:9718 Coq.MSets.MSetGenTree M Leaf constr
R9749:9751 Coq.MSets.MSetGenTree Props bst ind
R9749:9751 Coq.MSets.MSetGenTree Props bst ind
R9772:9773 Coq.MSets.MSetGenTree Props Ok class
R9950:9953 Coq.MSets.MSetGenTree M Leaf constr
R9950:9953 Coq.MSets.MSetGenTree M Leaf constr
R9969:9972 Coq.MSets.MSetGenTree M Node constr
R9969:9972 Coq.MSets.MSetGenTree M Node constr
R10458:10464 Coq.MSets.MSetGenTree Props lt_tree def
R10458:10464 Coq.MSets.MSetGenTree Props lt_tree def
R10475:10477 Coq.MSets.MSetGenTree Props InT ind
R10475:10477 Coq.MSets.MSetGenTree Props InT ind
R10533:10539 Coq.MSets.MSetGenTree Props gt_tree def
R10533:10539 Coq.MSets.MSetGenTree Props gt_tree def
R10550:10552 Coq.MSets.MSetGenTree Props InT ind
R10550:10552 Coq.MSets.MSetGenTree Props InT ind
prf 10687:10698 Props ltb_tree_iff
R10725:10729 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R10714:10720 Coq.MSets.MSetGenTree Props lt_tree def
R10724:10724 Coq.MSets.MSetGenTree <> s var
R10722:10722 Coq.MSets.MSetGenTree <> x var
R10742:10744 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10730:10737 Coq.MSets.MSetGenTree Props ltb_tree def
R10741:10741 Coq.MSets.MSetGenTree <> s var
R10739:10739 Coq.MSets.MSetGenTree <> x var
R10745:10748 Coq.Init.Datatypes <> true constr
R10809:10815 Coq.MSets.MSetGenTree Props lt_tree def
R10893:10896 Coq.MSets.MSetGenTree X lt defax
R10893:10896 Coq.MSets.MSetGenTree X lt defax
R10961:10964 Coq.MSets.MSetGenTree X lt defax
R10961:10964 Coq.MSets.MSetGenTree X lt defax
R10997:11009 Coq.Bool.Bool <> andb_true_iff thm
R10997:11009 Coq.Bool.Bool <> andb_true_iff thm
R10997:11009 Coq.Bool.Bool <> andb_true_iff thm
R10997:11009 Coq.Bool.Bool <> andb_true_iff thm
R11035:11041 Coq.MSets.MSetGenTree Props lt_tree def
prf 11077:11088 Props gtb_tree_iff
R11115:11119 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11104:11110 Coq.MSets.MSetGenTree Props gt_tree def
R11114:11114 Coq.MSets.MSetGenTree <> s var
R11112:11112 Coq.MSets.MSetGenTree <> x var
R11132:11134 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11120:11127 Coq.MSets.MSetGenTree Props gtb_tree def
R11131:11131 Coq.MSets.MSetGenTree <> s var
R11129:11129 Coq.MSets.MSetGenTree <> x var
R11135:11138 Coq.Init.Datatypes <> true constr
R11199:11205 Coq.MSets.MSetGenTree Props gt_tree def
R11283:11286 Coq.MSets.MSetGenTree X lt defax
R11283:11286 Coq.MSets.MSetGenTree X lt defax
R11319:11331 Coq.Bool.Bool <> andb_true_iff thm
R11319:11331 Coq.Bool.Bool <> andb_true_iff thm
R11319:11331 Coq.Bool.Bool <> andb_true_iff thm
R11319:11331 Coq.Bool.Bool <> andb_true_iff thm
R11357:11363 Coq.MSets.MSetGenTree Props gt_tree def
R11429:11432 Coq.MSets.MSetGenTree X lt defax
R11429:11432 Coq.MSets.MSetGenTree X lt defax
prf 11467:11474 Props isok_iff
R11492:11496 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11488:11489 Coq.MSets.MSetGenTree Props Ok class
R11491:11491 Coq.MSets.MSetGenTree <> s var
R11503:11505 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11497:11500 Coq.MSets.MSetGenTree Props isok def
R11502:11502 Coq.MSets.MSetGenTree <> s var
R11506:11509 Coq.Init.Datatypes <> true constr
R11587:11599 Coq.Bool.Bool <> andb_true_iff thm
R11620:11631 Coq.MSets.MSetGenTree Props ltb_tree_iff thm
R11637:11648 Coq.MSets.MSetGenTree Props gtb_tree_iff thm
R11587:11599 Coq.Bool.Bool <> andb_true_iff thm
R11587:11599 Coq.Bool.Bool <> andb_true_iff thm
R11587:11599 Coq.Bool.Bool <> andb_true_iff thm
R11587:11599 Coq.Bool.Bool <> andb_true_iff thm
R11587:11599 Coq.Bool.Bool <> andb_true_iff thm
R11620:11631 Coq.MSets.MSetGenTree Props ltb_tree_iff thm
R11620:11631 Coq.MSets.MSetGenTree Props ltb_tree_iff thm
R11637:11648 Coq.MSets.MSetGenTree Props gtb_tree_iff thm
R11637:11648 Coq.MSets.MSetGenTree Props gtb_tree_iff thm
inst 11681:11687 Props isok_Ok
R11706:11709 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11710:11711 Coq.MSets.MSetGenTree Props Ok class
R11713:11713 Coq.MSets.MSetGenTree <> s var
R11699:11701 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11693:11696 Coq.MSets.MSetGenTree Props isok def
R11698:11698 Coq.MSets.MSetGenTree <> s var
R11702:11705 Coq.Init.Datatypes <> true constr
R11745:11752 Coq.MSets.MSetGenTree Props isok_iff thm
R11745:11752 Coq.MSets.MSetGenTree Props isok_iff thm
prf 11809:11812 Props In_1
R11839:11842 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11850:11853 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11854:11856 Coq.MSets.MSetGenTree Props InT ind
R11860:11860 Coq.MSets.MSetGenTree <> s var
R11858:11858 Coq.MSets.MSetGenTree <> y var
R11843:11845 Coq.MSets.MSetGenTree Props InT ind
R11849:11849 Coq.MSets.MSetGenTree <> s var
R11847:11847 Coq.MSets.MSetGenTree <> x var
R11831:11834 Coq.MSets.MSetGenTree X eq defax
R11838:11838 Coq.MSets.MSetGenTree <> y var
R11836:11836 Coq.MSets.MSetGenTree <> x var
inst 11961:11969 Props In_compat
R11973:11978 Coq.Classes.Morphisms <> Proper class
R11998:12000 Coq.MSets.MSetGenTree Props InT ind
R11985:11987 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R11981:11984 Coq.MSets.MSetGenTree X eq defax
R11990:11992 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R11988:11989 Coq.Init.Logic <> eq ind
R11993:11995 Coq.Init.Logic <> iff def
R12016:12036 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R12016:12036 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R12085:12088 Coq.MSets.MSetGenTree Props In_1 thm
R12085:12088 Coq.MSets.MSetGenTree Props In_1 thm
prf 12116:12126 Props In_node_iff
R12171:12175 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12151:12153 Coq.MSets.MSetGenTree Props InT ind
R12158:12161 Coq.MSets.MSetGenTree M Node constr
R12169:12169 Coq.MSets.MSetGenTree <> r var
R12167:12167 Coq.MSets.MSetGenTree <> x var
R12165:12165 Coq.MSets.MSetGenTree <> l var
R12163:12163 Coq.MSets.MSetGenTree <> c var
R12155:12155 Coq.MSets.MSetGenTree <> y var
R12183:12186 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R12176:12178 Coq.MSets.MSetGenTree Props InT ind
R12182:12182 Coq.MSets.MSetGenTree <> l var
R12180:12180 Coq.MSets.MSetGenTree <> y var
R12195:12198 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R12187:12190 Coq.MSets.MSetGenTree X eq defax
R12194:12194 Coq.MSets.MSetGenTree <> x var
R12192:12192 Coq.MSets.MSetGenTree <> y var
R12199:12201 Coq.MSets.MSetGenTree Props InT ind
R12205:12205 Coq.MSets.MSetGenTree <> r var
R12203:12203 Coq.MSets.MSetGenTree <> y var
prf 12242:12252 Props In_leaf_iff
R12276:12280 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12266:12268 Coq.MSets.MSetGenTree Props InT ind
R12272:12275 Coq.MSets.MSetGenTree M Leaf constr
R12270:12270 Coq.MSets.MSetGenTree <> x var
R12281:12285 Coq.Init.Logic <> False ind
prf 12368:12374 Props lt_leaf
R12389:12391 Coq.MSets.MSetGenTree M elt def
R12394:12400 Coq.MSets.MSetGenTree Props lt_tree def
R12404:12407 Coq.MSets.MSetGenTree M Leaf constr
R12402:12402 Coq.MSets.MSetGenTree <> x var
prf 12448:12454 Props gt_leaf
R12469:12471 Coq.MSets.MSetGenTree M elt def
R12474:12480 Coq.MSets.MSetGenTree Props gt_tree def
R12484:12487 Coq.MSets.MSetGenTree M Leaf constr
R12482:12482 Coq.MSets.MSetGenTree <> x var
prf 12528:12539 Props lt_tree_node
R12558:12560 Coq.MSets.MSetGenTree M elt def
R12570:12573 Coq.MSets.MSetGenTree M tree ind
R12581:12586 Coq.MSets.MSetGenTree Info t defax
R12602:12605 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12617:12620 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12629:12632 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12633:12639 Coq.MSets.MSetGenTree Props lt_tree def
R12644:12647 Coq.MSets.MSetGenTree M Node constr
R12655:12655 Coq.MSets.MSetGenTree <> r var
R12653:12653 Coq.MSets.MSetGenTree <> y var
R12651:12651 Coq.MSets.MSetGenTree <> l var
R12649:12649 Coq.MSets.MSetGenTree <> i var
R12641:12641 Coq.MSets.MSetGenTree <> x var
R12621:12624 Coq.MSets.MSetGenTree X lt defax
R12628:12628 Coq.MSets.MSetGenTree <> x var
R12626:12626 Coq.MSets.MSetGenTree <> y var
R12606:12612 Coq.MSets.MSetGenTree Props lt_tree def
R12616:12616 Coq.MSets.MSetGenTree <> r var
R12614:12614 Coq.MSets.MSetGenTree <> x var
R12591:12597 Coq.MSets.MSetGenTree Props lt_tree def
R12601:12601 Coq.MSets.MSetGenTree <> l var
R12599:12599 Coq.MSets.MSetGenTree <> x var
R12674:12680 Coq.MSets.MSetGenTree Props lt_tree def
prf 12716:12727 Props gt_tree_node
R12746:12748 Coq.MSets.MSetGenTree M elt def
R12758:12761 Coq.MSets.MSetGenTree M tree ind
R12769:12774 Coq.MSets.MSetGenTree Info t defax
R12790:12793 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12805:12808 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12817:12820 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12821:12827 Coq.MSets.MSetGenTree Props gt_tree def
R12832:12835 Coq.MSets.MSetGenTree M Node constr
R12843:12843 Coq.MSets.MSetGenTree <> r var
R12841:12841 Coq.MSets.MSetGenTree <> y var
R12839:12839 Coq.MSets.MSetGenTree <> l var
R12837:12837 Coq.MSets.MSetGenTree <> i var
R12829:12829 Coq.MSets.MSetGenTree <> x var
R12809:12812 Coq.MSets.MSetGenTree X lt defax
R12816:12816 Coq.MSets.MSetGenTree <> y var
R12814:12814 Coq.MSets.MSetGenTree <> x var
R12794:12800 Coq.MSets.MSetGenTree Props gt_tree def
R12804:12804 Coq.MSets.MSetGenTree <> r var
R12802:12802 Coq.MSets.MSetGenTree <> x var
R12779:12785 Coq.MSets.MSetGenTree Props gt_tree def
R12789:12789 Coq.MSets.MSetGenTree <> l var
R12787:12787 Coq.MSets.MSetGenTree <> x var
R12862:12868 Coq.MSets.MSetGenTree Props gt_tree def
prf 12974:12987 Props lt_tree_not_in
R13004:13006 Coq.MSets.MSetGenTree M elt def
R13014:13017 Coq.MSets.MSetGenTree M tree ind
R13032:13035 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13036:13037 Coq.Init.Logic <> ::type_scope:'~'_x not
R13038:13040 Coq.MSets.MSetGenTree Props InT ind
R13044:13044 Coq.MSets.MSetGenTree <> t var
R13042:13042 Coq.MSets.MSetGenTree <> x var
R13021:13027 Coq.MSets.MSetGenTree Props lt_tree def
R13031:13031 Coq.MSets.MSetGenTree <> t var
R13029:13029 Coq.MSets.MSetGenTree <> x var
prf 13089:13101 Props lt_tree_trans
R13126:13129 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13151:13154 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13155:13161 Coq.MSets.MSetGenTree Props lt_tree def
R13165:13165 Coq.MSets.MSetGenTree <> t var
R13163:13163 Coq.MSets.MSetGenTree <> y var
R13140:13146 Coq.MSets.MSetGenTree Props lt_tree def
R13150:13150 Coq.MSets.MSetGenTree <> t var
R13148:13148 Coq.MSets.MSetGenTree <> x var
R13118:13121 Coq.MSets.MSetGenTree X lt defax
R13125:13125 Coq.MSets.MSetGenTree <> y var
R13123:13123 Coq.MSets.MSetGenTree <> x var
prf 13195:13208 Props gt_tree_not_in
R13225:13227 Coq.MSets.MSetGenTree M elt def
R13235:13238 Coq.MSets.MSetGenTree M tree ind
R13253:13256 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13257:13258 Coq.Init.Logic <> ::type_scope:'~'_x not
R13259:13261 Coq.MSets.MSetGenTree Props InT ind
R13265:13265 Coq.MSets.MSetGenTree <> t var
R13263:13263 Coq.MSets.MSetGenTree <> x var
R13242:13248 Coq.MSets.MSetGenTree Props gt_tree def
R13252:13252 Coq.MSets.MSetGenTree <> t var
R13250:13250 Coq.MSets.MSetGenTree <> x var
prf 13310:13322 Props gt_tree_trans
R13347:13350 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13372:13375 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13376:13382 Coq.MSets.MSetGenTree Props gt_tree def
R13386:13386 Coq.MSets.MSetGenTree <> t var
R13384:13384 Coq.MSets.MSetGenTree <> y var
R13361:13367 Coq.MSets.MSetGenTree Props gt_tree def
R13371:13371 Coq.MSets.MSetGenTree <> t var
R13369:13369 Coq.MSets.MSetGenTree <> x var
R13339:13342 Coq.MSets.MSetGenTree X lt defax
R13346:13346 Coq.MSets.MSetGenTree <> x var
R13344:13344 Coq.MSets.MSetGenTree <> y var
inst 13419:13432 Props lt_tree_compat
R13436:13441 Coq.Classes.Morphisms <> Proper class
R13471:13477 Coq.MSets.MSetGenTree Props lt_tree def
R13448:13452 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R13444:13447 Coq.MSets.MSetGenTree X eq defax
R13461:13465 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R13453:13460 Coq.Init.Logic <> eq ind
R13466:13468 Coq.Init.Logic <> iff def
R13494:13514 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R13494:13514 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
inst 13605:13618 Props gt_tree_compat
R13622:13627 Coq.Classes.Morphisms <> Proper class
R13657:13663 Coq.MSets.MSetGenTree Props gt_tree def
R13634:13638 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R13630:13633 Coq.MSets.MSetGenTree X eq defax
R13647:13651 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R13639:13646 Coq.Init.Logic <> eq ind
R13652:13654 Coq.Init.Logic <> iff def
R13680:13700 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R13680:13700 Coq.Classes.Morphisms <> proper_sym_impl_iff_2 thm
R14048:14050 Coq.MSets.MSetGenTree Props bst ind
R14048:14050 Coq.MSets.MSetGenTree Props bst ind
R14057:14058 Coq.MSets.MSetGenTree Props Ok class
R14091:14092 Coq.MSets.MSetGenTree Props Ok class
R14095:14098 Coq.MSets.MSetGenTree M Node constr
R14091:14092 Coq.MSets.MSetGenTree Props Ok class
R14095:14098 Coq.MSets.MSetGenTree M Node constr
R14145:14151 Coq.MSets.MSetGenTree Props lt_tree def
R14156:14159 Coq.MSets.MSetGenTree M Node constr
R14145:14151 Coq.MSets.MSetGenTree Props lt_tree def
R14156:14159 Coq.MSets.MSetGenTree M Node constr
R14204:14210 Coq.MSets.MSetGenTree Props gt_tree def
R14215:14218 Coq.MSets.MSetGenTree M Node constr
R14204:14210 Coq.MSets.MSetGenTree Props gt_tree def
R14215:14218 Coq.MSets.MSetGenTree M Node constr
R14238:14249 Coq.MSets.MSetGenTree Props gt_tree_node thm
R14179:14190 Coq.MSets.MSetGenTree Props lt_tree_node thm
prf 14330:14339 Props empty_spec
R14343:14347 Coq.MSets.MSetGenTree Props Empty def
R14349:14353 Coq.MSets.MSetGenTree M empty def
inst 14404:14411 Props empty_ok
R14415:14416 Coq.MSets.MSetGenTree Props Ok class
R14418:14422 Coq.MSets.MSetGenTree M empty def
prf 14477:14489 Props is_empty_spec
R14520:14524 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14513:14515 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14503:14510 Coq.MSets.MSetGenTree M is_empty def
R14512:14512 Coq.MSets.MSetGenTree <> s var
R14516:14519 Coq.Init.Datatypes <> true constr
R14525:14529 Coq.MSets.MSetGenTree Props Empty def
R14531:14531 Coq.MSets.MSetGenTree <> s var
prf 14711:14718 Props mem_spec
R14735:14736 Coq.MSets.MSetGenTree Props Ok class
R14738:14738 Coq.MSets.MSetGenTree <> s var
R14756:14760 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14749:14751 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14742:14744 Coq.MSets.MSetGenTree M mem def
R14748:14748 Coq.MSets.MSetGenTree <> s var
R14746:14746 Coq.MSets.MSetGenTree <> x var
R14752:14755 Coq.Init.Datatypes <> true constr
R14761:14763 Coq.MSets.MSetGenTree Props InT ind
R14767:14767 Coq.MSets.MSetGenTree <> s var
R14765:14765 Coq.MSets.MSetGenTree <> x var
prf 15031:15043 Props min_elt_spec1
R15069:15072 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15073:15075 Coq.MSets.MSetGenTree Props InT ind
R15079:15079 Coq.MSets.MSetGenTree <> s var
R15077:15077 Coq.MSets.MSetGenTree <> x var
R15060:15062 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15051:15057 Coq.MSets.MSetGenTree M min_elt def
R15059:15059 Coq.MSets.MSetGenTree <> s var
R15063:15066 Coq.Init.Datatypes <> Some constr
R15068:15068 Coq.MSets.MSetGenTree <> x var
R15112:15118 Coq.MSets.MSetGenTree M min_elt def
R15112:15118 Coq.MSets.MSetGenTree M min_elt def
prf 15161:15173 Props min_elt_spec2
R15183:15184 Coq.MSets.MSetGenTree Props Ok class
R15186:15186 Coq.MSets.MSetGenTree <> s var
R15210:15213 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15221:15224 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15225:15226 Coq.Init.Logic <> ::type_scope:'~'_x not
R15227:15230 Coq.MSets.MSetGenTree X lt defax
R15234:15234 Coq.MSets.MSetGenTree <> x var
R15232:15232 Coq.MSets.MSetGenTree <> y var
R15214:15216 Coq.MSets.MSetGenTree Props InT ind
R15220:15220 Coq.MSets.MSetGenTree <> s var
R15218:15218 Coq.MSets.MSetGenTree <> y var
R15201:15203 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15192:15198 Coq.MSets.MSetGenTree M min_elt def
R15200:15200 Coq.MSets.MSetGenTree <> s var
R15204:15207 Coq.Init.Datatypes <> Some constr
R15209:15209 Coq.MSets.MSetGenTree <> x var
R15278:15284 Coq.MSets.MSetGenTree M min_elt def
R15278:15284 Coq.MSets.MSetGenTree M min_elt def
R15480:15483 Coq.MSets.MSetGenTree X lt defax
R15511:15523 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
R15480:15483 Coq.MSets.MSetGenTree X lt defax
R15511:15523 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
R15558:15561 Coq.MSets.MSetGenTree X lt defax
R15558:15561 Coq.MSets.MSetGenTree X lt defax
R15592:15592 Coq.Init.Logic <> ::type_scope:'~'_x not
R15593:15596 Coq.MSets.MSetGenTree X lt defax
R15592:15592 Coq.Init.Logic <> ::type_scope:'~'_x not
R15593:15596 Coq.MSets.MSetGenTree X lt defax
prf 15637:15649 Props min_elt_spec3
R15671:15674 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15675:15679 Coq.MSets.MSetGenTree Props Empty def
R15681:15681 Coq.MSets.MSetGenTree <> s var
R15664:15666 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15655:15661 Coq.MSets.MSetGenTree M min_elt def
R15663:15663 Coq.MSets.MSetGenTree <> s var
R15667:15670 Coq.Init.Datatypes <> None constr
R15714:15720 Coq.MSets.MSetGenTree M min_elt def
R15714:15720 Coq.MSets.MSetGenTree M min_elt def
prf 15817:15829 Props max_elt_spec1
R15855:15858 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15859:15861 Coq.MSets.MSetGenTree Props InT ind
R15865:15865 Coq.MSets.MSetGenTree <> s var
R15863:15863 Coq.MSets.MSetGenTree <> x var
R15846:15848 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15837:15843 Coq.MSets.MSetGenTree M max_elt def
R15845:15845 Coq.MSets.MSetGenTree <> s var
R15849:15852 Coq.Init.Datatypes <> Some constr
R15854:15854 Coq.MSets.MSetGenTree <> x var
R15898:15904 Coq.MSets.MSetGenTree M max_elt def
R15898:15904 Coq.MSets.MSetGenTree M max_elt def
prf 15947:15959 Props max_elt_spec2
R15969:15970 Coq.MSets.MSetGenTree Props Ok class
R15972:15972 Coq.MSets.MSetGenTree <> s var
R15996:15999 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16007:16010 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16011:16012 Coq.Init.Logic <> ::type_scope:'~'_x not
R16013:16016 Coq.MSets.MSetGenTree X lt defax
R16020:16020 Coq.MSets.MSetGenTree <> y var
R16018:16018 Coq.MSets.MSetGenTree <> x var
R16000:16002 Coq.MSets.MSetGenTree Props InT ind
R16006:16006 Coq.MSets.MSetGenTree <> s var
R16004:16004 Coq.MSets.MSetGenTree <> y var
R15987:15989 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15978:15984 Coq.MSets.MSetGenTree M max_elt def
R15986:15986 Coq.MSets.MSetGenTree <> s var
R15990:15993 Coq.Init.Datatypes <> Some constr
R15995:15995 Coq.MSets.MSetGenTree <> x var
R16064:16070 Coq.MSets.MSetGenTree M max_elt def
R16064:16070 Coq.MSets.MSetGenTree M max_elt def
R16266:16269 Coq.MSets.MSetGenTree X lt defax
R16297:16309 Coq.MSets.MSetGenTree Props max_elt_spec1 thm
R16266:16269 Coq.MSets.MSetGenTree X lt defax
R16297:16309 Coq.MSets.MSetGenTree Props max_elt_spec1 thm
R16344:16347 Coq.MSets.MSetGenTree X lt defax
R16344:16347 Coq.MSets.MSetGenTree X lt defax
R16378:16378 Coq.Init.Logic <> ::type_scope:'~'_x not
R16379:16382 Coq.MSets.MSetGenTree X lt defax
R16378:16378 Coq.Init.Logic <> ::type_scope:'~'_x not
R16379:16382 Coq.MSets.MSetGenTree X lt defax
prf 16423:16435 Props max_elt_spec3
R16457:16460 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16461:16465 Coq.MSets.MSetGenTree Props Empty def
R16467:16467 Coq.MSets.MSetGenTree <> s var
R16450:16452 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16441:16447 Coq.MSets.MSetGenTree M max_elt def
R16449:16449 Coq.MSets.MSetGenTree <> s var
R16453:16456 Coq.Init.Datatypes <> None constr
R16500:16506 Coq.MSets.MSetGenTree M max_elt def
R16500:16506 Coq.MSets.MSetGenTree M max_elt def
prf 16603:16614 Props choose_spec1
R16647:16650 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16651:16653 Coq.MSets.MSetGenTree Props InT ind
R16657:16657 Coq.MSets.MSetGenTree <> s var
R16655:16655 Coq.MSets.MSetGenTree <> x var
R16638:16640 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16630:16635 Coq.MSets.MSetGenTree M choose def
R16637:16637 Coq.MSets.MSetGenTree <> s var
R16641:16644 Coq.Init.Datatypes <> Some constr
R16646:16646 Coq.MSets.MSetGenTree <> x var
R16674:16686 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
R16674:16686 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
prf 16701:16712 Props choose_spec2
R16741:16744 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16745:16749 Coq.MSets.MSetGenTree Props Empty def
R16751:16751 Coq.MSets.MSetGenTree <> s var
R16734:16736 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16726:16731 Coq.MSets.MSetGenTree M choose def
R16733:16733 Coq.MSets.MSetGenTree <> s var
R16737:16740 Coq.Init.Datatypes <> None constr
R16768:16780 Coq.MSets.MSetGenTree Props min_elt_spec3 thm
R16768:16780 Coq.MSets.MSetGenTree Props min_elt_spec3 thm
prf 16795:16806 Props choose_spec3
R16829:16830 Coq.MSets.MSetGenTree Props Ok class
R16832:16832 Coq.MSets.MSetGenTree <> s var
R16835:16836 Coq.MSets.MSetGenTree Props Ok class
R16838:16839 Coq.MSets.MSetGenTree <> s' var
R16862:16865 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16885:16890 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16901:16904 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16905:16908 Coq.MSets.MSetGenTree X eq defax
R16912:16913 Coq.MSets.MSetGenTree <> x' var
R16910:16910 Coq.MSets.MSetGenTree <> x var
R16891:16895 Coq.MSets.MSetGenTree Props Equal def
R16899:16900 Coq.MSets.MSetGenTree <> s' var
R16897:16897 Coq.MSets.MSetGenTree <> s var
R16875:16877 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16866:16871 Coq.MSets.MSetGenTree M choose def
R16873:16874 Coq.MSets.MSetGenTree <> s' var
R16878:16881 Coq.Init.Datatypes <> Some constr
R16883:16884 Coq.MSets.MSetGenTree <> x' var
R16853:16855 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16845:16850 Coq.MSets.MSetGenTree M choose def
R16852:16852 Coq.MSets.MSetGenTree <> s var
R16856:16859 Coq.Init.Datatypes <> Some constr
R16861:16861 Coq.MSets.MSetGenTree <> x var
R16931:16936 Coq.MSets.MSetGenTree M choose def
R16939:16943 Coq.MSets.MSetGenTree Props Equal def
R16989:16989 Coq.Init.Logic <> ::type_scope:'~'_x not
R16990:16993 Coq.MSets.MSetGenTree X lt defax
R16989:16989 Coq.Init.Logic <> ::type_scope:'~'_x not
R16990:16993 Coq.MSets.MSetGenTree X lt defax
R17010:17022 Coq.MSets.MSetGenTree Props min_elt_spec2 thm
R17010:17022 Coq.MSets.MSetGenTree Props min_elt_spec2 thm
R17065:17077 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
R17065:17077 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
R17089:17089 Coq.Init.Logic <> ::type_scope:'~'_x not
R17090:17093 Coq.MSets.MSetGenTree X lt defax
R17089:17089 Coq.Init.Logic <> ::type_scope:'~'_x not
R17090:17093 Coq.MSets.MSetGenTree X lt defax
R17110:17122 Coq.MSets.MSetGenTree Props min_elt_spec2 thm
R17110:17122 Coq.MSets.MSetGenTree Props min_elt_spec2 thm
R17162:17174 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
R17162:17174 Coq.MSets.MSetGenTree Props min_elt_spec1 thm
prf 17240:17254 Props elements_spec1'
R17306:17310 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17275:17277 Coq.Lists.SetoidList <> InA ind
R17287:17298 Coq.MSets.MSetGenTree M elements_aux def
R17304:17304 Coq.MSets.MSetGenTree <> s var
R17300:17302 Coq.MSets.MSetGenTree <> acc var
R17284:17284 Coq.MSets.MSetGenTree <> x var
R17279:17282 Coq.MSets.MSetGenTree X eq defax
R17318:17321 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R17311:17313 Coq.MSets.MSetGenTree Props InT ind
R17317:17317 Coq.MSets.MSetGenTree <> s var
R17315:17315 Coq.MSets.MSetGenTree <> x var
R17322:17324 Coq.Lists.SetoidList <> InA ind
R17333:17335 Coq.MSets.MSetGenTree <> acc var
R17331:17331 Coq.MSets.MSetGenTree <> x var
R17326:17329 Coq.MSets.MSetGenTree X eq defax
prf 17535:17548 Props elements_spec1
R17587:17591 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17564:17566 Coq.Lists.SetoidList <> InA ind
R17576:17583 Coq.MSets.MSetGenTree M elements def
R17585:17585 Coq.MSets.MSetGenTree <> s var
R17573:17573 Coq.MSets.MSetGenTree <> x var
R17568:17571 Coq.MSets.MSetGenTree X eq defax
R17592:17594 Coq.MSets.MSetGenTree Props InT ind
R17598:17598 Coq.MSets.MSetGenTree <> s var
R17596:17596 Coq.MSets.MSetGenTree <> x var
R17629:17643 Coq.MSets.MSetGenTree Props elements_spec1' thm
R17647:17649 Coq.Init.Datatypes <> nil constr
R17629:17643 Coq.MSets.MSetGenTree Props elements_spec1' thm
R17647:17649 Coq.Init.Datatypes <> nil constr
prf 17699:17713 Props elements_spec2'
R17732:17733 Coq.MSets.MSetGenTree Props Ok class
R17735:17735 Coq.MSets.MSetGenTree <> s var
R17752:17756 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17757:17757 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17813:17818 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17819:17822 Coq.Sorting.Sorted <> sort syndef
R17830:17841 Coq.MSets.MSetGenTree M elements_aux def
R17847:17847 Coq.MSets.MSetGenTree <> s var
R17843:17845 Coq.MSets.MSetGenTree <> acc var
R17824:17827 Coq.MSets.MSetGenTree X lt defax
R17771:17773 Coq.MSets.MSetGenTree M elt def
R17790:17793 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17801:17804 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17805:17808 Coq.MSets.MSetGenTree X lt defax
R17812:17812 Coq.MSets.MSetGenTree <> x var
R17810:17810 Coq.MSets.MSetGenTree <> y var
R17794:17796 Coq.MSets.MSetGenTree Props InT ind
R17800:17800 Coq.MSets.MSetGenTree <> s var
R17798:17798 Coq.MSets.MSetGenTree <> y var
R17776:17778 Coq.Lists.SetoidList <> InA ind
R17787:17789 Coq.MSets.MSetGenTree <> acc var
R17785:17785 Coq.MSets.MSetGenTree <> x var
R17780:17783 Coq.MSets.MSetGenTree X eq defax
R17739:17742 Coq.Sorting.Sorted <> sort syndef
R17749:17751 Coq.MSets.MSetGenTree <> acc var
R17744:17747 Coq.MSets.MSetGenTree X lt defax
R17974:17981 Coq.Lists.SetoidList <> InA_InfA thm
R17974:17981 Coq.Lists.SetoidList <> InA_InfA thm
R18018:18032 Coq.MSets.MSetGenTree Props elements_spec1' thm
R18018:18032 Coq.MSets.MSetGenTree Props elements_spec1' thm
R18104:18118 Coq.MSets.MSetGenTree Props elements_spec1' thm
R18104:18118 Coq.MSets.MSetGenTree Props elements_spec1' thm
prf 18159:18172 Props elements_spec2
R18187:18188 Coq.MSets.MSetGenTree Props Ok class
R18190:18190 Coq.MSets.MSetGenTree <> s var
R18194:18197 Coq.Sorting.Sorted <> sort syndef
R18205:18212 Coq.MSets.MSetGenTree M elements def
R18214:18214 Coq.MSets.MSetGenTree <> s var
R18199:18202 Coq.MSets.MSetGenTree X lt defax
R18241:18248 Coq.MSets.MSetGenTree M elements def
R18257:18271 Coq.MSets.MSetGenTree Props elements_spec2' thm
R18257:18271 Coq.MSets.MSetGenTree Props elements_spec2' thm
prf 18357:18371 Props elements_spec2w
R18386:18387 Coq.MSets.MSetGenTree Props Ok class
R18389:18389 Coq.MSets.MSetGenTree <> s var
R18393:18398 Coq.Lists.SetoidList <> NoDupA ind
R18406:18413 Coq.MSets.MSetGenTree M elements def
R18415:18415 Coq.MSets.MSetGenTree <> s var
R18400:18403 Coq.MSets.MSetGenTree X eq defax
R18442:18453 Coq.Lists.SetoidList <> SortA_NoDupA thm
R18442:18453 Coq.Lists.SetoidList <> SortA_NoDupA thm
prf 18482:18502 Props elements_aux_cardinal
R18550:18552 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18532:18534 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R18522:18527 Coq.Init.Datatypes <> length def
R18529:18531 Coq.MSets.MSetGenTree <> acc var
R18535:18542 Coq.MSets.MSetGenTree M cardinal def
R18544:18544 Coq.MSets.MSetGenTree <> s var
R18553:18558 Coq.Init.Datatypes <> length def
R18561:18572 Coq.MSets.MSetGenTree M elements_aux def
R18578:18578 Coq.MSets.MSetGenTree <> s var
R18574:18576 Coq.MSets.MSetGenTree <> acc var
R18676:18687 Coq.Arith.PeanoNat Nat add_comm thm
R18690:18697 Coq.MSets.MSetGenTree M cardinal def
R18676:18687 Coq.Arith.PeanoNat Nat add_comm thm
R18690:18697 Coq.MSets.MSetGenTree M cardinal def
R18676:18687 Coq.Arith.PeanoNat Nat add_comm thm
R18690:18697 Coq.MSets.MSetGenTree M cardinal def
R18721:18734 Coq.Arith.PeanoNat Nat add_succ_r thm
R18737:18749 Coq.Arith.PeanoNat Nat add_assoc thm
R18721:18734 Coq.Arith.PeanoNat Nat add_succ_r thm
R18721:18734 Coq.Arith.PeanoNat Nat add_succ_r thm
R18737:18749 Coq.Arith.PeanoNat Nat add_assoc thm
R18737:18749 Coq.Arith.PeanoNat Nat add_assoc thm
prf 18764:18780 Props elements_cardinal
R18795:18798 Coq.MSets.MSetGenTree M tree ind
R18811:18813 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18801:18808 Coq.MSets.MSetGenTree M cardinal def
R18810:18810 Coq.MSets.MSetGenTree <> s var
R18814:18819 Coq.Init.Datatypes <> length def
R18822:18829 Coq.MSets.MSetGenTree M elements def
R18831:18831 Coq.MSets.MSetGenTree <> s var
R18859:18879 Coq.MSets.MSetGenTree Props elements_aux_cardinal thm
R18883:18885 Coq.Init.Datatypes <> nil constr
R18881:18881 Coq.MSets.MSetGenTree <> s var
R18859:18879 Coq.MSets.MSetGenTree Props elements_aux_cardinal thm
R18883:18885 Coq.Init.Datatypes <> nil constr
R18881:18881 Coq.MSets.MSetGenTree <> s var
def 18906:18918 Props cardinal_spec
R18923:18926 Coq.MSets.MSetGenTree M tree ind
R18932:18933 Coq.MSets.MSetGenTree Props Ok class
R18935:18935 Coq.MSets.MSetGenTree <> s var
R18941:18957 Coq.MSets.MSetGenTree Props elements_cardinal thm
R18959:18959 Coq.MSets.MSetGenTree <> s var
prf 18969:18980 Props elements_app
R19017:19019 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18999:19010 Coq.MSets.MSetGenTree M elements_aux def
R19016:19016 Coq.MSets.MSetGenTree <> s var
R19012:19014 Coq.MSets.MSetGenTree <> acc var
R19030:19033 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R19020:19027 Coq.MSets.MSetGenTree M elements def
R19029:19029 Coq.MSets.MSetGenTree <> s var
R19034:19036 Coq.MSets.MSetGenTree <> acc var
R19110:19117 Coq.MSets.MSetGenTree M elements def
R19151:19159 Coq.Lists.List <> app_nil_r thm
R19163:19169 Coq.Lists.List <> app_ass syndef
R19151:19159 Coq.Lists.List <> app_nil_r thm
R19151:19159 Coq.Lists.List <> app_nil_r thm
R19151:19159 Coq.Lists.List <> app_nil_r thm
R19151:19159 Coq.Lists.List <> app_nil_r thm
R19163:19169 Coq.Lists.List <> app_ass syndef
R19163:19169 Coq.Lists.List <> app_ass syndef
R19163:19169 Coq.Lists.List <> app_ass syndef
prf 19190:19202 Props elements_node
R19238:19240 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19215:19222 Coq.MSets.MSetGenTree M elements def
R19225:19228 Coq.MSets.MSetGenTree M Node constr
R19236:19236 Coq.MSets.MSetGenTree <> r var
R19234:19234 Coq.MSets.MSetGenTree <> x var
R19232:19232 Coq.MSets.MSetGenTree <> l var
R19230:19230 Coq.MSets.MSetGenTree <> c var
R19251:19254 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R19241:19248 Coq.MSets.MSetGenTree M elements def
R19250:19250 Coq.MSets.MSetGenTree <> l var
R19256:19259 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R19255:19255 Coq.MSets.MSetGenTree <> x var
R19260:19267 Coq.MSets.MSetGenTree M elements def
R19269:19269 Coq.MSets.MSetGenTree <> r var
R19287:19294 Coq.MSets.MSetGenTree M elements def
R19318:19329 Coq.MSets.MSetGenTree Props elements_app thm
R19333:19341 Coq.Lists.List <> app_nil_r thm
R19318:19329 Coq.MSets.MSetGenTree Props elements_app thm
R19318:19329 Coq.MSets.MSetGenTree Props elements_app thm
R19318:19329 Coq.MSets.MSetGenTree Props elements_app thm
R19318:19329 Coq.MSets.MSetGenTree Props elements_app thm
R19318:19329 Coq.MSets.MSetGenTree Props elements_app thm
R19333:19341 Coq.Lists.List <> app_nil_r thm
R19333:19341 Coq.Lists.List <> app_nil_r thm
R19333:19341 Coq.Lists.List <> app_nil_r thm
R19333:19341 Coq.Lists.List <> app_nil_r thm
prf 19356:19371 Props rev_elements_app
R19412:19414 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19390:19405 Coq.MSets.MSetGenTree M rev_elements_aux def
R19411:19411 Coq.MSets.MSetGenTree <> s var
R19407:19409 Coq.MSets.MSetGenTree <> acc var
R19429:19432 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R19415:19426 Coq.MSets.MSetGenTree M rev_elements def
R19428:19428 Coq.MSets.MSetGenTree <> s var
R19433:19435 Coq.MSets.MSetGenTree <> acc var
R19509:19520 Coq.MSets.MSetGenTree M rev_elements def
R19554:19562 Coq.Lists.List <> app_nil_r thm
R19566:19572 Coq.Lists.List <> app_ass syndef
R19554:19562 Coq.Lists.List <> app_nil_r thm
R19554:19562 Coq.Lists.List <> app_nil_r thm
R19554:19562 Coq.Lists.List <> app_nil_r thm
R19554:19562 Coq.Lists.List <> app_nil_r thm
R19566:19572 Coq.Lists.List <> app_ass syndef
R19566:19572 Coq.Lists.List <> app_ass syndef
R19566:19572 Coq.Lists.List <> app_ass syndef
prf 19593:19609 Props rev_elements_node
R19649:19651 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19622:19633 Coq.MSets.MSetGenTree M rev_elements def
R19636:19639 Coq.MSets.MSetGenTree M Node constr
R19647:19647 Coq.MSets.MSetGenTree <> r var
R19645:19645 Coq.MSets.MSetGenTree <> x var
R19643:19643 Coq.MSets.MSetGenTree <> l var
R19641:19641 Coq.MSets.MSetGenTree <> c var
R19666:19669 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R19652:19663 Coq.MSets.MSetGenTree M rev_elements def
R19665:19665 Coq.MSets.MSetGenTree <> r var
R19671:19674 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R19670:19670 Coq.MSets.MSetGenTree <> x var
R19675:19686 Coq.MSets.MSetGenTree M rev_elements def
R19688:19688 Coq.MSets.MSetGenTree <> l var
R19706:19717 Coq.MSets.MSetGenTree M rev_elements def
R19741:19756 Coq.MSets.MSetGenTree Props rev_elements_app thm
R19760:19768 Coq.Lists.List <> app_nil_r thm
R19741:19756 Coq.MSets.MSetGenTree Props rev_elements_app thm
R19741:19756 Coq.MSets.MSetGenTree Props rev_elements_app thm
R19741:19756 Coq.MSets.MSetGenTree Props rev_elements_app thm
R19741:19756 Coq.MSets.MSetGenTree Props rev_elements_app thm
R19741:19756 Coq.MSets.MSetGenTree Props rev_elements_app thm
R19760:19768 Coq.Lists.List <> app_nil_r thm
R19760:19768 Coq.Lists.List <> app_nil_r thm
R19760:19768 Coq.Lists.List <> app_nil_r thm
R19760:19768 Coq.Lists.List <> app_nil_r thm
prf 19783:19798 Props rev_elements_rev
R19818:19820 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19804:19815 Coq.MSets.MSetGenTree M rev_elements def
R19817:19817 Coq.MSets.MSetGenTree <> s var
R19821:19823 Coq.Lists.List <> rev def
R19826:19833 Coq.MSets.MSetGenTree M elements def
R19835:19835 Coq.MSets.MSetGenTree <> s var
R19900:19912 Coq.MSets.MSetGenTree Props elements_node thm
R19915:19931 Coq.MSets.MSetGenTree Props rev_elements_node thm
R19944:19956 Coq.Lists.List <> rev_app_distr thm
R19900:19912 Coq.MSets.MSetGenTree Props elements_node thm
R19900:19912 Coq.MSets.MSetGenTree Props elements_node thm
R19915:19931 Coq.MSets.MSetGenTree Props rev_elements_node thm
R19915:19931 Coq.MSets.MSetGenTree Props rev_elements_node thm
R19944:19956 Coq.Lists.List <> rev_app_distr thm
R19944:19956 Coq.Lists.List <> rev_app_distr thm
R19980:19986 Coq.Lists.List <> app_ass syndef
R19980:19986 Coq.Lists.List <> app_ass syndef
R19980:19986 Coq.Lists.List <> app_ass syndef
R19980:19986 Coq.Lists.List <> app_ass syndef
prf 20096:20109 Props sorted_app_inv
R20138:20142 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20155:20158 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R20143:20146 Coq.Sorting.Sorted <> sort syndef
R20153:20154 Coq.MSets.MSetGenTree <> l1 var
R20148:20151 Coq.MSets.MSetGenTree X lt defax
R20171:20175 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R20159:20162 Coq.Sorting.Sorted <> sort syndef
R20169:20170 Coq.MSets.MSetGenTree <> l2 var
R20164:20167 Coq.MSets.MSetGenTree X lt defax
R20204:20207 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20222:20225 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20226:20229 Coq.MSets.MSetGenTree X lt defax
R20234:20235 Coq.MSets.MSetGenTree <> x2 var
R20231:20232 Coq.MSets.MSetGenTree <> x1 var
R20208:20210 Coq.Lists.SetoidList <> InA ind
R20220:20221 Coq.MSets.MSetGenTree <> l2 var
R20217:20218 Coq.MSets.MSetGenTree <> x2 var
R20212:20215 Coq.MSets.MSetGenTree X eq defax
R20190:20192 Coq.Lists.SetoidList <> InA ind
R20202:20203 Coq.MSets.MSetGenTree <> l1 var
R20199:20200 Coq.MSets.MSetGenTree <> x1 var
R20194:20197 Coq.MSets.MSetGenTree X eq defax
R20120:20123 Coq.Sorting.Sorted <> sort syndef
R20133:20134 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R20131:20132 Coq.MSets.MSetGenTree <> l1 var
R20135:20136 Coq.MSets.MSetGenTree <> l2 var
R20125:20128 Coq.MSets.MSetGenTree X lt defax
R20330:20336 Coq.Lists.SetoidList <> InA_nil thm
R20330:20336 Coq.Lists.SetoidList <> InA_nil thm
R20330:20336 Coq.Lists.SetoidList <> InA_nil thm
R20587:20594 Coq.Lists.SetoidList <> InA_cons thm
R20587:20594 Coq.Lists.SetoidList <> InA_cons thm
R20587:20594 Coq.Lists.SetoidList <> InA_cons thm
R20675:20678 Coq.MSets.MSetGenTree X eq defax
R20686:20687 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R20649:20662 Coq.Lists.SetoidList <> SortA_InfA_InA thm
R20675:20678 Coq.MSets.MSetGenTree X eq defax
R20686:20687 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R20649:20662 Coq.Lists.SetoidList <> SortA_InfA_InA thm
R20717:20727 Coq.Lists.SetoidList <> InA_app_iff thm
R20717:20727 Coq.Lists.SetoidList <> InA_app_iff thm
R20717:20727 Coq.Lists.SetoidList <> InA_app_iff thm
prf 20764:20779 Props elements_sort_ok
R20807:20810 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20811:20812 Coq.MSets.MSetGenTree Props Ok class
R20814:20814 Coq.MSets.MSetGenTree <> s var
R20785:20788 Coq.Sorting.Sorted <> sort syndef
R20796:20803 Coq.MSets.MSetGenTree M elements def
R20805:20805 Coq.MSets.MSetGenTree <> s var
R20790:20793 Coq.MSets.MSetGenTree X lt defax
R20880:20892 Coq.MSets.MSetGenTree Props elements_node thm
R20880:20892 Coq.MSets.MSetGenTree Props elements_node thm
R20880:20892 Coq.MSets.MSetGenTree Props elements_node thm
R20918:20931 Coq.MSets.MSetGenTree Props sorted_app_inv thm
R20918:20931 Coq.MSets.MSetGenTree Props sorted_app_inv thm
R21049:21062 Coq.MSets.MSetGenTree Props elements_spec1 thm
R21049:21062 Coq.MSets.MSetGenTree Props elements_spec1 thm
R21049:21062 Coq.MSets.MSetGenTree Props elements_spec1 thm
R21080:21087 Coq.Lists.SetoidList <> InA_cons thm
R21080:21087 Coq.Lists.SetoidList <> InA_cons thm
R21080:21087 Coq.Lists.SetoidList <> InA_cons thm
R21155:21158 Coq.MSets.MSetGenTree X eq defax
R21164:21171 Coq.MSets.MSetGenTree M elements def
R21129:21142 Coq.Lists.SetoidList <> SortA_InfA_InA thm
R21155:21158 Coq.MSets.MSetGenTree X eq defax
R21164:21171 Coq.MSets.MSetGenTree M elements def
R21129:21142 Coq.Lists.SetoidList <> SortA_InfA_InA thm
R21203:21216 Coq.MSets.MSetGenTree Props elements_spec1 thm
R21203:21216 Coq.MSets.MSetGenTree Props elements_spec1 thm
R21203:21216 Coq.MSets.MSetGenTree Props elements_spec1 thm
prf 21265:21276 Props for_all_spec
R21304:21309 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21364:21364 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21328:21332 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R21321:21323 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21310:21316 Coq.MSets.MSetGenTree M for_all def
R21320:21320 Coq.MSets.MSetGenTree <> s var
R21318:21318 Coq.MSets.MSetGenTree <> f var
R21324:21327 Coq.Init.Datatypes <> true constr
R21333:21339 Coq.MSets.MSetGenTree Props For_all def
R21363:21363 Coq.MSets.MSetGenTree <> s var
R21354:21356 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21351:21351 Coq.MSets.MSetGenTree <> f var
R21353:21353 Coq.MSets.MSetGenTree <> x var
R21357:21360 Coq.Init.Datatypes <> true constr
R21284:21289 Coq.Classes.Morphisms <> Proper class
R21303:21303 Coq.MSets.MSetGenTree <> f var
R21296:21298 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R21292:21295 Coq.MSets.MSetGenTree X eq defax
R21299:21300 Coq.Init.Logic <> eq ind
R21393:21399 Coq.MSets.MSetGenTree Props For_all def
R21495:21507 Coq.Bool.Bool <> andb_lazy_alt thm
R21511:21523 Coq.Bool.Bool <> andb_true_iff thm
R21495:21507 Coq.Bool.Bool <> andb_lazy_alt thm
R21495:21507 Coq.Bool.Bool <> andb_lazy_alt thm
R21495:21507 Coq.Bool.Bool <> andb_lazy_alt thm
R21495:21507 Coq.Bool.Bool <> andb_lazy_alt thm
R21511:21523 Coq.Bool.Bool <> andb_true_iff thm
R21511:21523 Coq.Bool.Bool <> andb_true_iff thm
R21511:21523 Coq.Bool.Bool <> andb_true_iff thm
R21511:21523 Coq.Bool.Bool <> andb_true_iff thm
prf 21587:21597 Props exists_spec
R21625:21630 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21684:21684 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21649:21653 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R21642:21644 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21631:21637 Coq.MSets.MSetGenTree M exists_ def
R21641:21641 Coq.MSets.MSetGenTree <> s var
R21639:21639 Coq.MSets.MSetGenTree <> f var
R21645:21648 Coq.Init.Datatypes <> true constr
R21654:21659 Coq.MSets.MSetGenTree Props Exists def
R21683:21683 Coq.MSets.MSetGenTree <> s var
R21674:21676 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21671:21671 Coq.MSets.MSetGenTree <> f var
R21673:21673 Coq.MSets.MSetGenTree <> x var
R21677:21680 Coq.Init.Datatypes <> true constr
R21605:21610 Coq.Classes.Morphisms <> Proper class
R21624:21624 Coq.MSets.MSetGenTree <> f var
R21617:21619 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R21613:21616 Coq.MSets.MSetGenTree X eq defax
R21620:21621 Coq.Init.Logic <> eq ind
R21713:21718 Coq.MSets.MSetGenTree Props Exists def
R21842:21853 Coq.Bool.Bool <> orb_lazy_alt thm
R21857:21868 Coq.Bool.Bool <> orb_true_iff thm
R21842:21853 Coq.Bool.Bool <> orb_lazy_alt thm
R21842:21853 Coq.Bool.Bool <> orb_lazy_alt thm
R21842:21853 Coq.Bool.Bool <> orb_lazy_alt thm
R21842:21853 Coq.Bool.Bool <> orb_lazy_alt thm
R21857:21868 Coq.Bool.Bool <> orb_true_iff thm
R21857:21868 Coq.Bool.Bool <> orb_true_iff thm
R21857:21868 Coq.Bool.Bool <> orb_true_iff thm
R21857:21868 Coq.Bool.Bool <> orb_true_iff thm
prf 22116:22125 Props fold_spec'
R22139:22142 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22144:22147 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22148:22148 Coq.MSets.MSetGenTree <> A var
R22143:22143 Coq.MSets.MSetGenTree <> A var
R22136:22138 Coq.MSets.MSetGenTree M elt def
R22156:22159 Coq.MSets.MSetGenTree M tree ind
R22167:22167 Coq.MSets.MSetGenTree <> A var
R22177:22180 Coq.Init.Datatypes <> list ind
R22182:22184 Coq.MSets.MSetGenTree M elt def
R22231:22233 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22190:22198 Coq.Lists.List <> fold_left def
R22230:22230 Coq.MSets.MSetGenTree <> i var
R22210:22221 Coq.MSets.MSetGenTree M elements_aux def
R22227:22227 Coq.MSets.MSetGenTree <> s var
R22223:22225 Coq.MSets.MSetGenTree <> acc var
R22201:22204 Coq.Program.Basics <> flip def
R22206:22206 Coq.MSets.MSetGenTree <> f var
R22234:22242 Coq.Lists.List <> fold_left def
R22258:22261 Coq.MSets.MSetGenTree M fold def
R22267:22267 Coq.MSets.MSetGenTree <> i var
R22265:22265 Coq.MSets.MSetGenTree <> s var
R22263:22263 Coq.MSets.MSetGenTree <> f var
R22253:22255 Coq.MSets.MSetGenTree <> acc var
R22245:22248 Coq.Program.Basics <> flip def
R22250:22250 Coq.MSets.MSetGenTree <> f var
R22379:22382 Coq.Program.Basics <> flip def
prf 22414:22422 Props fold_spec
R22427:22430 Coq.MSets.MSetGenTree M tree ind
R22442:22442 Coq.MSets.MSetGenTree <> A var
R22453:22456 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22458:22461 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22462:22462 Coq.MSets.MSetGenTree <> A var
R22457:22457 Coq.MSets.MSetGenTree <> A var
R22450:22452 Coq.MSets.MSetGenTree M elt def
R22478:22480 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22468:22471 Coq.MSets.MSetGenTree M fold def
R22477:22477 Coq.MSets.MSetGenTree <> i var
R22475:22475 Coq.MSets.MSetGenTree <> s var
R22473:22473 Coq.MSets.MSetGenTree <> f var
R22481:22489 Coq.Lists.List <> fold_left def
R22513:22513 Coq.MSets.MSetGenTree <> i var
R22501:22508 Coq.MSets.MSetGenTree M elements def
R22510:22510 Coq.MSets.MSetGenTree <> s var
R22492:22495 Coq.Program.Basics <> flip def
R22497:22497 Coq.MSets.MSetGenTree <> f var
R22541:22548 Coq.MSets.MSetGenTree M elements def
R22617:22626 Coq.MSets.MSetGenTree Props fold_spec' thm
R22617:22626 Coq.MSets.MSetGenTree Props fold_spec' thm
R22617:22626 Coq.MSets.MSetGenTree Props fold_spec' thm
prf 22688:22699 Props subsetl_spec
R22735:22736 Coq.MSets.MSetGenTree Props Ok class
R22739:22742 Coq.MSets.MSetGenTree M Node constr
R22753:22756 Coq.MSets.MSetGenTree M Leaf constr
R22750:22751 Coq.MSets.MSetGenTree <> x1 var
R22747:22748 Coq.MSets.MSetGenTree <> l1 var
R22744:22745 Coq.MSets.MSetGenTree <> c1 var
R22760:22761 Coq.MSets.MSetGenTree Props Ok class
R22763:22764 Coq.MSets.MSetGenTree <> s2 var
R22769:22769 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22824:22830 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22896:22897 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22861:22865 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R22854:22856 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22831:22837 Coq.MSets.MSetGenTree M subsetl def
R22852:22853 Coq.MSets.MSetGenTree <> s2 var
R22849:22850 Coq.MSets.MSetGenTree <> x1 var
R22839:22847 Coq.MSets.MSetGenTree <> subset_l1 var
R22857:22860 Coq.Init.Datatypes <> true constr
R22866:22871 Coq.MSets.MSetGenTree Props Subset def
R22894:22895 Coq.MSets.MSetGenTree <> s2 var
R22874:22877 Coq.MSets.MSetGenTree M Node constr
R22888:22891 Coq.MSets.MSetGenTree M Leaf constr
R22885:22886 Coq.MSets.MSetGenTree <> x1 var
R22882:22883 Coq.MSets.MSetGenTree <> l1 var
R22879:22880 Coq.MSets.MSetGenTree <> c1 var
R22781:22782 Coq.MSets.MSetGenTree Props Ok class
R22784:22784 Coq.MSets.MSetGenTree <> s var
R22807:22811 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R22800:22802 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22789:22797 Coq.MSets.MSetGenTree <> subset_l1 var
R22799:22799 Coq.MSets.MSetGenTree <> s var
R22803:22806 Coq.Init.Datatypes <> true constr
R22812:22817 Coq.MSets.MSetGenTree Props Subset def
R22822:22822 Coq.MSets.MSetGenTree <> s var
R22819:22820 Coq.MSets.MSetGenTree <> l1 var
R22973:22978 Coq.MSets.MSetGenTree Props Subset def
R23023:23025 Coq.MSets.MSetGenTree Props InT ind
R23030:23033 Coq.MSets.MSetGenTree M Leaf constr
R23023:23025 Coq.MSets.MSetGenTree Props InT ind
R23030:23033 Coq.MSets.MSetGenTree M Leaf constr
R23180:23185 Coq.MSets.MSetGenTree Props Subset def
R23211:23214 Coq.MSets.MSetGenTree X eq defax
R23211:23214 Coq.MSets.MSetGenTree X eq defax
R23255:23257 Coq.MSets.MSetGenTree Props InT ind
R23262:23265 Coq.MSets.MSetGenTree M Node constr
R23255:23257 Coq.MSets.MSetGenTree Props InT ind
R23262:23265 Coq.MSets.MSetGenTree M Node constr
R23363:23368 Coq.MSets.MSetGenTree Props Subset def
R23394:23396 Coq.MSets.MSetGenTree Props InT ind
R23401:23404 Coq.MSets.MSetGenTree M Node constr
R23394:23396 Coq.MSets.MSetGenTree Props InT ind
R23401:23404 Coq.MSets.MSetGenTree M Node constr
R23459:23461 Coq.MSets.MSetGenTree Props InT ind
R23466:23469 Coq.MSets.MSetGenTree M Node constr
R23459:23461 Coq.MSets.MSetGenTree Props InT ind
R23466:23469 Coq.MSets.MSetGenTree M Node constr
R23527:23539 Coq.Bool.Bool <> andb_lazy_alt thm
R23542:23554 Coq.Bool.Bool <> andb_true_iff thm
R23527:23539 Coq.Bool.Bool <> andb_lazy_alt thm
R23527:23539 Coq.Bool.Bool <> andb_lazy_alt thm
R23542:23554 Coq.Bool.Bool <> andb_true_iff thm
R23542:23554 Coq.Bool.Bool <> andb_true_iff thm
R23597:23602 Coq.MSets.MSetGenTree Props Subset def
R23678:23685 Coq.MSets.MSetGenTree Props mem_spec thm
R23678:23685 Coq.MSets.MSetGenTree Props mem_spec thm
R23678:23685 Coq.MSets.MSetGenTree Props mem_spec thm
R23678:23685 Coq.MSets.MSetGenTree Props mem_spec thm
R23703:23710 Coq.MSets.MSetGenTree Props mem_spec thm
R23703:23710 Coq.MSets.MSetGenTree Props mem_spec thm
R23703:23710 Coq.MSets.MSetGenTree Props mem_spec thm
R23703:23710 Coq.MSets.MSetGenTree Props mem_spec thm
R23728:23730 Coq.MSets.MSetGenTree Props InT ind
R23736:23739 Coq.MSets.MSetGenTree M Node constr
R23728:23730 Coq.MSets.MSetGenTree Props InT ind
R23736:23739 Coq.MSets.MSetGenTree M Node constr
prf 23798:23809 Props subsetr_spec
R23868:23871 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23878:23882 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23883:23883 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23939:23945 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24011:24011 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23976:23980 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R23969:23971 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23946:23952 Coq.MSets.MSetGenTree M subsetr def
R23967:23968 Coq.MSets.MSetGenTree <> s2 var
R23964:23965 Coq.MSets.MSetGenTree <> x1 var
R23954:23962 Coq.MSets.MSetGenTree <> subset_r1 var
R23972:23975 Coq.Init.Datatypes <> true constr
R23981:23986 Coq.MSets.MSetGenTree Props Subset def
R24009:24010 Coq.MSets.MSetGenTree <> s2 var
R23989:23992 Coq.MSets.MSetGenTree M Node constr
R24005:24006 Coq.MSets.MSetGenTree <> r1 var
R24002:24003 Coq.MSets.MSetGenTree <> x1 var
R23997:24000 Coq.MSets.MSetGenTree M Leaf constr
R23994:23995 Coq.MSets.MSetGenTree <> c1 var
R23899:23903 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23938:23938 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23922:23926 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R23915:23917 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23904:23912 Coq.MSets.MSetGenTree <> subset_r1 var
R23914:23914 Coq.MSets.MSetGenTree <> s var
R23918:23921 Coq.Init.Datatypes <> true constr
R23927:23932 Coq.MSets.MSetGenTree Props Subset def
R23937:23937 Coq.MSets.MSetGenTree <> s var
R23934:23935 Coq.MSets.MSetGenTree <> r1 var
R23894:23896 Coq.MSets.MSetGenTree Props bst ind
R23898:23898 Coq.MSets.MSetGenTree <> s var
R23872:23874 Coq.MSets.MSetGenTree Props bst ind
R23876:23877 Coq.MSets.MSetGenTree <> s2 var
R23844:23846 Coq.MSets.MSetGenTree Props bst ind
R23849:23852 Coq.MSets.MSetGenTree M Node constr
R23865:23866 Coq.MSets.MSetGenTree <> r1 var
R23862:23863 Coq.MSets.MSetGenTree <> x1 var
R23857:23860 Coq.MSets.MSetGenTree M Leaf constr
R23854:23855 Coq.MSets.MSetGenTree <> c1 var
R24087:24092 Coq.MSets.MSetGenTree Props Subset def
R24137:24139 Coq.MSets.MSetGenTree Props InT ind
R24144:24147 Coq.MSets.MSetGenTree M Leaf constr
R24137:24139 Coq.MSets.MSetGenTree Props InT ind
R24144:24147 Coq.MSets.MSetGenTree M Leaf constr
R24294:24299 Coq.MSets.MSetGenTree Props Subset def
R24325:24328 Coq.MSets.MSetGenTree X eq defax
R24325:24328 Coq.MSets.MSetGenTree X eq defax
R24369:24371 Coq.MSets.MSetGenTree Props InT ind
R24376:24379 Coq.MSets.MSetGenTree M Node constr
R24369:24371 Coq.MSets.MSetGenTree Props InT ind
R24376:24379 Coq.MSets.MSetGenTree M Node constr
R24437:24449 Coq.Bool.Bool <> andb_lazy_alt thm
R24452:24464 Coq.Bool.Bool <> andb_true_iff thm
R24437:24449 Coq.Bool.Bool <> andb_lazy_alt thm
R24437:24449 Coq.Bool.Bool <> andb_lazy_alt thm
R24452:24464 Coq.Bool.Bool <> andb_true_iff thm
R24452:24464 Coq.Bool.Bool <> andb_true_iff thm
R24508:24513 Coq.MSets.MSetGenTree Props Subset def
R24589:24596 Coq.MSets.MSetGenTree Props mem_spec thm
R24589:24596 Coq.MSets.MSetGenTree Props mem_spec thm
R24589:24596 Coq.MSets.MSetGenTree Props mem_spec thm
R24589:24596 Coq.MSets.MSetGenTree Props mem_spec thm
R24614:24621 Coq.MSets.MSetGenTree Props mem_spec thm
R24614:24621 Coq.MSets.MSetGenTree Props mem_spec thm
R24614:24621 Coq.MSets.MSetGenTree Props mem_spec thm
R24614:24621 Coq.MSets.MSetGenTree Props mem_spec thm
R24639:24641 Coq.MSets.MSetGenTree Props InT ind
R24647:24650 Coq.MSets.MSetGenTree M Node constr
R24639:24641 Coq.MSets.MSetGenTree Props InT ind
R24647:24650 Coq.MSets.MSetGenTree M Node constr
R24748:24753 Coq.MSets.MSetGenTree Props Subset def
R24779:24781 Coq.MSets.MSetGenTree Props InT ind
R24786:24789 Coq.MSets.MSetGenTree M Node constr
R24779:24781 Coq.MSets.MSetGenTree Props InT ind
R24786:24789 Coq.MSets.MSetGenTree M Node constr
R24844:24846 Coq.MSets.MSetGenTree Props InT ind
R24851:24854 Coq.MSets.MSetGenTree M Node constr
R24844:24846 Coq.MSets.MSetGenTree Props InT ind
R24851:24854 Coq.MSets.MSetGenTree M Node constr
prf 24912:24922 Props subset_spec
R24941:24942 Coq.MSets.MSetGenTree Props Ok class
R24944:24945 Coq.MSets.MSetGenTree <> s1 var
R24948:24949 Coq.MSets.MSetGenTree Props Ok class
R24951:24952 Coq.MSets.MSetGenTree <> s2 var
R24977:24981 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R24970:24972 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24958:24963 Coq.MSets.MSetGenTree M subset def
R24968:24969 Coq.MSets.MSetGenTree <> s2 var
R24965:24966 Coq.MSets.MSetGenTree <> s1 var
R24973:24976 Coq.Init.Datatypes <> true constr
R24982:24987 Coq.MSets.MSetGenTree Props Subset def
R24992:24993 Coq.MSets.MSetGenTree <> s2 var
R24989:24990 Coq.MSets.MSetGenTree <> s1 var
R25070:25075 Coq.MSets.MSetGenTree Props Subset def
R25147:25152 Coq.MSets.MSetGenTree Props Subset def
R25200:25202 Coq.MSets.MSetGenTree Props InT ind
R25207:25210 Coq.MSets.MSetGenTree M Leaf constr
R25200:25202 Coq.MSets.MSetGenTree Props InT ind
R25207:25210 Coq.MSets.MSetGenTree M Leaf constr
R25275:25287 Coq.Bool.Bool <> andb_lazy_alt thm
R25290:25302 Coq.Bool.Bool <> andb_true_iff thm
R25275:25287 Coq.Bool.Bool <> andb_lazy_alt thm
R25275:25287 Coq.Bool.Bool <> andb_lazy_alt thm
R25290:25302 Coq.Bool.Bool <> andb_true_iff thm
R25290:25302 Coq.Bool.Bool <> andb_true_iff thm
R25351:25356 Coq.MSets.MSetGenTree Props Subset def
R25382:25385 Coq.MSets.MSetGenTree X eq defax
R25382:25385 Coq.MSets.MSetGenTree X eq defax
R25426:25428 Coq.MSets.MSetGenTree Props InT ind
R25433:25436 Coq.MSets.MSetGenTree M Node constr
R25426:25428 Coq.MSets.MSetGenTree Props InT ind
R25433:25436 Coq.MSets.MSetGenTree M Node constr
R25491:25493 Coq.MSets.MSetGenTree Props InT ind
R25498:25501 Coq.MSets.MSetGenTree M Node constr
R25491:25493 Coq.MSets.MSetGenTree Props InT ind
R25498:25501 Coq.MSets.MSetGenTree M Node constr
R25559:25571 Coq.Bool.Bool <> andb_lazy_alt thm
R25574:25586 Coq.Bool.Bool <> andb_true_iff thm
R25559:25571 Coq.Bool.Bool <> andb_lazy_alt thm
R25559:25571 Coq.Bool.Bool <> andb_lazy_alt thm
R25574:25586 Coq.Bool.Bool <> andb_true_iff thm
R25574:25586 Coq.Bool.Bool <> andb_true_iff thm
R25614:25625 Coq.MSets.MSetGenTree Props subsetl_spec thm
R25628:25633 Coq.MSets.MSetGenTree M subset def
R25614:25625 Coq.MSets.MSetGenTree Props subsetl_spec thm
R25628:25633 Coq.MSets.MSetGenTree M subset def
R25614:25625 Coq.MSets.MSetGenTree Props subsetl_spec thm
R25628:25633 Coq.MSets.MSetGenTree M subset def
R25684:25689 Coq.MSets.MSetGenTree Props Subset def
R25715:25717 Coq.MSets.MSetGenTree Props InT ind
R25722:25725 Coq.MSets.MSetGenTree M Node constr
R25715:25717 Coq.MSets.MSetGenTree Props InT ind
R25722:25725 Coq.MSets.MSetGenTree M Node constr
R25780:25782 Coq.MSets.MSetGenTree Props InT ind
R25787:25790 Coq.MSets.MSetGenTree M Node constr
R25780:25782 Coq.MSets.MSetGenTree Props InT ind
R25787:25790 Coq.MSets.MSetGenTree M Node constr
R25848:25860 Coq.Bool.Bool <> andb_lazy_alt thm
R25863:25875 Coq.Bool.Bool <> andb_true_iff thm
R25848:25860 Coq.Bool.Bool <> andb_lazy_alt thm
R25848:25860 Coq.Bool.Bool <> andb_lazy_alt thm
R25863:25875 Coq.Bool.Bool <> andb_true_iff thm
R25863:25875 Coq.Bool.Bool <> andb_true_iff thm
R25903:25914 Coq.MSets.MSetGenTree Props subsetr_spec thm
R25917:25922 Coq.MSets.MSetGenTree M subset def
R25903:25914 Coq.MSets.MSetGenTree Props subsetr_spec thm
R25917:25922 Coq.MSets.MSetGenTree M subset def
R25903:25914 Coq.MSets.MSetGenTree Props subsetr_spec thm
R25917:25922 Coq.MSets.MSetGenTree M subset def
R25973:25978 Coq.MSets.MSetGenTree Props Subset def
R26004:26006 Coq.MSets.MSetGenTree Props InT ind
R26011:26014 Coq.MSets.MSetGenTree M Node constr
R26004:26006 Coq.MSets.MSetGenTree Props InT ind
R26011:26014 Coq.MSets.MSetGenTree M Node constr
R26069:26071 Coq.MSets.MSetGenTree Props InT ind
R26076:26079 Coq.MSets.MSetGenTree M Node constr
R26069:26071 Coq.MSets.MSetGenTree Props InT ind
R26076:26079 Coq.MSets.MSetGenTree M Node constr
R26209:26238 Coq.MSets.MSetInterface MakeListOrdering <> modtype
R26240:26240 Coq.MSets.MSetGenTree X <> modtype
mod 26204:26204 <> Props.L
def 26255:26256 Props eq
R26261:26265 Coq.MSets.MSetGenTree Props Equal def
inst 26277:26284 Props eq_equiv
R26288:26298 Coq.Classes.RelationClasses <> Equivalence class
R26300:26301 Coq.MSets.MSetGenTree Props eq def
prf 26335:26340 Props eq_Leq
R26364:26368 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R26357:26358 Coq.MSets.MSetGenTree Props eq def
R26362:26363 Coq.MSets.MSetGenTree <> s' var
R26360:26360 Coq.MSets.MSetGenTree <> s var
R26369:26372 Coq.MSets.MSetGenTree Props eq def
R26388:26395 Coq.MSets.MSetGenTree M elements def
R26397:26398 Coq.MSets.MSetGenTree <> s' var
R26375:26382 Coq.MSets.MSetGenTree M elements def
R26384:26384 Coq.MSets.MSetGenTree <> s var
R26417:26418 Coq.MSets.MSetGenTree Props eq def
R26421:26425 Coq.MSets.MSetGenTree Props Equal def
R26428:26431 Coq.MSets.MSetGenTree Props eq def
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
R26458:26471 Coq.MSets.MSetGenTree Props elements_spec1 thm
def 26505:26506 Props lt
R26517:26520 Coq.MSets.MSetGenTree M tree ind
R26534:26540 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R26548:26549 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R26556:26559 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R26550:26551 Coq.MSets.MSetGenTree Props Ok class
R26553:26555 Coq.MSets.MSetGenTree <> s1' var
R26566:26569 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R26560:26561 Coq.MSets.MSetGenTree Props Ok class
R26563:26565 Coq.MSets.MSetGenTree <> s2' var
R26579:26582 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R26570:26571 Coq.MSets.MSetGenTree Props eq def
R26576:26578 Coq.MSets.MSetGenTree <> s1' var
R26573:26574 Coq.MSets.MSetGenTree <> s1 var
R26592:26598 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R26583:26584 Coq.MSets.MSetGenTree Props eq def
R26589:26591 Coq.MSets.MSetGenTree <> s2' var
R26586:26587 Coq.MSets.MSetGenTree <> s2 var
R26599:26602 Coq.MSets.MSetGenTree Props lt def
R26620:26627 Coq.MSets.MSetGenTree M elements def
R26629:26631 Coq.MSets.MSetGenTree <> s2' var
R26605:26612 Coq.MSets.MSetGenTree M elements def
R26614:26616 Coq.MSets.MSetGenTree <> s1' var
R26660:26663 Coq.MSets.MSetGenTree Props eq def
R26665:26674 Coq.Lists.SetoidList <> equivlistA def
inst 26687:26697 Props lt_strorder
R26701:26711 Coq.Classes.RelationClasses <> StrictOrder class
R26713:26714 Coq.MSets.MSetGenTree Props lt def
R26786:26792 Coq.Lists.SetoidList <> eqlistA ind
R26814:26821 Coq.MSets.MSetGenTree M elements def
R26800:26807 Coq.MSets.MSetGenTree M elements def
R26794:26797 Coq.MSets.MSetGenTree X eq defax
R26786:26792 Coq.Lists.SetoidList <> eqlistA ind
R26814:26821 Coq.MSets.MSetGenTree M elements def
R26800:26807 Coq.MSets.MSetGenTree M elements def
R26794:26797 Coq.MSets.MSetGenTree X eq defax
R26873:26876 Coq.MSets.MSetGenTree X lt defax
R26837:26860 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R26873:26876 Coq.MSets.MSetGenTree X lt defax
R26837:26860 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R26906:26911 Coq.MSets.MSetGenTree Props eq_Leq thm
R26906:26911 Coq.MSets.MSetGenTree Props eq_Leq thm
R26906:26911 Coq.MSets.MSetGenTree Props eq_Leq thm
R26977:26999 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R27002:27009 Coq.MSets.MSetGenTree M elements def
R26977:26999 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R27002:27009 Coq.MSets.MSetGenTree M elements def
R27187:27193 Coq.Lists.SetoidList <> eqlistA ind
R27216:27223 Coq.MSets.MSetGenTree M elements def
R27201:27208 Coq.MSets.MSetGenTree M elements def
R27195:27198 Coq.MSets.MSetGenTree X eq defax
R27187:27193 Coq.Lists.SetoidList <> eqlistA ind
R27216:27223 Coq.MSets.MSetGenTree M elements def
R27201:27208 Coq.MSets.MSetGenTree M elements def
R27195:27198 Coq.MSets.MSetGenTree X eq defax
R27277:27280 Coq.MSets.MSetGenTree X lt defax
R27241:27264 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R27277:27280 Coq.MSets.MSetGenTree X lt defax
R27241:27264 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R27310:27315 Coq.MSets.MSetGenTree Props eq_Leq thm
R27310:27315 Coq.MSets.MSetGenTree Props eq_Leq thm
R27310:27315 Coq.MSets.MSetGenTree Props eq_Leq thm
R27372:27379 Coq.MSets.MSetGenTree M elements def
R27372:27379 Coq.MSets.MSetGenTree M elements def
inst 27426:27434 Props lt_compat
R27438:27443 Coq.Classes.Morphisms <> Proper class
R27461:27462 Coq.MSets.MSetGenTree Props lt def
R27448:27450 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R27446:27447 Coq.MSets.MSetGenTree Props eq def
R27453:27455 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R27451:27452 Coq.MSets.MSetGenTree Props eq def
R27456:27458 Coq.Init.Logic <> iff def
def 28018:28026 Props flatten_e
R28033:28043 Coq.MSets.MSetGenTree M enumeration ind
R28048:28051 Coq.Init.Datatypes <> list ind
R28053:28055 Coq.MSets.MSetGenTree M elt def
R28066:28066 Coq.MSets.MSetGenTree <> e var
R28077:28079 Coq.MSets.MSetGenTree M End constr
R28084:28086 Coq.Init.Datatypes <> nil constr
R28092:28095 Coq.MSets.MSetGenTree M More constr
R28107:28110 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R28121:28124 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28111:28118 Coq.MSets.MSetGenTree M elements def
R28125:28133 Coq.MSets.MSetGenTree <> flatten_e def
prf 28150:28167 Props flatten_e_elements
R28227:28229 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28201:28204 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28191:28198 Coq.MSets.MSetGenTree M elements def
R28200:28200 Coq.MSets.MSetGenTree <> l var
R28205:28213 Coq.MSets.MSetGenTree Props flatten_e def
R28216:28219 Coq.MSets.MSetGenTree M More constr
R28225:28225 Coq.MSets.MSetGenTree <> e var
R28223:28223 Coq.MSets.MSetGenTree <> r var
R28221:28221 Coq.MSets.MSetGenTree <> x var
R28253:28256 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28230:28237 Coq.MSets.MSetGenTree M elements def
R28240:28243 Coq.MSets.MSetGenTree M Node constr
R28251:28251 Coq.MSets.MSetGenTree <> r var
R28249:28249 Coq.MSets.MSetGenTree <> x var
R28247:28247 Coq.MSets.MSetGenTree <> l var
R28245:28245 Coq.MSets.MSetGenTree <> c var
R28257:28265 Coq.MSets.MSetGenTree Props flatten_e def
R28267:28267 Coq.MSets.MSetGenTree <> e var
R28298:28310 Coq.MSets.MSetGenTree Props elements_node thm
R28313:28319 Coq.Lists.List <> app_ass syndef
R28298:28310 Coq.MSets.MSetGenTree Props elements_node thm
R28298:28310 Coq.MSets.MSetGenTree Props elements_node thm
R28313:28319 Coq.Lists.List <> app_ass syndef
R28313:28319 Coq.Lists.List <> app_ass syndef
prf 28334:28339 Props cons_1
R28377:28379 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28357:28365 Coq.MSets.MSetGenTree Props flatten_e def
R28368:28371 Coq.MSets.MSetGenTree M cons def
R28375:28375 Coq.MSets.MSetGenTree <> e var
R28373:28373 Coq.MSets.MSetGenTree <> s var
R28390:28393 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28380:28387 Coq.MSets.MSetGenTree M elements def
R28389:28389 Coq.MSets.MSetGenTree <> s var
R28394:28402 Coq.MSets.MSetGenTree Props flatten_e def
R28404:28404 Coq.MSets.MSetGenTree <> e var
R28470:28487 Coq.MSets.MSetGenTree Props flatten_e_elements thm
R28470:28487 Coq.MSets.MSetGenTree Props flatten_e_elements thm
def 28546:28548 Props Cmp
R28559:28566 Coq.Init.Datatypes <> CompSpec def
R28582:28582 Coq.MSets.MSetGenTree <> c var
R28580:28580 Coq.MSets.MSetGenTree <> y var
R28578:28578 Coq.MSets.MSetGenTree <> x var
R28573:28576 Coq.MSets.MSetGenTree Props lt def
R28568:28571 Coq.MSets.MSetGenTree Props eq def
R28604:28606 Coq.MSets.MSetGenTree Props Cmp def
R28608:28611 Coq.Program.Basics <> flip def
prf 28628:28642 Props compare_end_Cmp
R28658:28660 Coq.MSets.MSetGenTree Props Cmp def
R28684:28692 Coq.MSets.MSetGenTree Props flatten_e def
R28694:28695 Coq.MSets.MSetGenTree <> e2 var
R28679:28681 Coq.Init.Datatypes <> nil constr
R28663:28673 Coq.MSets.MSetGenTree M compare_end def
R28675:28676 Coq.MSets.MSetGenTree <> e2 var
prf 28771:28786 Props compare_more_Cmp
R28874:28880 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28881:28883 Coq.MSets.MSetGenTree Props Cmp def
R28939:28947 Coq.MSets.MSetGenTree Props flatten_e def
R28950:28953 Coq.MSets.MSetGenTree M More constr
R28961:28962 Coq.MSets.MSetGenTree <> e2 var
R28958:28959 Coq.MSets.MSetGenTree <> r2 var
R28955:28956 Coq.MSets.MSetGenTree <> x2 var
R28927:28928 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R28925:28926 Coq.MSets.MSetGenTree <> x1 var
R28929:28929 Coq.MSets.MSetGenTree <> l var
R28886:28897 Coq.MSets.MSetGenTree M compare_more def
R28908:28911 Coq.MSets.MSetGenTree M More constr
R28919:28920 Coq.MSets.MSetGenTree <> e2 var
R28916:28917 Coq.MSets.MSetGenTree <> r2 var
R28913:28914 Coq.MSets.MSetGenTree <> x2 var
R28902:28905 Coq.MSets.MSetGenTree <> cont var
R28899:28900 Coq.MSets.MSetGenTree <> x1 var
R28819:28821 Coq.MSets.MSetGenTree Props Cmp def
R28857:28860 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R28846:28853 Coq.MSets.MSetGenTree M elements def
R28855:28856 Coq.MSets.MSetGenTree <> r2 var
R28861:28869 Coq.MSets.MSetGenTree Props flatten_e def
R28871:28872 Coq.MSets.MSetGenTree <> e2 var
R28843:28843 Coq.MSets.MSetGenTree <> l var
R28824:28827 Coq.MSets.MSetGenTree <> cont var
R28830:28833 Coq.MSets.MSetGenTree M cons def
R28838:28839 Coq.MSets.MSetGenTree <> e2 var
R28835:28836 Coq.MSets.MSetGenTree <> r2 var
prf 29040:29055 Props compare_cont_Cmp
R29081:29081 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29120:29125 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29126:29128 Coq.MSets.MSetGenTree Props Cmp def
R29176:29184 Coq.MSets.MSetGenTree Props flatten_e def
R29186:29187 Coq.MSets.MSetGenTree <> e2 var
R29168:29171 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R29157:29164 Coq.MSets.MSetGenTree M elements def
R29166:29167 Coq.MSets.MSetGenTree <> s1 var
R29172:29172 Coq.MSets.MSetGenTree <> l var
R29131:29142 Coq.MSets.MSetGenTree M compare_cont def
R29152:29153 Coq.MSets.MSetGenTree <> e2 var
R29147:29150 Coq.MSets.MSetGenTree <> cont var
R29144:29145 Coq.MSets.MSetGenTree <> s1 var
R29092:29094 Coq.MSets.MSetGenTree Props Cmp def
R29108:29116 Coq.MSets.MSetGenTree Props flatten_e def
R29118:29118 Coq.MSets.MSetGenTree <> e var
R29105:29105 Coq.MSets.MSetGenTree <> l var
R29097:29100 Coq.MSets.MSetGenTree <> cont var
R29102:29102 Coq.MSets.MSetGenTree <> e var
R29262:29274 Coq.MSets.MSetGenTree Props elements_node thm
R29277:29283 Coq.Lists.List <> app_ass syndef
R29262:29274 Coq.MSets.MSetGenTree Props elements_node thm
R29262:29274 Coq.MSets.MSetGenTree Props elements_node thm
R29277:29283 Coq.Lists.List <> app_ass syndef
R29277:29283 Coq.Lists.List <> app_ass syndef
R29362:29377 Coq.MSets.MSetGenTree Props compare_more_Cmp thm
R29362:29377 Coq.MSets.MSetGenTree Props compare_more_Cmp thm
R29392:29397 Coq.MSets.MSetGenTree Props cons_1 thm
R29392:29397 Coq.MSets.MSetGenTree Props cons_1 thm
R29392:29397 Coq.MSets.MSetGenTree Props cons_1 thm
prf 29418:29428 Props compare_Cmp
R29447:29449 Coq.MSets.MSetGenTree Props Cmp def
R29482:29489 Coq.MSets.MSetGenTree M elements def
R29491:29492 Coq.MSets.MSetGenTree <> s2 var
R29468:29475 Coq.MSets.MSetGenTree M elements def
R29477:29478 Coq.MSets.MSetGenTree <> s1 var
R29452:29458 Coq.MSets.MSetGenTree M compare def
R29463:29464 Coq.MSets.MSetGenTree <> s2 var
R29460:29461 Coq.MSets.MSetGenTree <> s1 var
R29519:29525 Coq.MSets.MSetGenTree M compare def
R29541:29549 Coq.Lists.List <> app_nil_r thm
R29552:29559 Coq.MSets.MSetGenTree M elements def
R29541:29549 Coq.Lists.List <> app_nil_r thm
R29552:29559 Coq.MSets.MSetGenTree M elements def
R29541:29549 Coq.Lists.List <> app_nil_r thm
R29552:29559 Coq.MSets.MSetGenTree M elements def
R29577:29584 Coq.MSets.MSetGenTree M elements def
R29596:29604 Coq.MSets.MSetGenTree Props flatten_e def
R29607:29610 Coq.MSets.MSetGenTree M cons def
R29615:29617 Coq.MSets.MSetGenTree M End constr
R29635:29640 Coq.MSets.MSetGenTree Props cons_1 thm
R29658:29666 Coq.Lists.List <> app_nil_r thm
R29577:29584 Coq.MSets.MSetGenTree M elements def
R29596:29604 Coq.MSets.MSetGenTree Props flatten_e def
R29607:29610 Coq.MSets.MSetGenTree M cons def
R29615:29617 Coq.MSets.MSetGenTree M End constr
R29635:29640 Coq.MSets.MSetGenTree Props cons_1 thm
R29635:29640 Coq.MSets.MSetGenTree Props cons_1 thm
R29658:29666 Coq.Lists.List <> app_nil_r thm
R29658:29666 Coq.Lists.List <> app_nil_r thm
R29683:29698 Coq.MSets.MSetGenTree Props compare_cont_Cmp thm
R29683:29698 Coq.MSets.MSetGenTree Props compare_cont_Cmp thm
R29723:29737 Coq.MSets.MSetGenTree Props compare_end_Cmp thm
R29723:29737 Coq.MSets.MSetGenTree Props compare_end_Cmp thm
prf 29758:29769 Props compare_spec
R29788:29789 Coq.MSets.MSetGenTree Props Ok class
R29791:29792 Coq.MSets.MSetGenTree <> s1 var
R29795:29796 Coq.MSets.MSetGenTree Props Ok class
R29798:29799 Coq.MSets.MSetGenTree <> s2 var
R29804:29811 Coq.Init.Datatypes <> CompSpec def
R29826:29832 Coq.MSets.MSetGenTree M compare def
R29837:29838 Coq.MSets.MSetGenTree <> s2 var
R29834:29835 Coq.MSets.MSetGenTree <> s1 var
R29822:29823 Coq.MSets.MSetGenTree <> s2 var
R29819:29820 Coq.MSets.MSetGenTree <> s1 var
R29816:29817 Coq.MSets.MSetGenTree Props lt def
R29813:29814 Coq.MSets.MSetGenTree Props eq def
R29869:29879 Coq.MSets.MSetGenTree Props compare_Cmp thm
R29869:29879 Coq.MSets.MSetGenTree Props compare_Cmp thm
R29911:29916 Coq.MSets.MSetGenTree Props eq_Leq thm
R29911:29916 Coq.MSets.MSetGenTree Props eq_Leq thm
R29911:29916 Coq.MSets.MSetGenTree Props eq_Leq thm
prf 30051:30060 Props equal_spec
R30079:30080 Coq.MSets.MSetGenTree Props Ok class
R30082:30083 Coq.MSets.MSetGenTree <> s1 var
R30086:30087 Coq.MSets.MSetGenTree Props Ok class
R30089:30090 Coq.MSets.MSetGenTree <> s2 var
R30113:30117 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R30106:30108 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30095:30099 Coq.MSets.MSetGenTree M equal def
R30104:30105 Coq.MSets.MSetGenTree <> s2 var
R30101:30102 Coq.MSets.MSetGenTree <> s1 var
R30109:30112 Coq.Init.Datatypes <> true constr
R30118:30119 Coq.MSets.MSetGenTree Props eq def
R30124:30125 Coq.MSets.MSetGenTree <> s2 var
R30121:30122 Coq.MSets.MSetGenTree <> s1 var
R30142:30146 Coq.MSets.MSetGenTree M equal def
R30180:30191 Coq.MSets.MSetGenTree Props compare_spec thm
R30180:30191 Coq.MSets.MSetGenTree Props compare_spec thm
R30284:30306 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R30284:30306 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R30342:30364 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R30342:30364 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
prf 30446:30462 Props mindepth_maxdepth
R30478:30481 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R30468:30475 Coq.MSets.MSetGenTree M mindepth def
R30477:30477 Coq.MSets.MSetGenTree <> s var
R30482:30489 Coq.MSets.MSetGenTree M maxdepth def
R30491:30491 Coq.MSets.MSetGenTree <> s var
R30540:30555 Coq.Arith.PeanoNat Nat succ_le_mono thm
R30540:30555 Coq.Arith.PeanoNat Nat succ_le_mono thm
R30540:30555 Coq.Arith.PeanoNat Nat succ_le_mono thm
R30573:30580 Coq.MSets.MSetGenTree M mindepth def
R30573:30580 Coq.MSets.MSetGenTree M mindepth def
R30593:30604 Coq.Arith.PeanoNat Nat le_min_l thm
R30593:30604 Coq.Arith.PeanoNat Nat le_min_l thm
R30622:30629 Coq.MSets.MSetGenTree M maxdepth def
R30622:30629 Coq.MSets.MSetGenTree M maxdepth def
R30651:30662 Coq.Arith.PeanoNat Nat le_max_l thm
R30651:30662 Coq.Arith.PeanoNat Nat le_max_l thm
prf 30677:30693 Props maxdepth_cardinal
R30709:30711 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R30699:30706 Coq.MSets.MSetGenTree M cardinal def
R30708:30708 Coq.MSets.MSetGenTree <> s var
R30713:30714 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R30725:30725 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R30715:30722 Coq.MSets.MSetGenTree M maxdepth def
R30724:30724 Coq.MSets.MSetGenTree <> s var
R30743:30750 Coq.Init.Peano <> lt def
R30819:30832 Coq.Arith.PeanoNat Nat add_succ_r thm
R30838:30851 Coq.Arith.PeanoNat Nat add_succ_l thm
R30854:30864 Coq.Arith.PeanoNat Nat add_0_r thm
R30819:30832 Coq.Arith.PeanoNat Nat add_succ_r thm
R30819:30832 Coq.Arith.PeanoNat Nat add_succ_r thm
R30838:30851 Coq.Arith.PeanoNat Nat add_succ_l thm
R30838:30851 Coq.Arith.PeanoNat Nat add_succ_l thm
R30854:30864 Coq.Arith.PeanoNat Nat add_0_r thm
R30854:30864 Coq.Arith.PeanoNat Nat add_0_r thm
R30876:30890 Coq.Arith.PeanoNat Nat add_le_mono thm
R30947:30961 Coq.Arith.PeanoNat Nat pow_le_mono thm
R30876:30890 Coq.Arith.PeanoNat Nat add_le_mono thm
R30947:30961 Coq.Arith.PeanoNat Nat pow_le_mono thm
R30947:30961 Coq.Arith.PeanoNat Nat pow_le_mono thm
R30981:30992 Coq.Arith.PeanoNat Nat le_max_l thm
R30981:30992 Coq.Arith.PeanoNat Nat le_max_l thm
R31006:31017 Coq.Arith.PeanoNat Nat le_max_r thm
R31006:31017 Coq.Arith.PeanoNat Nat le_max_r thm
prf 31032:31048 Props mindepth_cardinal
R31068:31071 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R31055:31056 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R31067:31067 Coq.Arith.PeanoNat <> ::nat_scope:x_'^'_x not
R31057:31064 Coq.MSets.MSetGenTree M mindepth def
R31066:31066 Coq.MSets.MSetGenTree <> s var
R31072:31072 Coq.Init.Datatypes <> S constr
R31075:31082 Coq.MSets.MSetGenTree M cardinal def
R31084:31084 Coq.MSets.MSetGenTree <> s var
R31103:31110 Coq.Init.Peano <> lt def
R31179:31192 Coq.Arith.PeanoNat Nat add_succ_r thm
R31198:31211 Coq.Arith.PeanoNat Nat add_succ_l thm
R31214:31224 Coq.Arith.PeanoNat Nat add_0_r thm
R31179:31192 Coq.Arith.PeanoNat Nat add_succ_r thm
R31179:31192 Coq.Arith.PeanoNat Nat add_succ_r thm
R31198:31211 Coq.Arith.PeanoNat Nat add_succ_l thm
R31198:31211 Coq.Arith.PeanoNat Nat add_succ_l thm
R31214:31224 Coq.Arith.PeanoNat Nat add_0_r thm
R31214:31224 Coq.Arith.PeanoNat Nat add_0_r thm
R31236:31250 Coq.Arith.PeanoNat Nat add_le_mono thm
R31307:31321 Coq.Arith.PeanoNat Nat pow_le_mono thm
R31236:31250 Coq.Arith.PeanoNat Nat add_le_mono thm
R31307:31321 Coq.Arith.PeanoNat Nat pow_le_mono thm
R31307:31321 Coq.Arith.PeanoNat Nat pow_le_mono thm
R31341:31352 Coq.Arith.PeanoNat Nat le_min_l thm
R31341:31352 Coq.Arith.PeanoNat Nat le_min_l thm
R31366:31377 Coq.Arith.PeanoNat Nat le_min_r thm
R31366:31377 Coq.Arith.PeanoNat Nat le_min_r thm
prf 31392:31412 Props maxdepth_log_cardinal
R31427:31431 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31453:31455 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R31432:31439 Coq.Arith.PeanoNat Nat log2 def
R31442:31449 Coq.MSets.MSetGenTree M cardinal def
R31451:31451 Coq.MSets.MSetGenTree <> s var
R31456:31463 Coq.MSets.MSetGenTree M maxdepth def
R31465:31465 Coq.MSets.MSetGenTree <> s var
R31419:31422 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R31418:31418 Coq.MSets.MSetGenTree <> s var
R31423:31426 Coq.MSets.MSetGenTree M Leaf constr
R31493:31508 Coq.Arith.PeanoNat Nat log2_lt_pow2 thm
R31493:31508 Coq.Arith.PeanoNat Nat log2_lt_pow2 thm
R31548:31564 Coq.MSets.MSetGenTree Props maxdepth_cardinal thm
R31548:31564 Coq.MSets.MSetGenTree Props maxdepth_cardinal thm
prf 31579:31599 Props mindepth_log_cardinal
R31615:31618 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R31605:31612 Coq.MSets.MSetGenTree M mindepth def
R31614:31614 Coq.MSets.MSetGenTree <> s var
R31619:31626 Coq.Arith.PeanoNat Nat log2 def
R31629:31629 Coq.Init.Datatypes <> S constr
R31632:31639 Coq.MSets.MSetGenTree M cardinal def
R31641:31641 Coq.MSets.MSetGenTree <> s var
R31660:31675 Coq.Arith.PeanoNat Nat log2_le_pow2 thm
R31660:31675 Coq.Arith.PeanoNat Nat log2_le_pow2 thm
R31702:31718 Coq.MSets.MSetGenTree Props mindepth_cardinal thm
R31702:31718 Coq.MSets.MSetGenTree Props mindepth_cardinal thm
R31731:31735 Coq.MSets.MSetGenTree Props <> modtype

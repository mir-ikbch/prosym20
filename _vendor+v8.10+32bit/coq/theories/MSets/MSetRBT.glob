DIGEST 9ca6ac052ef75a11e1b650cc78e44a36
FCoq.MSets.MSetRBT
R1573:1583 Coq.MSets.MSetGenTree <> <> lib
R1601:1604 Coq.Bool.Bool <> <> lib
R1606:1609 Coq.Lists.List <> <> lib
R1611:1616 Coq.PArith.BinPos <> <> lib
R1618:1621 Coq.PArith.Pnat <> <> lib
R1623:1628 Coq.Setoids.Setoid <> <> lib
R1630:1639 Coq.Lists.SetoidList <> <> lib
R1641:1648 Coq.Arith.PeanoNat <> <> lib
R1886:1900 Coq.MSets.MSetInterface S <> mod
modtype 1862:1874 <> MSetRemoveMin
ax 1916:1925 MSetRemoveMin remove_min
R1930:1933 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1934:1939 Coq.Init.Datatypes <> option ind
R1945:1947 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R1942:1944 Coq.MSets.MSetRBT M elt def
R1948:1948 Coq.MSets.MSetRBT M t defax
R1929:1929 Coq.MSets.MSetRBT M t defax
ax 1960:1975 MSetRemoveMin remove_min_spec1
R2022:2028 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2047:2050 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R2038:2040 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2029:2035 Coq.MSets.MSetRBT M min_elt defax
R2037:2037 Coq.MSets.MSetRBT <> s var
R2041:2044 Coq.Init.Datatypes <> Some constr
R2046:2046 Coq.MSets.MSetRBT <> k var
R2061:2065 Coq.MSets.MSetInterface WSetsOn :::x_'[=]'_x not
R2051:2056 Coq.MSets.MSetRBT M remove defax
R2060:2060 Coq.MSets.MSetRBT <> s var
R2058:2058 Coq.MSets.MSetRBT <> k var
R2066:2067 Coq.MSets.MSetRBT <> s' var
R2008:2010 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1996:2005 Coq.MSets.MSetRBT MSetRemoveMin remove_min defax
R2007:2007 Coq.MSets.MSetRBT <> s var
R2011:2014 Coq.Init.Datatypes <> Some constr
R2016:2016 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2018:2018 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2021:2021 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2017:2017 Coq.MSets.MSetRBT <> k var
R2019:2020 Coq.MSets.MSetRBT <> s' var
ax 2078:2093 MSetRemoveMin remove_min_spec2
R2126:2129 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2130:2134 Coq.MSets.MSetRBT M Empty def
R2136:2136 Coq.MSets.MSetRBT <> s var
R2119:2121 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2107:2116 Coq.MSets.MSetRBT MSetRemoveMin remove_min defax
R2118:2118 Coq.MSets.MSetRBT <> s var
R2122:2125 Coq.Init.Datatypes <> None constr
R2144:2156 Coq.MSets.MSetRBT MSetRemoveMin <> modtype
ind 2208:2212 <> color
constr 2217:2219 <> Red
constr 2223:2227 <> Black
R2220:2220 Coq.MSets.MSetRBT <> color ind
R2228:2228 Coq.MSets.MSetRBT <> color ind
mod 2238:2242 <> Color
def 2257:2257 Color t
R2262:2266 Coq.MSets.MSetRBT <> color ind
R2273:2277 Coq.MSets.MSetRBT Color <> mod
R2330:2347 Coq.Structures.Orders OrderedType <> mod
R2353:2369 Coq.MSets.MSetInterface Ops <> mod
R2371:2371 Coq.MSets.MSetRBT X <> modtype
mod 2323:2325 <> Ops
R2601:2615 Coq.MSets.MSetGenTree Ops <> mod
R2617:2617 Coq.MSets.MSetRBT X <> modtype
R2619:2623 Coq.MSets.MSetRBT Color <> modtype
def 2638:2638 Ops t
R2643:2646 Coq.MSets.MSetRBT Ops tree ind
syndef 2664:2665 Ops Rd
R2671:2674 Coq.MSets.MSetRBT Ops Node constr
R2676:2678 Coq.MSets.MSetRBT <> Red constr
syndef 2697:2698 Ops Bk
R2704:2707 Coq.MSets.MSetRBT Ops Node constr
R2709:2713 Coq.MSets.MSetRBT <> Black constr
def 2751:2759 Ops singleton
R2765:2767 Coq.MSets.MSetRBT Ops elt def
R2772:2775 Coq.MSets.MSetRBT Ops tree ind
R2780:2781 Coq.MSets.MSetRBT Ops Bk syndef
R2790:2793 Coq.MSets.MSetRBT Ops Leaf constr
R2788:2788 Coq.MSets.MSetRBT <> k var
R2783:2786 Coq.MSets.MSetRBT Ops Leaf constr
def 2839:2847 Ops makeBlack
R2861:2861 Coq.MSets.MSetRBT <> t var
R2871:2874 Coq.MSets.MSetRBT Ops Leaf constr
R2879:2882 Coq.MSets.MSetRBT Ops Leaf constr
R2887:2890 Coq.MSets.MSetRBT Ops Node constr
R2903:2904 Coq.MSets.MSetRBT Ops Bk syndef
def 2930:2936 Ops makeRed
R2950:2950 Coq.MSets.MSetRBT <> t var
R2960:2963 Coq.MSets.MSetRBT Ops Leaf constr
R2968:2971 Coq.MSets.MSetRBT Ops Leaf constr
R2976:2979 Coq.MSets.MSetRBT Ops Node constr
R2992:2993 Coq.MSets.MSetRBT Ops Rd syndef
def 3143:3146 Ops lbal
R3164:3164 Coq.MSets.MSetRBT <> l var
R3195:3196 Coq.MSets.MSetRBT Ops Rd syndef
R3212:3213 Coq.MSets.MSetRBT Ops Bk syndef
R3219:3219 Coq.MSets.MSetRBT <> r var
R3217:3217 Coq.MSets.MSetRBT <> k var
R3199:3200 Coq.MSets.MSetRBT Ops Bk syndef
R3246:3247 Coq.MSets.MSetRBT Ops Rd syndef
R3263:3264 Coq.MSets.MSetRBT Ops Bk syndef
R3270:3270 Coq.MSets.MSetRBT <> r var
R3268:3268 Coq.MSets.MSetRBT <> k var
R3250:3251 Coq.MSets.MSetRBT Ops Bk syndef
R3281:3282 Coq.MSets.MSetRBT Ops Bk syndef
R3288:3288 Coq.MSets.MSetRBT <> r var
R3286:3286 Coq.MSets.MSetRBT <> k var
R3284:3284 Coq.MSets.MSetRBT <> l var
def 3308:3311 Ops rbal
R3329:3329 Coq.MSets.MSetRBT <> r var
R3360:3361 Coq.MSets.MSetRBT Ops Rd syndef
R3377:3378 Coq.MSets.MSetRBT Ops Bk syndef
R3364:3365 Coq.MSets.MSetRBT Ops Bk syndef
R3369:3369 Coq.MSets.MSetRBT <> k var
R3367:3367 Coq.MSets.MSetRBT <> l var
R3411:3412 Coq.MSets.MSetRBT Ops Rd syndef
R3428:3429 Coq.MSets.MSetRBT Ops Bk syndef
R3415:3416 Coq.MSets.MSetRBT Ops Bk syndef
R3420:3420 Coq.MSets.MSetRBT <> k var
R3418:3418 Coq.MSets.MSetRBT <> l var
R3446:3447 Coq.MSets.MSetRBT Ops Bk syndef
R3453:3453 Coq.MSets.MSetRBT <> r var
R3451:3451 Coq.MSets.MSetRBT <> k var
R3449:3449 Coq.MSets.MSetRBT <> l var
def 3582:3586 Ops rbal'
R3604:3604 Coq.MSets.MSetRBT <> r var
R3635:3636 Coq.MSets.MSetRBT Ops Rd syndef
R3652:3653 Coq.MSets.MSetRBT Ops Bk syndef
R3639:3640 Coq.MSets.MSetRBT Ops Bk syndef
R3644:3644 Coq.MSets.MSetRBT <> k var
R3642:3642 Coq.MSets.MSetRBT <> l var
R3686:3687 Coq.MSets.MSetRBT Ops Rd syndef
R3703:3704 Coq.MSets.MSetRBT Ops Bk syndef
R3690:3691 Coq.MSets.MSetRBT Ops Bk syndef
R3695:3695 Coq.MSets.MSetRBT <> k var
R3693:3693 Coq.MSets.MSetRBT <> l var
R3721:3722 Coq.MSets.MSetRBT Ops Bk syndef
R3728:3728 Coq.MSets.MSetRBT <> r var
R3726:3726 Coq.MSets.MSetRBT <> k var
R3724:3724 Coq.MSets.MSetRBT <> l var
def 3929:3933 Ops lbalS
R3951:3951 Coq.MSets.MSetRBT <> l var
R3973:3974 Coq.MSets.MSetRBT Ops Rd syndef
R3989:3989 Coq.MSets.MSetRBT <> r var
R3987:3987 Coq.MSets.MSetRBT <> k var
R3977:3978 Coq.MSets.MSetRBT Ops Bk syndef
R4008:4008 Coq.MSets.MSetRBT <> r var
R4032:4036 Coq.MSets.MSetRBT Ops rbal' def
R4043:4044 Coq.MSets.MSetRBT Ops Rd syndef
R4040:4040 Coq.MSets.MSetRBT <> k var
R4038:4038 Coq.MSets.MSetRBT <> l var
R4079:4080 Coq.MSets.MSetRBT Ops Rd syndef
R4096:4100 Coq.MSets.MSetRBT Ops rbal' def
R4107:4113 Coq.MSets.MSetRBT Ops makeRed def
R4083:4084 Coq.MSets.MSetRBT Ops Bk syndef
R4088:4088 Coq.MSets.MSetRBT <> k var
R4086:4086 Coq.MSets.MSetRBT <> l var
R4129:4130 Coq.MSets.MSetRBT Ops Rd syndef
R4136:4136 Coq.MSets.MSetRBT <> r var
R4134:4134 Coq.MSets.MSetRBT <> k var
R4132:4132 Coq.MSets.MSetRBT <> l var
def 4180:4184 Ops rbalS
R4202:4202 Coq.MSets.MSetRBT <> r var
R4224:4225 Coq.MSets.MSetRBT Ops Rd syndef
R4232:4233 Coq.MSets.MSetRBT Ops Bk syndef
R4229:4229 Coq.MSets.MSetRBT <> k var
R4227:4227 Coq.MSets.MSetRBT <> l var
R4259:4259 Coq.MSets.MSetRBT <> l var
R4283:4286 Coq.MSets.MSetRBT Ops lbal def
R4301:4301 Coq.MSets.MSetRBT <> r var
R4299:4299 Coq.MSets.MSetRBT <> k var
R4289:4290 Coq.MSets.MSetRBT Ops Rd syndef
R4329:4330 Coq.MSets.MSetRBT Ops Rd syndef
R4358:4359 Coq.MSets.MSetRBT Ops Bk syndef
R4365:4365 Coq.MSets.MSetRBT <> r var
R4363:4363 Coq.MSets.MSetRBT <> k var
R4333:4336 Coq.MSets.MSetRBT Ops lbal def
R4339:4345 Coq.MSets.MSetRBT Ops makeRed def
R4378:4379 Coq.MSets.MSetRBT Ops Rd syndef
R4385:4385 Coq.MSets.MSetRBT <> r var
R4383:4383 Coq.MSets.MSetRBT <> k var
R4381:4381 Coq.MSets.MSetRBT <> l var
def 4448:4450 Ops ins
R4466:4466 Coq.MSets.MSetRBT <> s var
R4476:4479 Coq.MSets.MSetRBT Ops Leaf constr
R4484:4485 Coq.MSets.MSetRBT Ops Rd syndef
R4494:4497 Coq.MSets.MSetRBT Ops Leaf constr
R4492:4492 Coq.MSets.MSetRBT <> x var
R4487:4490 Coq.MSets.MSetRBT Ops Leaf constr
R4502:4505 Coq.MSets.MSetRBT Ops Node constr
R4527:4535 Coq.MSets.MSetRBT X compare defax
R4537:4537 Coq.MSets.MSetRBT <> x var
R4551:4552 Coq.Init.Datatypes <> Eq constr
R4557:4557 Coq.MSets.MSetRBT <> s var
R4564:4565 Coq.Init.Datatypes <> Lt constr
R4595:4597 Coq.MSets.MSetRBT <> Red constr
R4602:4603 Coq.MSets.MSetRBT Ops Rd syndef
R4606:4608 Coq.MSets.MSetRBT <> ins def
R4610:4610 Coq.MSets.MSetRBT <> x var
R4626:4630 Coq.MSets.MSetRBT <> Black constr
R4635:4638 Coq.MSets.MSetRBT Ops lbal def
R4641:4643 Coq.MSets.MSetRBT <> ins def
R4645:4645 Coq.MSets.MSetRBT <> x var
R4668:4669 Coq.Init.Datatypes <> Gt constr
R4699:4701 Coq.MSets.MSetRBT <> Red constr
R4706:4707 Coq.MSets.MSetRBT Ops Rd syndef
R4714:4716 Coq.MSets.MSetRBT <> ins def
R4718:4718 Coq.MSets.MSetRBT <> x var
R4730:4734 Coq.MSets.MSetRBT <> Black constr
R4739:4742 Coq.MSets.MSetRBT Ops rbal def
R4749:4751 Coq.MSets.MSetRBT <> ins def
R4753:4753 Coq.MSets.MSetRBT <> x var
def 4792:4794 Ops add
R4803:4811 Coq.MSets.MSetRBT Ops makeBlack def
R4814:4816 Coq.MSets.MSetRBT Ops ins def
R4820:4820 Coq.MSets.MSetRBT <> s var
R4818:4818 Coq.MSets.MSetRBT <> x var
def 4854:4859 Ops append
R4864:4867 Coq.MSets.MSetRBT Ops tree ind
R4876:4879 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4880:4883 Coq.MSets.MSetRBT Ops tree ind
R4872:4875 Coq.MSets.MSetRBT Ops tree ind
R4895:4895 Coq.MSets.MSetRBT <> l var
R4905:4908 Coq.MSets.MSetRBT Ops Leaf constr
R4922:4922 Coq.MSets.MSetRBT <> r var
R4927:4930 Coq.MSets.MSetRBT Ops Node constr
R4966:4969 Coq.MSets.MSetRBT Ops tree ind
R4974:4977 Coq.MSets.MSetRBT Ops tree ind
R4991:4991 Coq.MSets.MSetRBT <> r var
R5003:5006 Coq.MSets.MSetRBT Ops Leaf constr
R5011:5011 Coq.MSets.MSetRBT <> l var
R5018:5021 Coq.MSets.MSetRBT Ops Node constr
R5068:5070 Coq.MSets.MSetRBT <> Red constr
R5073:5075 Coq.MSets.MSetRBT <> Red constr
R5098:5103 Coq.MSets.MSetRBT <> append def
R5127:5129 Coq.MSets.MSetRBT <> lrl var
R5161:5162 Coq.MSets.MSetRBT Ops Rd syndef
R5182:5183 Coq.MSets.MSetRBT Ops Rd syndef
R5165:5166 Coq.MSets.MSetRBT Ops Rd syndef
R5210:5211 Coq.MSets.MSetRBT Ops Rd syndef
R5220:5221 Coq.MSets.MSetRBT Ops Rd syndef
R5223:5225 Coq.MSets.MSetRBT <> lrl var
R5252:5256 Coq.MSets.MSetRBT <> Black constr
R5259:5263 Coq.MSets.MSetRBT <> Black constr
R5286:5291 Coq.MSets.MSetRBT <> append def
R5315:5317 Coq.MSets.MSetRBT <> lrl var
R5349:5350 Coq.MSets.MSetRBT Ops Rd syndef
R5370:5371 Coq.MSets.MSetRBT Ops Bk syndef
R5353:5354 Coq.MSets.MSetRBT Ops Bk syndef
R5398:5402 Coq.MSets.MSetRBT Ops lbalS def
R5411:5412 Coq.MSets.MSetRBT Ops Bk syndef
R5414:5416 Coq.MSets.MSetRBT <> lrl var
R5443:5447 Coq.MSets.MSetRBT <> Black constr
R5450:5452 Coq.MSets.MSetRBT <> Red constr
R5457:5458 Coq.MSets.MSetRBT Ops Rd syndef
R5461:5468 Coq.MSets.MSetRBT <> append_l var
R5487:5489 Coq.MSets.MSetRBT <> Red constr
R5492:5496 Coq.MSets.MSetRBT <> Black constr
R5501:5502 Coq.MSets.MSetRBT Ops Rd syndef
R5511:5516 Coq.MSets.MSetRBT <> append def
R5521:5521 Coq.MSets.MSetRBT <> r var
def 5556:5558 Ops del
R5574:5574 Coq.MSets.MSetRBT <> t var
R5584:5587 Coq.MSets.MSetRBT Ops Leaf constr
R5592:5595 Coq.MSets.MSetRBT Ops Leaf constr
R5600:5603 Coq.MSets.MSetRBT Ops Node constr
R5625:5633 Coq.MSets.MSetRBT X compare defax
R5635:5635 Coq.MSets.MSetRBT <> x var
R5649:5650 Coq.Init.Datatypes <> Eq constr
R5655:5660 Coq.MSets.MSetRBT Ops append def
R5671:5672 Coq.Init.Datatypes <> Lt constr
R5714:5718 Coq.MSets.MSetRBT Ops lbalS def
R5721:5723 Coq.MSets.MSetRBT <> del def
R5725:5725 Coq.MSets.MSetRBT <> x var
R5746:5747 Coq.MSets.MSetRBT Ops Rd syndef
R5750:5752 Coq.MSets.MSetRBT <> del def
R5754:5754 Coq.MSets.MSetRBT <> x var
R5777:5778 Coq.Init.Datatypes <> Gt constr
R5820:5824 Coq.MSets.MSetRBT Ops rbalS def
R5831:5833 Coq.MSets.MSetRBT <> del def
R5835:5835 Coq.MSets.MSetRBT <> x var
R5852:5853 Coq.MSets.MSetRBT Ops Rd syndef
R5860:5862 Coq.MSets.MSetRBT <> del def
R5864:5864 Coq.MSets.MSetRBT <> x var
def 5903:5908 Ops remove
R5917:5925 Coq.MSets.MSetRBT Ops makeBlack def
R5928:5930 Coq.MSets.MSetRBT Ops del def
R5934:5934 Coq.MSets.MSetRBT <> t var
R5932:5932 Coq.MSets.MSetRBT <> x var
def 5984:5989 Ops delmin
R6003:6005 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R6000:6002 Coq.MSets.MSetRBT Ops elt def
R6006:6009 Coq.MSets.MSetRBT Ops tree ind
R6022:6022 Coq.MSets.MSetRBT <> l var
R6032:6035 Coq.MSets.MSetRBT Ops Leaf constr
R6040:6040 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6042:6042 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6044:6044 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6041:6041 Coq.MSets.MSetRBT <> x var
R6043:6043 Coq.MSets.MSetRBT <> r var
R6049:6052 Coq.MSets.MSetRBT Ops Node constr
R6086:6091 Coq.MSets.MSetRBT <> delmin def
R6127:6131 Coq.MSets.MSetRBT <> Black constr
R6136:6136 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6138:6139 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6152:6152 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6137:6137 Coq.MSets.MSetRBT <> k var
R6140:6144 Coq.MSets.MSetRBT Ops lbalS def
R6151:6151 Coq.MSets.MSetRBT <> r var
R6149:6149 Coq.MSets.MSetRBT <> x var
R6146:6147 Coq.MSets.MSetRBT <> l' var
R6159:6161 Coq.MSets.MSetRBT <> Red constr
R6166:6166 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6168:6169 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6179:6179 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6167:6167 Coq.MSets.MSetRBT <> k var
R6170:6171 Coq.MSets.MSetRBT Ops Rd syndef
R6178:6178 Coq.MSets.MSetRBT <> r var
R6176:6176 Coq.MSets.MSetRBT <> x var
R6173:6174 Coq.MSets.MSetRBT <> l' var
def 6206:6215 Ops remove_min
R6221:6226 Coq.Init.Datatypes <> option ind
R6232:6234 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R6229:6231 Coq.MSets.MSetRBT Ops elt def
R6235:6238 Coq.MSets.MSetRBT Ops tree ind
R6251:6251 Coq.MSets.MSetRBT <> t var
R6261:6264 Coq.MSets.MSetRBT Ops Leaf constr
R6269:6272 Coq.Init.Datatypes <> None constr
R6277:6280 Coq.MSets.MSetRBT Ops Node constr
R6309:6314 Coq.MSets.MSetRBT Ops delmin def
R6328:6331 Coq.Init.Datatypes <> Some constr
R6333:6333 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6335:6336 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6348:6348 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6334:6334 Coq.MSets.MSetRBT <> k var
R6337:6345 Coq.MSets.MSetRBT Ops makeBlack def
R6347:6347 Coq.MSets.MSetRBT <> t var
def 6499:6503 Ops bogus
R6511:6513 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R6507:6510 Coq.MSets.MSetRBT Ops tree ind
R6514:6517 Coq.Init.Datatypes <> list ind
R6519:6521 Coq.MSets.MSetRBT Ops elt def
R6526:6526 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6531:6532 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6536:6536 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6527:6530 Coq.MSets.MSetRBT Ops Leaf constr
R6533:6535 Coq.Init.Datatypes <> nil constr
syndef 6549:6557 Ops treeify_t
R6571:6574 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6579:6581 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R6575:6578 Coq.MSets.MSetRBT Ops tree ind
R6582:6585 Coq.Init.Datatypes <> list ind
R6587:6589 Coq.MSets.MSetRBT Ops elt def
R6563:6566 Coq.Init.Datatypes <> list ind
R6568:6570 Coq.MSets.MSetRBT Ops elt def
def 6605:6616 Ops treeify_zero
R6620:6628 Coq.MSets.MSetRBT Ops treeify_t syndef
R6645:6645 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6650:6650 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6654:6654 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6646:6649 Coq.MSets.MSetRBT Ops Leaf constr
R6651:6653 Coq.MSets.MSetRBT <> acc var
def 6669:6679 Ops treeify_one
R6683:6691 Coq.MSets.MSetRBT Ops treeify_t syndef
R6714:6716 Coq.MSets.MSetRBT <> acc var
R6727:6728 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6736:6736 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6751:6752 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6756:6756 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6737:6738 Coq.MSets.MSetRBT Ops Rd syndef
R6747:6750 Coq.MSets.MSetRBT Ops Leaf constr
R6740:6743 Coq.MSets.MSetRBT Ops Leaf constr
R6753:6755 Coq.MSets.MSetRBT <> acc var
R6766:6770 Coq.MSets.MSetRBT Ops bogus def
def 6790:6801 Ops treeify_cont
R6810:6818 Coq.MSets.MSetRBT Ops treeify_t syndef
R6823:6831 Coq.MSets.MSetRBT Ops treeify_t syndef
R6855:6855 Coq.MSets.MSetRBT <> f var
R6857:6859 Coq.MSets.MSetRBT <> acc var
R6869:6869 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6871:6872 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6879:6879 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6874:6875 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6893:6893 Coq.MSets.MSetRBT <> g var
R6895:6897 Coq.MSets.MSetRBT <> acc var
R6909:6909 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6911:6912 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6916:6916 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6921:6921 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6930:6931 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6935:6935 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R6922:6923 Coq.MSets.MSetRBT Ops Bk syndef
R6932:6934 Coq.MSets.MSetRBT <> acc var
R6952:6956 Coq.MSets.MSetRBT Ops bogus def
def 6974:6984 Ops treeify_aux
R6992:6995 Coq.Init.Datatypes <> bool ind
R7001:7008 Coq.Numbers.BinNums <> positive ind
R7013:7021 Coq.MSets.MSetRBT Ops treeify_t syndef
R7033:7033 Coq.MSets.MSetRBT <> n var
R7043:7044 Coq.Numbers.BinNums <> xH constr
R7052:7055 Coq.MSets.MSetRBT <> pred var
R7080:7090 Coq.MSets.MSetRBT Ops treeify_one def
R7062:7073 Coq.MSets.MSetRBT Ops treeify_zero def
R7095:7096 Coq.Numbers.BinNums <> xO constr
R7103:7114 Coq.MSets.MSetRBT Ops treeify_cont def
R7138:7148 Coq.MSets.MSetRBT <> treeify_aux def
R7155:7155 Coq.MSets.MSetRBT <> n var
R7150:7153 Coq.Init.Datatypes <> true constr
R7117:7127 Coq.MSets.MSetRBT <> treeify_aux def
R7134:7134 Coq.MSets.MSetRBT <> n var
R7129:7132 Coq.MSets.MSetRBT <> pred var
R7161:7162 Coq.Numbers.BinNums <> xI constr
R7169:7180 Coq.MSets.MSetRBT Ops treeify_cont def
R7205:7215 Coq.MSets.MSetRBT <> treeify_aux def
R7222:7222 Coq.MSets.MSetRBT <> n var
R7217:7220 Coq.MSets.MSetRBT <> pred var
R7183:7193 Coq.MSets.MSetRBT <> treeify_aux def
R7201:7201 Coq.MSets.MSetRBT <> n var
R7195:7199 Coq.Init.Datatypes <> false constr
def 7241:7251 Ops plength_aux
R7256:7259 Coq.Init.Datatypes <> list ind
R7261:7263 Coq.MSets.MSetRBT Ops elt def
R7268:7275 Coq.Numbers.BinNums <> positive ind
R7287:7287 Coq.MSets.MSetRBT <> l var
R7297:7299 Coq.Init.Datatypes <> nil constr
R7304:7304 Coq.MSets.MSetRBT <> p var
R7310:7311 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R7317:7327 Coq.MSets.MSetRBT <> plength_aux def
R7332:7339 Coq.PArith.BinPos Pos succ def
R7341:7341 Coq.MSets.MSetRBT <> p var
R7329:7329 Coq.MSets.MSetRBT <> l var
def 7361:7367 Ops plength
R7374:7384 Coq.MSets.MSetRBT Ops plength_aux def
R7386:7386 Coq.MSets.MSetRBT <> l var
def 7403:7409 Ops treeify
R7414:7417 Coq.Init.Datatypes <> list ind
R7419:7421 Coq.MSets.MSetRBT Ops elt def
R7428:7430 Coq.Init.Datatypes <> fst def
R7433:7443 Coq.MSets.MSetRBT Ops treeify_aux def
R7462:7462 Coq.MSets.MSetRBT <> l var
R7451:7457 Coq.MSets.MSetRBT Ops plength def
R7459:7459 Coq.MSets.MSetRBT <> l var
R7445:7448 Coq.Init.Datatypes <> true constr
def 7497:7506 Ops filter_aux
R7515:7518 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7519:7522 Coq.Init.Datatypes <> bool ind
R7512:7514 Coq.MSets.MSetRBT Ops elt def
R7541:7541 Coq.MSets.MSetRBT <> s var
R7551:7554 Coq.MSets.MSetRBT Ops Leaf constr
R7559:7561 Coq.MSets.MSetRBT <> acc var
R7566:7569 Coq.MSets.MSetRBT Ops Node constr
R7596:7605 Coq.MSets.MSetRBT <> filter_aux def
R7611:7613 Coq.MSets.MSetRBT <> acc var
R7607:7607 Coq.MSets.MSetRBT <> f var
R7624:7624 Coq.MSets.MSetRBT <> f var
R7665:7674 Coq.MSets.MSetRBT <> filter_aux def
R7680:7682 Coq.MSets.MSetRBT <> acc var
R7676:7676 Coq.MSets.MSetRBT <> f var
R7633:7642 Coq.MSets.MSetRBT <> filter_aux def
R7650:7651 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R7652:7654 Coq.MSets.MSetRBT <> acc var
R7644:7644 Coq.MSets.MSetRBT <> f var
def 7702:7707 Ops filter
R7716:7719 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7720:7723 Coq.Init.Datatypes <> bool ind
R7713:7715 Coq.MSets.MSetRBT Ops elt def
R7730:7730 Coq.MSets.MSetRBT Ops t def
R7735:7735 Coq.MSets.MSetRBT Ops t def
R7741:7747 Coq.MSets.MSetRBT Ops treeify def
R7750:7759 Coq.MSets.MSetRBT Ops filter_aux def
R7765:7767 Coq.Init.Datatypes <> nil constr
R7763:7763 Coq.MSets.MSetRBT <> s var
R7761:7761 Coq.MSets.MSetRBT <> f var
def 7781:7793 Ops partition_aux
R7802:7805 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7806:7809 Coq.Init.Datatypes <> bool ind
R7799:7801 Coq.MSets.MSetRBT Ops elt def
R7834:7834 Coq.MSets.MSetRBT <> s var
R7844:7847 Coq.MSets.MSetRBT Ops Leaf constr
R7852:7852 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7857:7857 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7862:7862 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R7853:7856 Coq.MSets.MSetRBT <> acc1 var
R7858:7861 Coq.MSets.MSetRBT <> acc2 var
R7867:7870 Coq.MSets.MSetRBT Ops Node constr
R7908:7920 Coq.MSets.MSetRBT <> partition_aux def
R7932:7935 Coq.MSets.MSetRBT <> acc2 var
R7927:7930 Coq.MSets.MSetRBT <> acc1 var
R7922:7922 Coq.MSets.MSetRBT <> f var
R7946:7946 Coq.MSets.MSetRBT <> f var
R7997:8009 Coq.MSets.MSetRBT <> partition_aux def
R8023:8024 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8025:8028 Coq.MSets.MSetRBT <> acc2 var
R8016:8019 Coq.MSets.MSetRBT <> acc1 var
R8011:8011 Coq.MSets.MSetRBT <> f var
R7955:7967 Coq.MSets.MSetRBT <> partition_aux def
R7984:7987 Coq.MSets.MSetRBT <> acc2 var
R7976:7977 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R7978:7981 Coq.MSets.MSetRBT <> acc1 var
R7969:7969 Coq.MSets.MSetRBT <> f var
def 8049:8057 Ops partition
R8066:8069 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8070:8073 Coq.Init.Datatypes <> bool ind
R8063:8065 Coq.MSets.MSetRBT Ops elt def
R8079:8079 Coq.MSets.MSetRBT Ops t def
R8085:8085 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R8084:8084 Coq.MSets.MSetRBT Ops t def
R8086:8086 Coq.MSets.MSetRBT Ops t def
R8108:8120 Coq.MSets.MSetRBT Ops partition_aux def
R8130:8132 Coq.Init.Datatypes <> nil constr
R8126:8128 Coq.Init.Datatypes <> nil constr
R8124:8124 Coq.MSets.MSetRBT <> s var
R8122:8122 Coq.MSets.MSetRBT <> f var
R8139:8139 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8150:8151 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8162:8162 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R8140:8146 Coq.MSets.MSetRBT Ops treeify def
R8148:8149 Coq.MSets.MSetRBT <> ok var
R8152:8158 Coq.MSets.MSetRBT Ops treeify def
R8160:8161 Coq.MSets.MSetRBT <> ko var
def 8290:8299 Ops union_list
R8314:8317 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8326:8329 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8330:8333 Coq.Init.Datatypes <> list ind
R8335:8337 Coq.MSets.MSetRBT Ops elt def
R8318:8321 Coq.Init.Datatypes <> list ind
R8323:8325 Coq.MSets.MSetRBT Ops elt def
R8306:8309 Coq.Init.Datatypes <> list ind
R8311:8313 Coq.MSets.MSetRBT Ops elt def
R8349:8350 Coq.MSets.MSetRBT <> l1 var
R8360:8362 Coq.Init.Datatypes <> nil constr
R8368:8377 Coq.Lists.List <> rev_append def
R8385:8386 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8431:8432 Coq.MSets.MSetRBT <> l2 var
R8445:8447 Coq.Init.Datatypes <> nil constr
R8452:8461 Coq.Lists.List <> rev_append def
R8466:8468 Coq.MSets.MSetRBT <> acc var
R8463:8464 Coq.MSets.MSetRBT <> l1 var
R8477:8478 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8499:8507 Coq.MSets.MSetRBT X compare defax
R8527:8528 Coq.Init.Datatypes <> Eq constr
R8533:8542 Coq.MSets.MSetRBT <> union_list def
R8554:8555 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8556:8558 Coq.MSets.MSetRBT <> acc var
R8570:8571 Coq.Init.Datatypes <> Lt constr
R8576:8583 Coq.MSets.MSetRBT <> union_l1 var
R8591:8592 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8593:8595 Coq.MSets.MSetRBT <> acc var
R8607:8608 Coq.Init.Datatypes <> Gt constr
R8613:8622 Coq.MSets.MSetRBT <> union_list def
R8633:8634 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8635:8637 Coq.MSets.MSetRBT <> acc var
R8628:8629 Coq.MSets.MSetRBT <> l2 var
def 8677:8688 Ops linear_union
R8701:8707 Coq.MSets.MSetRBT Ops treeify def
R8710:8719 Coq.MSets.MSetRBT Ops union_list def
R8757:8759 Coq.Init.Datatypes <> nil constr
R8740:8751 Coq.MSets.MSetRBT Ops rev_elements def
R8753:8754 Coq.MSets.MSetRBT <> s2 var
R8722:8733 Coq.MSets.MSetRBT Ops rev_elements def
R8735:8736 Coq.MSets.MSetRBT <> s1 var
def 8773:8782 Ops inter_list
R8797:8800 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8809:8812 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8813:8816 Coq.Init.Datatypes <> list ind
R8818:8820 Coq.MSets.MSetRBT Ops elt def
R8801:8804 Coq.Init.Datatypes <> list ind
R8806:8808 Coq.MSets.MSetRBT Ops elt def
R8789:8792 Coq.Init.Datatypes <> list ind
R8794:8796 Coq.MSets.MSetRBT Ops elt def
R8832:8833 Coq.MSets.MSetRBT <> l1 var
R8843:8845 Coq.Init.Datatypes <> nil constr
R8863:8865 Coq.MSets.MSetRBT <> acc var
R8871:8872 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8917:8918 Coq.MSets.MSetRBT <> l2 var
R8931:8933 Coq.Init.Datatypes <> nil constr
R8938:8940 Coq.MSets.MSetRBT <> acc var
R8949:8950 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R8971:8979 Coq.MSets.MSetRBT X compare defax
R8999:9000 Coq.Init.Datatypes <> Eq constr
R9005:9014 Coq.MSets.MSetRBT <> inter_list def
R9026:9027 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9028:9030 Coq.MSets.MSetRBT <> acc var
R9042:9043 Coq.Init.Datatypes <> Lt constr
R9048:9055 Coq.MSets.MSetRBT <> inter_l1 var
R9061:9063 Coq.MSets.MSetRBT <> acc var
R9074:9075 Coq.Init.Datatypes <> Gt constr
R9080:9089 Coq.MSets.MSetRBT <> inter_list def
R9098:9100 Coq.MSets.MSetRBT <> acc var
R9095:9096 Coq.MSets.MSetRBT <> l2 var
def 9139:9150 Ops linear_inter
R9163:9169 Coq.MSets.MSetRBT Ops treeify def
R9172:9181 Coq.MSets.MSetRBT Ops inter_list def
R9219:9221 Coq.Init.Datatypes <> nil constr
R9202:9213 Coq.MSets.MSetRBT Ops rev_elements def
R9215:9216 Coq.MSets.MSetRBT <> s2 var
R9184:9195 Coq.MSets.MSetRBT Ops rev_elements def
R9197:9198 Coq.MSets.MSetRBT <> s1 var
def 9235:9243 Ops diff_list
R9258:9261 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9270:9273 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9274:9277 Coq.Init.Datatypes <> list ind
R9279:9281 Coq.MSets.MSetRBT Ops elt def
R9262:9265 Coq.Init.Datatypes <> list ind
R9267:9269 Coq.MSets.MSetRBT Ops elt def
R9250:9253 Coq.Init.Datatypes <> list ind
R9255:9257 Coq.MSets.MSetRBT Ops elt def
R9293:9294 Coq.MSets.MSetRBT <> l1 var
R9304:9306 Coq.Init.Datatypes <> nil constr
R9324:9326 Coq.MSets.MSetRBT <> acc var
R9332:9333 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9377:9378 Coq.MSets.MSetRBT <> l2 var
R9391:9393 Coq.Init.Datatypes <> nil constr
R9398:9407 Coq.Lists.List <> rev_append def
R9412:9414 Coq.MSets.MSetRBT <> acc var
R9409:9410 Coq.MSets.MSetRBT <> l1 var
R9423:9424 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9445:9453 Coq.MSets.MSetRBT X compare defax
R9473:9474 Coq.Init.Datatypes <> Eq constr
R9479:9487 Coq.MSets.MSetRBT <> diff_list def
R9497:9499 Coq.MSets.MSetRBT <> acc var
R9510:9511 Coq.Init.Datatypes <> Lt constr
R9516:9522 Coq.MSets.MSetRBT <> diff_l1 var
R9528:9530 Coq.MSets.MSetRBT <> acc var
R9541:9542 Coq.Init.Datatypes <> Gt constr
R9547:9555 Coq.MSets.MSetRBT <> diff_list def
R9566:9567 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R9568:9570 Coq.MSets.MSetRBT <> acc var
R9561:9562 Coq.MSets.MSetRBT <> l2 var
def 9610:9620 Ops linear_diff
R9633:9639 Coq.MSets.MSetRBT Ops treeify def
R9642:9650 Coq.MSets.MSetRBT Ops diff_list def
R9688:9690 Coq.Init.Datatypes <> nil constr
R9671:9682 Coq.MSets.MSetRBT Ops rev_elements def
R9684:9685 Coq.MSets.MSetRBT <> s2 var
R9653:9664 Coq.MSets.MSetRBT Ops rev_elements def
R9666:9667 Coq.MSets.MSetRBT <> s1 var
def 9961:9968 Ops skip_red
R9982:9982 Coq.MSets.MSetRBT <> t var
R10016:10016 Coq.MSets.MSetRBT <> t var
def 10036:10045 Ops skip_black
R10059:10066 Coq.MSets.MSetRBT Ops skip_red def
R10068:10068 Coq.MSets.MSetRBT <> t var
def 10122:10135 Ops compare_height
R10153:10156 Coq.MSets.MSetRBT Ops tree ind
R10161:10170 Coq.Init.Datatypes <> comparison ind
R10222:10229 Coq.MSets.MSetRBT Ops skip_red def
R10231:10233 Coq.MSets.MSetRBT <> s2x var
R10209:10216 Coq.MSets.MSetRBT Ops skip_red def
R10218:10219 Coq.MSets.MSetRBT <> s2 var
R10196:10203 Coq.MSets.MSetRBT Ops skip_red def
R10205:10206 Coq.MSets.MSetRBT <> s1 var
R10182:10189 Coq.MSets.MSetRBT Ops skip_red def
R10191:10193 Coq.MSets.MSetRBT <> s1x var
R10243:10246 Coq.MSets.MSetRBT Ops Node constr
R10260:10263 Coq.MSets.MSetRBT Ops Node constr
R10276:10279 Coq.MSets.MSetRBT Ops Node constr
R10292:10295 Coq.MSets.MSetRBT Ops Node constr
R10314:10327 Coq.MSets.MSetRBT <> compare_height def
R10356:10365 Coq.MSets.MSetRBT Ops skip_black def
R10330:10339 Coq.MSets.MSetRBT Ops skip_black def
R10379:10382 Coq.MSets.MSetRBT Ops Leaf constr
R10388:10391 Coq.MSets.MSetRBT Ops Node constr
R10404:10405 Coq.Init.Datatypes <> Lt constr
R10410:10413 Coq.MSets.MSetRBT Ops Node constr
R10427:10430 Coq.MSets.MSetRBT Ops Leaf constr
R10438:10439 Coq.Init.Datatypes <> Gt constr
R10444:10447 Coq.MSets.MSetRBT Ops Node constr
R10461:10464 Coq.MSets.MSetRBT Ops Node constr
R10477:10480 Coq.MSets.MSetRBT Ops Node constr
R10493:10496 Coq.MSets.MSetRBT Ops Leaf constr
R10504:10517 Coq.MSets.MSetRBT <> compare_height def
R10545:10548 Coq.MSets.MSetRBT Ops Leaf constr
R10520:10529 Coq.MSets.MSetRBT Ops skip_black def
R10553:10556 Coq.MSets.MSetRBT Ops Leaf constr
R10559:10562 Coq.MSets.MSetRBT Ops Node constr
R10575:10578 Coq.MSets.MSetRBT Ops Node constr
R10591:10594 Coq.MSets.MSetRBT Ops Node constr
R10613:10626 Coq.MSets.MSetRBT <> compare_height def
R10644:10653 Coq.MSets.MSetRBT Ops skip_black def
R10628:10631 Coq.MSets.MSetRBT Ops Leaf constr
R10678:10679 Coq.Init.Datatypes <> Eq constr
def 10884:10888 Ops union
R10898:10898 Coq.MSets.MSetRBT Ops t def
R10903:10903 Coq.MSets.MSetRBT Ops t def
R10915:10928 Coq.MSets.MSetRBT Ops compare_height def
R10939:10940 Coq.MSets.MSetRBT <> t2 var
R10936:10937 Coq.MSets.MSetRBT <> t2 var
R10933:10934 Coq.MSets.MSetRBT <> t1 var
R10930:10931 Coq.MSets.MSetRBT <> t1 var
R10950:10951 Coq.Init.Datatypes <> Lt constr
R10956:10959 Coq.MSets.MSetRBT Ops fold def
R10968:10969 Coq.MSets.MSetRBT <> t2 var
R10965:10966 Coq.MSets.MSetRBT <> t1 var
R10961:10963 Coq.MSets.MSetRBT Ops add def
R10974:10975 Coq.Init.Datatypes <> Gt constr
R10980:10983 Coq.MSets.MSetRBT Ops fold def
R10992:10993 Coq.MSets.MSetRBT <> t1 var
R10989:10990 Coq.MSets.MSetRBT <> t2 var
R10985:10987 Coq.MSets.MSetRBT Ops add def
R10998:10999 Coq.Init.Datatypes <> Eq constr
R11004:11015 Coq.MSets.MSetRBT Ops linear_union def
R11020:11021 Coq.MSets.MSetRBT <> t2 var
R11017:11018 Coq.MSets.MSetRBT <> t1 var
def 11041:11044 Ops diff
R11054:11054 Coq.MSets.MSetRBT Ops t def
R11059:11059 Coq.MSets.MSetRBT Ops t def
R11071:11084 Coq.MSets.MSetRBT Ops compare_height def
R11095:11096 Coq.MSets.MSetRBT <> t2 var
R11092:11093 Coq.MSets.MSetRBT <> t2 var
R11089:11090 Coq.MSets.MSetRBT <> t1 var
R11086:11087 Coq.MSets.MSetRBT <> t1 var
R11106:11107 Coq.Init.Datatypes <> Lt constr
R11112:11117 Coq.MSets.MSetRBT Ops filter def
R11146:11147 Coq.MSets.MSetRBT <> t1 var
R11129:11132 Coq.Init.Datatypes <> negb def
R11135:11137 Coq.MSets.MSetRBT Ops mem def
R11141:11142 Coq.MSets.MSetRBT <> t2 var
R11139:11139 Coq.MSets.MSetRBT <> k var
R11152:11153 Coq.Init.Datatypes <> Gt constr
R11158:11161 Coq.MSets.MSetRBT Ops fold def
R11173:11174 Coq.MSets.MSetRBT <> t1 var
R11170:11171 Coq.MSets.MSetRBT <> t2 var
R11163:11168 Coq.MSets.MSetRBT Ops remove def
R11179:11180 Coq.Init.Datatypes <> Eq constr
R11185:11195 Coq.MSets.MSetRBT Ops linear_diff def
R11200:11201 Coq.MSets.MSetRBT <> t2 var
R11197:11198 Coq.MSets.MSetRBT <> t1 var
def 11221:11225 Ops inter
R11235:11235 Coq.MSets.MSetRBT Ops t def
R11240:11240 Coq.MSets.MSetRBT Ops t def
R11252:11265 Coq.MSets.MSetRBT Ops compare_height def
R11276:11277 Coq.MSets.MSetRBT <> t2 var
R11273:11274 Coq.MSets.MSetRBT <> t2 var
R11270:11271 Coq.MSets.MSetRBT <> t1 var
R11267:11268 Coq.MSets.MSetRBT <> t1 var
R11287:11288 Coq.Init.Datatypes <> Lt constr
R11293:11298 Coq.MSets.MSetRBT Ops filter def
R11320:11321 Coq.MSets.MSetRBT <> t1 var
R11310:11312 Coq.MSets.MSetRBT Ops mem def
R11316:11317 Coq.MSets.MSetRBT <> t2 var
R11314:11314 Coq.MSets.MSetRBT <> k var
R11326:11327 Coq.Init.Datatypes <> Gt constr
R11332:11337 Coq.MSets.MSetRBT Ops filter def
R11359:11360 Coq.MSets.MSetRBT <> t2 var
R11349:11351 Coq.MSets.MSetRBT Ops mem def
R11355:11356 Coq.MSets.MSetRBT <> t1 var
R11353:11353 Coq.MSets.MSetRBT <> k var
R11365:11366 Coq.Init.Datatypes <> Eq constr
R11371:11382 Coq.MSets.MSetRBT Ops linear_inter def
R11387:11388 Coq.MSets.MSetRBT <> t2 var
R11384:11385 Coq.MSets.MSetRBT <> t1 var
R11401:11403 Coq.MSets.MSetRBT Ops <> mod
R11494:11511 Coq.Structures.Orders OrderedType <> mod
R11517:11537 Coq.MSets.MSetInterface RawSets <> mod
R11539:11539 Coq.MSets.MSetRBT X <> modtype
modtype 11483:11489 <> MakeRaw
R11550:11552 Coq.MSets.MSetRBT Ops <> modtype
R11554:11554 Coq.MSets.MSetRBT X <> modtype
R11692:11708 Coq.MSets.MSetGenTree Props <> mod
R11710:11710 Coq.MSets.MSetRBT X <> modtype
R11712:11716 Coq.MSets.MSetRBT Color <> modtype
syndef 11735:11736 MakeRaw Rd
R11742:11745 Coq.MSets.MSetRBT MakeRaw Node constr
R11747:11749 Coq.MSets.MSetRBT <> Red constr
syndef 11768:11769 MakeRaw Bk
R11775:11778 Coq.MSets.MSetRBT MakeRaw Node constr
R11780:11784 Coq.MSets.MSetRBT <> Black constr
R11846:11847 Coq.MSets.MSetRBT MakeRaw In def
R11849:11855 Coq.MSets.MSetRBT MakeRaw lt_tree def
R11857:11863 Coq.MSets.MSetRBT MakeRaw gt_tree def
R11865:11866 Coq.MSets.MSetRBT MakeRaw Ok class
R11900:11902 Coq.MSets.MSetRBT <> InT ind
R11904:11906 Coq.MSets.MSetRBT <> bst ind
prf 12209:12222 MakeRaw singleton_spec
R12249:12253 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12230:12232 Coq.MSets.MSetRBT MakeRaw InT ind
R12237:12245 Coq.MSets.MSetRBT MakeRaw singleton def
R12247:12247 Coq.MSets.MSetRBT <> x var
R12234:12234 Coq.MSets.MSetRBT <> y var
R12254:12257 Coq.MSets.MSetRBT X eq defax
R12261:12261 Coq.MSets.MSetRBT <> x var
R12259:12259 Coq.MSets.MSetRBT <> y var
R12279:12287 Coq.MSets.MSetRBT MakeRaw singleton def
inst 12319:12330 MakeRaw singleton_ok
R12336:12337 Coq.MSets.MSetRBT MakeRaw Ok class
R12340:12348 Coq.MSets.MSetRBT MakeRaw singleton def
R12350:12350 Coq.MSets.MSetRBT <> x var
R12369:12377 Coq.MSets.MSetRBT MakeRaw singleton def
prf 12428:12441 MakeRaw makeBlack_spec
R12468:12472 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12449:12451 Coq.MSets.MSetRBT MakeRaw InT ind
R12456:12464 Coq.MSets.MSetRBT MakeRaw makeBlack def
R12466:12466 Coq.MSets.MSetRBT <> s var
R12453:12453 Coq.MSets.MSetRBT <> x var
R12473:12475 Coq.MSets.MSetRBT MakeRaw InT ind
R12479:12479 Coq.MSets.MSetRBT <> s var
R12477:12477 Coq.MSets.MSetRBT <> x var
prf 12535:12546 MakeRaw makeRed_spec
R12571:12575 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12554:12556 Coq.MSets.MSetRBT MakeRaw InT ind
R12561:12567 Coq.MSets.MSetRBT MakeRaw makeRed def
R12569:12569 Coq.MSets.MSetRBT <> s var
R12558:12558 Coq.MSets.MSetRBT <> x var
R12576:12578 Coq.MSets.MSetRBT MakeRaw InT ind
R12582:12582 Coq.MSets.MSetRBT <> s var
R12580:12580 Coq.MSets.MSetRBT <> x var
inst 12641:12652 MakeRaw makeBlack_ok
R12658:12659 Coq.MSets.MSetRBT MakeRaw Ok class
R12661:12661 Coq.MSets.MSetRBT <> s var
R12666:12667 Coq.MSets.MSetRBT MakeRaw Ok class
R12670:12678 Coq.MSets.MSetRBT MakeRaw makeBlack def
R12680:12680 Coq.MSets.MSetRBT <> s var
inst 12730:12739 MakeRaw makeRed_ok
R12745:12746 Coq.MSets.MSetRBT MakeRaw Ok class
R12748:12748 Coq.MSets.MSetRBT <> s var
R12753:12754 Coq.MSets.MSetRBT MakeRaw Ok class
R12757:12763 Coq.MSets.MSetRBT MakeRaw makeRed def
R12765:12765 Coq.MSets.MSetRBT <> s var
def 12883:12889 MakeRaw isblack
R12903:12903 Coq.MSets.MSetRBT <> t var
R12922:12925 Coq.Init.Logic <> True ind
R12934:12938 Coq.Init.Logic <> False ind
def 12957:12964 MakeRaw notblack
R12978:12978 Coq.MSets.MSetRBT <> t var
R12997:13001 Coq.Init.Logic <> False ind
R13010:13013 Coq.Init.Logic <> True ind
def 13032:13037 MakeRaw notred
R13051:13051 Coq.MSets.MSetRBT <> t var
R13070:13074 Coq.Init.Logic <> False ind
R13083:13086 Coq.Init.Logic <> True ind
def 13105:13109 MakeRaw rcase
R13123:13123 Coq.MSets.MSetRBT <> A var
R13135:13135 Coq.MSets.MSetRBT <> t var
R13157:13157 Coq.MSets.MSetRBT <> f var
R13173:13173 Coq.MSets.MSetRBT <> g var
R13175:13175 Coq.MSets.MSetRBT <> t var
ind 13194:13198 MakeRaw rspec
constr 13234:13237 MakeRaw rred
constr 13281:13285 MakeRaw relse
R13214:13217 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13219:13222 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13210:13213 Coq.MSets.MSetRBT MakeRaw tree ind
R13214:13217 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13219:13222 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13210:13213 Coq.MSets.MSetRBT MakeRaw tree ind
R13247:13251 Coq.MSets.MSetRBT <> rspec ind
R13269:13269 Coq.MSets.MSetRBT <> f var
R13275:13275 Coq.MSets.MSetRBT <> b var
R13273:13273 Coq.MSets.MSetRBT <> x var
R13271:13271 Coq.MSets.MSetRBT <> a var
R13258:13259 Coq.MSets.MSetRBT MakeRaw Rd syndef
R13265:13265 Coq.MSets.MSetRBT <> b var
R13263:13263 Coq.MSets.MSetRBT <> x var
R13261:13261 Coq.MSets.MSetRBT <> a var
R13255:13255 Coq.MSets.MSetRBT <> g var
R13253:13253 Coq.MSets.MSetRBT <> f var
R13247:13251 Coq.MSets.MSetRBT <> A var
R13299:13302 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13303:13307 Coq.MSets.MSetRBT <> rspec ind
R13316:13316 Coq.MSets.MSetRBT <> g var
R13318:13318 Coq.MSets.MSetRBT <> t var
R13313:13313 Coq.MSets.MSetRBT <> t var
R13311:13311 Coq.MSets.MSetRBT <> g var
R13309:13309 Coq.MSets.MSetRBT <> f var
R13303:13307 Coq.MSets.MSetRBT <> A var
R13291:13296 Coq.MSets.MSetRBT MakeRaw notred def
R13298:13298 Coq.MSets.MSetRBT <> t var
prf 13328:13333 MakeRaw rmatch
R13347:13351 Coq.MSets.MSetRBT MakeRaw rspec ind
R13367:13371 Coq.MSets.MSetRBT MakeRaw rcase def
R13377:13377 Coq.MSets.MSetRBT <> t var
R13375:13375 Coq.MSets.MSetRBT <> g var
R13373:13373 Coq.MSets.MSetRBT <> f var
R13364:13364 Coq.MSets.MSetRBT <> t var
R13362:13362 Coq.MSets.MSetRBT <> g var
R13360:13360 Coq.MSets.MSetRBT <> f var
R13357:13357 Coq.MSets.MSetRBT <> A var
def 13457:13462 MakeRaw rrcase
R13476:13476 Coq.MSets.MSetRBT <> A var
R13488:13488 Coq.MSets.MSetRBT <> t var
R13519:13519 Coq.MSets.MSetRBT <> f var
R13555:13555 Coq.MSets.MSetRBT <> f var
R13575:13575 Coq.MSets.MSetRBT <> g var
R13577:13577 Coq.MSets.MSetRBT <> t var
syndef 13595:13603 MakeRaw notredred
R13609:13614 Coq.MSets.MSetRBT MakeRaw rrcase def
R13651:13654 Coq.Init.Logic <> True ind
R13634:13638 Coq.Init.Logic <> False ind
ind 13670:13675 MakeRaw rrspec
constr 13711:13716 MakeRaw rrleft
constr 13778:13784 MakeRaw rrright
constr 13846:13851 MakeRaw rrelse
R13691:13694 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13696:13699 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13687:13690 Coq.MSets.MSetRBT MakeRaw tree ind
R13691:13694 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13696:13699 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13687:13690 Coq.MSets.MSetRBT MakeRaw tree ind
R13730:13735 Coq.MSets.MSetRBT <> rrspec ind
R13762:13762 Coq.MSets.MSetRBT <> f var
R13772:13772 Coq.MSets.MSetRBT <> c var
R13770:13770 Coq.MSets.MSetRBT <> y var
R13768:13768 Coq.MSets.MSetRBT <> b var
R13766:13766 Coq.MSets.MSetRBT <> x var
R13764:13764 Coq.MSets.MSetRBT <> a var
R13742:13743 Coq.MSets.MSetRBT MakeRaw Rd syndef
R13758:13758 Coq.MSets.MSetRBT <> c var
R13756:13756 Coq.MSets.MSetRBT <> y var
R13746:13747 Coq.MSets.MSetRBT MakeRaw Rd syndef
R13753:13753 Coq.MSets.MSetRBT <> b var
R13751:13751 Coq.MSets.MSetRBT <> x var
R13749:13749 Coq.MSets.MSetRBT <> a var
R13739:13739 Coq.MSets.MSetRBT <> g var
R13737:13737 Coq.MSets.MSetRBT <> f var
R13730:13735 Coq.MSets.MSetRBT <> A var
R13798:13803 Coq.MSets.MSetRBT <> rrspec ind
R13830:13830 Coq.MSets.MSetRBT <> f var
R13840:13840 Coq.MSets.MSetRBT <> c var
R13838:13838 Coq.MSets.MSetRBT <> y var
R13836:13836 Coq.MSets.MSetRBT <> b var
R13834:13834 Coq.MSets.MSetRBT <> x var
R13832:13832 Coq.MSets.MSetRBT <> a var
R13810:13811 Coq.MSets.MSetRBT MakeRaw Rd syndef
R13818:13819 Coq.MSets.MSetRBT MakeRaw Rd syndef
R13825:13825 Coq.MSets.MSetRBT <> c var
R13823:13823 Coq.MSets.MSetRBT <> y var
R13821:13821 Coq.MSets.MSetRBT <> b var
R13815:13815 Coq.MSets.MSetRBT <> x var
R13813:13813 Coq.MSets.MSetRBT <> a var
R13807:13807 Coq.MSets.MSetRBT <> g var
R13805:13805 Coq.MSets.MSetRBT <> f var
R13798:13803 Coq.MSets.MSetRBT <> A var
R13868:13871 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13872:13877 Coq.MSets.MSetRBT <> rrspec ind
R13886:13886 Coq.MSets.MSetRBT <> g var
R13888:13888 Coq.MSets.MSetRBT <> t var
R13883:13883 Coq.MSets.MSetRBT <> t var
R13881:13881 Coq.MSets.MSetRBT <> g var
R13879:13879 Coq.MSets.MSetRBT <> f var
R13872:13877 Coq.MSets.MSetRBT <> A var
R13857:13865 Coq.MSets.MSetRBT MakeRaw notredred syndef
R13867:13867 Coq.MSets.MSetRBT <> t var
prf 13898:13904 MakeRaw rrmatch
R13918:13923 Coq.MSets.MSetRBT MakeRaw rrspec ind
R13939:13944 Coq.MSets.MSetRBT MakeRaw rrcase def
R13950:13950 Coq.MSets.MSetRBT <> t var
R13948:13948 Coq.MSets.MSetRBT <> g var
R13946:13946 Coq.MSets.MSetRBT <> f var
R13936:13936 Coq.MSets.MSetRBT <> t var
R13934:13934 Coq.MSets.MSetRBT <> g var
R13932:13932 Coq.MSets.MSetRBT <> f var
R13929:13929 Coq.MSets.MSetRBT <> A var
def 14104:14110 MakeRaw rrcase'
R14124:14124 Coq.MSets.MSetRBT <> A var
R14136:14136 Coq.MSets.MSetRBT <> t var
R14167:14167 Coq.MSets.MSetRBT <> f var
R14203:14203 Coq.MSets.MSetRBT <> f var
R14223:14223 Coq.MSets.MSetRBT <> g var
R14225:14225 Coq.MSets.MSetRBT <> t var
prf 14239:14246 MakeRaw rrmatch'
R14260:14265 Coq.MSets.MSetRBT MakeRaw rrspec ind
R14281:14287 Coq.MSets.MSetRBT MakeRaw rrcase' def
R14293:14293 Coq.MSets.MSetRBT <> t var
R14291:14291 Coq.MSets.MSetRBT <> g var
R14289:14289 Coq.MSets.MSetRBT <> f var
R14278:14278 Coq.MSets.MSetRBT <> t var
R14276:14276 Coq.MSets.MSetRBT <> g var
R14274:14274 Coq.MSets.MSetRBT <> f var
R14271:14271 Coq.MSets.MSetRBT <> A var
prf 14501:14510 MakeRaw lbal_match
R14521:14526 Coq.MSets.MSetRBT MakeRaw rrspec ind
R14609:14612 Coq.MSets.MSetRBT MakeRaw lbal def
R14618:14618 Coq.MSets.MSetRBT <> r var
R14616:14616 Coq.MSets.MSetRBT <> k var
R14614:14614 Coq.MSets.MSetRBT <> l var
R14603:14603 Coq.MSets.MSetRBT <> l var
R14590:14591 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14597:14597 Coq.MSets.MSetRBT <> r var
R14595:14595 Coq.MSets.MSetRBT <> k var
R14593:14593 Coq.MSets.MSetRBT <> l var
R14549:14550 Coq.MSets.MSetRBT MakeRaw Rd syndef
R14566:14567 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14573:14573 Coq.MSets.MSetRBT <> r var
R14571:14571 Coq.MSets.MSetRBT <> k var
R14569:14569 Coq.MSets.MSetRBT <> c var
R14563:14563 Coq.MSets.MSetRBT <> y var
R14553:14554 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14560:14560 Coq.MSets.MSetRBT <> b var
R14558:14558 Coq.MSets.MSetRBT <> x var
R14556:14556 Coq.MSets.MSetRBT <> a var
R14637:14643 Coq.MSets.MSetRBT MakeRaw rrmatch thm
R14637:14643 Coq.MSets.MSetRBT MakeRaw rrmatch thm
prf 14664:14673 MakeRaw rbal_match
R14684:14689 Coq.MSets.MSetRBT MakeRaw rrspec ind
R14772:14775 Coq.MSets.MSetRBT MakeRaw rbal def
R14781:14781 Coq.MSets.MSetRBT <> r var
R14779:14779 Coq.MSets.MSetRBT <> k var
R14777:14777 Coq.MSets.MSetRBT <> l var
R14766:14766 Coq.MSets.MSetRBT <> r var
R14753:14754 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14760:14760 Coq.MSets.MSetRBT <> r var
R14758:14758 Coq.MSets.MSetRBT <> k var
R14756:14756 Coq.MSets.MSetRBT <> l var
R14712:14713 Coq.MSets.MSetRBT MakeRaw Rd syndef
R14729:14730 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14736:14736 Coq.MSets.MSetRBT <> c var
R14734:14734 Coq.MSets.MSetRBT <> y var
R14732:14732 Coq.MSets.MSetRBT <> b var
R14726:14726 Coq.MSets.MSetRBT <> x var
R14716:14717 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14723:14723 Coq.MSets.MSetRBT <> a var
R14721:14721 Coq.MSets.MSetRBT <> k var
R14719:14719 Coq.MSets.MSetRBT <> l var
R14800:14806 Coq.MSets.MSetRBT MakeRaw rrmatch thm
R14800:14806 Coq.MSets.MSetRBT MakeRaw rrmatch thm
prf 14827:14837 MakeRaw rbal'_match
R14848:14853 Coq.MSets.MSetRBT MakeRaw rrspec ind
R14936:14940 Coq.MSets.MSetRBT MakeRaw rbal' def
R14946:14946 Coq.MSets.MSetRBT <> r var
R14944:14944 Coq.MSets.MSetRBT <> k var
R14942:14942 Coq.MSets.MSetRBT <> l var
R14930:14930 Coq.MSets.MSetRBT <> r var
R14917:14918 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14924:14924 Coq.MSets.MSetRBT <> r var
R14922:14922 Coq.MSets.MSetRBT <> k var
R14920:14920 Coq.MSets.MSetRBT <> l var
R14876:14877 Coq.MSets.MSetRBT MakeRaw Rd syndef
R14893:14894 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14900:14900 Coq.MSets.MSetRBT <> c var
R14898:14898 Coq.MSets.MSetRBT <> y var
R14896:14896 Coq.MSets.MSetRBT <> b var
R14890:14890 Coq.MSets.MSetRBT <> x var
R14880:14881 Coq.MSets.MSetRBT MakeRaw Bk syndef
R14887:14887 Coq.MSets.MSetRBT <> a var
R14885:14885 Coq.MSets.MSetRBT <> k var
R14883:14883 Coq.MSets.MSetRBT <> l var
R14965:14972 Coq.MSets.MSetRBT MakeRaw rrmatch' thm
R14965:14972 Coq.MSets.MSetRBT MakeRaw rrmatch' thm
prf 14993:15003 MakeRaw lbalS_match
R15014:15018 Coq.MSets.MSetRBT MakeRaw rspec ind
R15226:15230 Coq.MSets.MSetRBT MakeRaw lbalS def
R15236:15236 Coq.MSets.MSetRBT <> r var
R15234:15234 Coq.MSets.MSetRBT <> x var
R15232:15232 Coq.MSets.MSetRBT <> l var
R15221:15221 Coq.MSets.MSetRBT <> l var
R15077:15077 Coq.MSets.MSetRBT <> r var
R15102:15106 Coq.MSets.MSetRBT MakeRaw rbal' def
R15113:15114 Coq.MSets.MSetRBT MakeRaw Rd syndef
R15110:15110 Coq.MSets.MSetRBT <> x var
R15108:15108 Coq.MSets.MSetRBT <> l var
R15150:15151 Coq.MSets.MSetRBT MakeRaw Rd syndef
R15167:15171 Coq.MSets.MSetRBT MakeRaw rbal' def
R15178:15184 Coq.MSets.MSetRBT MakeRaw makeRed def
R15154:15155 Coq.MSets.MSetRBT MakeRaw Bk syndef
R15159:15159 Coq.MSets.MSetRBT <> x var
R15157:15157 Coq.MSets.MSetRBT <> l var
R15201:15202 Coq.MSets.MSetRBT MakeRaw Rd syndef
R15208:15208 Coq.MSets.MSetRBT <> r var
R15206:15206 Coq.MSets.MSetRBT <> x var
R15204:15204 Coq.MSets.MSetRBT <> l var
R15036:15037 Coq.MSets.MSetRBT MakeRaw Rd syndef
R15052:15052 Coq.MSets.MSetRBT <> r var
R15050:15050 Coq.MSets.MSetRBT <> x var
R15040:15041 Coq.MSets.MSetRBT MakeRaw Bk syndef
R15047:15047 Coq.MSets.MSetRBT <> b var
R15045:15045 Coq.MSets.MSetRBT <> y var
R15043:15043 Coq.MSets.MSetRBT <> a var
R15255:15260 Coq.MSets.MSetRBT MakeRaw rmatch thm
R15255:15260 Coq.MSets.MSetRBT MakeRaw rmatch thm
prf 15281:15291 MakeRaw rbalS_match
R15302:15306 Coq.MSets.MSetRBT MakeRaw rspec ind
R15512:15516 Coq.MSets.MSetRBT MakeRaw rbalS def
R15522:15522 Coq.MSets.MSetRBT <> r var
R15520:15520 Coq.MSets.MSetRBT <> x var
R15518:15518 Coq.MSets.MSetRBT <> l var
R15507:15507 Coq.MSets.MSetRBT <> r var
R15365:15365 Coq.MSets.MSetRBT <> l var
R15390:15393 Coq.MSets.MSetRBT MakeRaw lbal def
R15408:15408 Coq.MSets.MSetRBT <> r var
R15406:15406 Coq.MSets.MSetRBT <> x var
R15396:15397 Coq.MSets.MSetRBT MakeRaw Rd syndef
R15437:15438 Coq.MSets.MSetRBT MakeRaw Rd syndef
R15466:15467 Coq.MSets.MSetRBT MakeRaw Bk syndef
R15473:15473 Coq.MSets.MSetRBT <> r var
R15471:15471 Coq.MSets.MSetRBT <> x var
R15441:15444 Coq.MSets.MSetRBT MakeRaw lbal def
R15447:15453 Coq.MSets.MSetRBT MakeRaw makeRed def
R15487:15488 Coq.MSets.MSetRBT MakeRaw Rd syndef
R15494:15494 Coq.MSets.MSetRBT <> r var
R15492:15492 Coq.MSets.MSetRBT <> x var
R15490:15490 Coq.MSets.MSetRBT <> l var
R15324:15325 Coq.MSets.MSetRBT MakeRaw Rd syndef
R15332:15333 Coq.MSets.MSetRBT MakeRaw Bk syndef
R15339:15339 Coq.MSets.MSetRBT <> b var
R15337:15337 Coq.MSets.MSetRBT <> y var
R15335:15335 Coq.MSets.MSetRBT <> a var
R15329:15329 Coq.MSets.MSetRBT <> x var
R15327:15327 Coq.MSets.MSetRBT <> l var
R15541:15546 Coq.MSets.MSetRBT MakeRaw rmatch thm
R15541:15546 Coq.MSets.MSetRBT MakeRaw rmatch thm
prf 15603:15611 MakeRaw lbal_spec
R15644:15648 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R15626:15628 Coq.MSets.MSetRBT MakeRaw InT ind
R15633:15636 Coq.MSets.MSetRBT MakeRaw lbal def
R15642:15642 Coq.MSets.MSetRBT <> r var
R15640:15640 Coq.MSets.MSetRBT <> x var
R15638:15638 Coq.MSets.MSetRBT <> l var
R15630:15630 Coq.MSets.MSetRBT <> y var
R15657:15660 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R15649:15652 Coq.MSets.MSetRBT X eq defax
R15656:15656 Coq.MSets.MSetRBT <> x var
R15654:15654 Coq.MSets.MSetRBT <> y var
R15668:15671 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R15661:15663 Coq.MSets.MSetRBT MakeRaw InT ind
R15667:15667 Coq.MSets.MSetRBT <> l var
R15665:15665 Coq.MSets.MSetRBT <> y var
R15672:15674 Coq.MSets.MSetRBT MakeRaw InT ind
R15678:15678 Coq.MSets.MSetRBT <> r var
R15676:15676 Coq.MSets.MSetRBT <> y var
R15694:15703 Coq.MSets.MSetRBT MakeRaw lbal_match thm
R15694:15703 Coq.MSets.MSetRBT MakeRaw lbal_match thm
inst 15735:15741 MakeRaw lbal_ok
R15751:15752 Coq.MSets.MSetRBT MakeRaw Ok class
R15754:15754 Coq.MSets.MSetRBT <> l var
R15757:15758 Coq.MSets.MSetRBT MakeRaw Ok class
R15760:15760 Coq.MSets.MSetRBT <> r var
R15763:15769 Coq.MSets.MSetRBT MakeRaw lt_tree def
R15773:15773 Coq.MSets.MSetRBT <> l var
R15771:15771 Coq.MSets.MSetRBT <> x var
R15776:15782 Coq.MSets.MSetRBT MakeRaw gt_tree def
R15786:15786 Coq.MSets.MSetRBT <> r var
R15784:15784 Coq.MSets.MSetRBT <> x var
R15792:15793 Coq.MSets.MSetRBT MakeRaw Ok class
R15796:15799 Coq.MSets.MSetRBT MakeRaw lbal def
R15805:15805 Coq.MSets.MSetRBT <> r var
R15803:15803 Coq.MSets.MSetRBT <> x var
R15801:15801 Coq.MSets.MSetRBT <> l var
R15827:15836 Coq.MSets.MSetRBT MakeRaw lbal_match thm
R15827:15836 Coq.MSets.MSetRBT MakeRaw lbal_match thm
prf 15862:15870 MakeRaw rbal_spec
R15903:15907 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R15885:15887 Coq.MSets.MSetRBT MakeRaw InT ind
R15892:15895 Coq.MSets.MSetRBT MakeRaw rbal def
R15901:15901 Coq.MSets.MSetRBT <> r var
R15899:15899 Coq.MSets.MSetRBT <> x var
R15897:15897 Coq.MSets.MSetRBT <> l var
R15889:15889 Coq.MSets.MSetRBT <> y var
R15916:15919 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R15908:15911 Coq.MSets.MSetRBT X eq defax
R15915:15915 Coq.MSets.MSetRBT <> x var
R15913:15913 Coq.MSets.MSetRBT <> y var
R15927:15930 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R15920:15922 Coq.MSets.MSetRBT MakeRaw InT ind
R15926:15926 Coq.MSets.MSetRBT <> l var
R15924:15924 Coq.MSets.MSetRBT <> y var
R15931:15933 Coq.MSets.MSetRBT MakeRaw InT ind
R15937:15937 Coq.MSets.MSetRBT <> r var
R15935:15935 Coq.MSets.MSetRBT <> y var
R15953:15962 Coq.MSets.MSetRBT MakeRaw rbal_match thm
R15953:15962 Coq.MSets.MSetRBT MakeRaw rbal_match thm
inst 15994:16000 MakeRaw rbal_ok
R16010:16011 Coq.MSets.MSetRBT MakeRaw Ok class
R16013:16013 Coq.MSets.MSetRBT <> l var
R16016:16017 Coq.MSets.MSetRBT MakeRaw Ok class
R16019:16019 Coq.MSets.MSetRBT <> r var
R16022:16028 Coq.MSets.MSetRBT MakeRaw lt_tree def
R16032:16032 Coq.MSets.MSetRBT <> l var
R16030:16030 Coq.MSets.MSetRBT <> x var
R16035:16041 Coq.MSets.MSetRBT MakeRaw gt_tree def
R16045:16045 Coq.MSets.MSetRBT <> r var
R16043:16043 Coq.MSets.MSetRBT <> x var
R16051:16052 Coq.MSets.MSetRBT MakeRaw Ok class
R16055:16058 Coq.MSets.MSetRBT MakeRaw rbal def
R16064:16064 Coq.MSets.MSetRBT <> r var
R16062:16062 Coq.MSets.MSetRBT <> x var
R16060:16060 Coq.MSets.MSetRBT <> l var
R16086:16095 Coq.MSets.MSetRBT MakeRaw rbal_match thm
R16086:16095 Coq.MSets.MSetRBT MakeRaw rbal_match thm
prf 16121:16130 MakeRaw rbal'_spec
R16164:16168 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R16145:16147 Coq.MSets.MSetRBT MakeRaw InT ind
R16152:16156 Coq.MSets.MSetRBT MakeRaw rbal' def
R16162:16162 Coq.MSets.MSetRBT <> r var
R16160:16160 Coq.MSets.MSetRBT <> x var
R16158:16158 Coq.MSets.MSetRBT <> l var
R16149:16149 Coq.MSets.MSetRBT <> y var
R16177:16180 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R16169:16172 Coq.MSets.MSetRBT X eq defax
R16176:16176 Coq.MSets.MSetRBT <> x var
R16174:16174 Coq.MSets.MSetRBT <> y var
R16188:16191 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R16181:16183 Coq.MSets.MSetRBT MakeRaw InT ind
R16187:16187 Coq.MSets.MSetRBT <> l var
R16185:16185 Coq.MSets.MSetRBT <> y var
R16192:16194 Coq.MSets.MSetRBT MakeRaw InT ind
R16198:16198 Coq.MSets.MSetRBT <> r var
R16196:16196 Coq.MSets.MSetRBT <> y var
R16214:16224 Coq.MSets.MSetRBT MakeRaw rbal'_match thm
R16214:16224 Coq.MSets.MSetRBT MakeRaw rbal'_match thm
inst 16256:16263 MakeRaw rbal'_ok
R16273:16274 Coq.MSets.MSetRBT MakeRaw Ok class
R16276:16276 Coq.MSets.MSetRBT <> l var
R16279:16280 Coq.MSets.MSetRBT MakeRaw Ok class
R16282:16282 Coq.MSets.MSetRBT <> r var
R16285:16291 Coq.MSets.MSetRBT MakeRaw lt_tree def
R16295:16295 Coq.MSets.MSetRBT <> l var
R16293:16293 Coq.MSets.MSetRBT <> x var
R16298:16304 Coq.MSets.MSetRBT MakeRaw gt_tree def
R16308:16308 Coq.MSets.MSetRBT <> r var
R16306:16306 Coq.MSets.MSetRBT <> x var
R16314:16315 Coq.MSets.MSetRBT MakeRaw Ok class
R16318:16322 Coq.MSets.MSetRBT MakeRaw rbal' def
R16328:16328 Coq.MSets.MSetRBT <> r var
R16326:16326 Coq.MSets.MSetRBT <> x var
R16324:16324 Coq.MSets.MSetRBT <> l var
R16350:16360 Coq.MSets.MSetRBT MakeRaw rbal'_match thm
R16350:16360 Coq.MSets.MSetRBT MakeRaw rbal'_match thm
R16393:16403 Coq.MSets.MSetRBT MakeRaw In_node_iff thm
R16405:16415 Coq.MSets.MSetRBT MakeRaw In_leaf_iff thm
R16418:16429 Coq.MSets.MSetRBT MakeRaw makeRed_spec thm
R16431:16444 Coq.MSets.MSetRBT MakeRaw makeBlack_spec thm
R16446:16454 Coq.MSets.MSetRBT MakeRaw lbal_spec thm
R16456:16464 Coq.MSets.MSetRBT MakeRaw rbal_spec thm
R16466:16475 Coq.MSets.MSetRBT MakeRaw rbal'_spec thm
prf 16703:16710 MakeRaw ins_spec
R16744:16748 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R16729:16731 Coq.MSets.MSetRBT MakeRaw InT ind
R16736:16738 Coq.MSets.MSetRBT MakeRaw ins def
R16742:16742 Coq.MSets.MSetRBT <> s var
R16740:16740 Coq.MSets.MSetRBT <> x var
R16733:16733 Coq.MSets.MSetRBT <> y var
R16757:16760 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R16749:16752 Coq.MSets.MSetRBT X eq defax
R16756:16756 Coq.MSets.MSetRBT <> x var
R16754:16754 Coq.MSets.MSetRBT <> y var
R16761:16763 Coq.MSets.MSetRBT MakeRaw InT ind
R16767:16767 Coq.MSets.MSetRBT <> s var
R16765:16765 Coq.MSets.MSetRBT <> y var
R16972:16979 Coq.MSets.MSetRBT MakeRaw ins_spec thm
inst 16997:17002 MakeRaw ins_ok
R17010:17011 Coq.MSets.MSetRBT MakeRaw Ok class
R17013:17013 Coq.MSets.MSetRBT <> s var
R17018:17019 Coq.MSets.MSetRBT MakeRaw Ok class
R17022:17024 Coq.MSets.MSetRBT MakeRaw ins def
R17028:17028 Coq.MSets.MSetRBT <> s var
R17026:17026 Coq.MSets.MSetRBT <> x var
R17093:17099 Coq.MSets.MSetRBT MakeRaw rbal_ok inst
R17076:17082 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R17076:17082 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R17093:17099 Coq.MSets.MSetRBT MakeRaw rbal_ok inst
R17076:17082 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R17076:17082 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R17093:17099 Coq.MSets.MSetRBT MakeRaw rbal_ok inst
R17076:17082 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R17093:17099 Coq.MSets.MSetRBT MakeRaw rbal_ok inst
prf 17165:17173 MakeRaw add_spec'
R17199:17203 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17184:17186 Coq.MSets.MSetRBT MakeRaw InT ind
R17191:17193 Coq.MSets.MSetRBT MakeRaw add def
R17197:17197 Coq.MSets.MSetRBT <> s var
R17195:17195 Coq.MSets.MSetRBT <> x var
R17188:17188 Coq.MSets.MSetRBT <> y var
R17212:17215 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R17204:17207 Coq.MSets.MSetRBT X eq defax
R17211:17211 Coq.MSets.MSetRBT <> x var
R17209:17209 Coq.MSets.MSetRBT <> y var
R17216:17218 Coq.MSets.MSetRBT MakeRaw InT ind
R17222:17222 Coq.MSets.MSetRBT <> s var
R17220:17220 Coq.MSets.MSetRBT <> y var
R17240:17242 Coq.MSets.MSetRBT MakeRaw add def
R17277:17285 Coq.MSets.MSetRBT MakeRaw add_spec' thm
prf 17300:17307 MakeRaw add_spec
R17317:17318 Coq.MSets.MSetRBT MakeRaw Ok class
R17320:17320 Coq.MSets.MSetRBT <> s var
R17341:17345 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17326:17328 Coq.MSets.MSetRBT MakeRaw InT ind
R17333:17335 Coq.MSets.MSetRBT MakeRaw add def
R17339:17339 Coq.MSets.MSetRBT <> s var
R17337:17337 Coq.MSets.MSetRBT <> x var
R17330:17330 Coq.MSets.MSetRBT <> y var
R17354:17357 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R17346:17349 Coq.MSets.MSetRBT X eq defax
R17353:17353 Coq.MSets.MSetRBT <> x var
R17351:17351 Coq.MSets.MSetRBT <> y var
R17358:17360 Coq.MSets.MSetRBT MakeRaw InT ind
R17364:17364 Coq.MSets.MSetRBT <> s var
R17362:17362 Coq.MSets.MSetRBT <> y var
R17381:17389 Coq.MSets.MSetRBT MakeRaw add_spec' thm
R17381:17389 Coq.MSets.MSetRBT MakeRaw add_spec' thm
inst 17407:17412 MakeRaw add_ok
R17420:17421 Coq.MSets.MSetRBT MakeRaw Ok class
R17423:17423 Coq.MSets.MSetRBT <> s var
R17428:17429 Coq.MSets.MSetRBT MakeRaw Ok class
R17432:17434 Coq.MSets.MSetRBT MakeRaw add def
R17438:17438 Coq.MSets.MSetRBT <> s var
R17436:17436 Coq.MSets.MSetRBT <> x var
R17457:17459 Coq.MSets.MSetRBT MakeRaw add def
prf 17517:17526 MakeRaw lbalS_spec
R17559:17563 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17540:17542 Coq.MSets.MSetRBT MakeRaw InT ind
R17547:17551 Coq.MSets.MSetRBT MakeRaw lbalS def
R17557:17557 Coq.MSets.MSetRBT <> r var
R17555:17555 Coq.MSets.MSetRBT <> x var
R17553:17553 Coq.MSets.MSetRBT <> l var
R17544:17544 Coq.MSets.MSetRBT <> y var
R17572:17575 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R17564:17567 Coq.MSets.MSetRBT X eq defax
R17571:17571 Coq.MSets.MSetRBT <> x var
R17569:17569 Coq.MSets.MSetRBT <> y var
R17583:17586 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R17576:17578 Coq.MSets.MSetRBT MakeRaw InT ind
R17582:17582 Coq.MSets.MSetRBT <> l var
R17580:17580 Coq.MSets.MSetRBT <> y var
R17587:17589 Coq.MSets.MSetRBT MakeRaw InT ind
R17593:17593 Coq.MSets.MSetRBT <> r var
R17591:17591 Coq.MSets.MSetRBT <> y var
R17609:17619 Coq.MSets.MSetRBT MakeRaw lbalS_match thm
R17609:17619 Coq.MSets.MSetRBT MakeRaw lbalS_match thm
inst 17825:17832 MakeRaw lbalS_ok
R17852:17853 Coq.MSets.MSetRBT MakeRaw Ok class
R17855:17855 Coq.MSets.MSetRBT <> l var
R17858:17859 Coq.MSets.MSetRBT MakeRaw Ok class
R17861:17861 Coq.MSets.MSetRBT <> r var
R17864:17870 Coq.MSets.MSetRBT MakeRaw lt_tree def
R17874:17874 Coq.MSets.MSetRBT <> l var
R17872:17872 Coq.MSets.MSetRBT <> x var
R17877:17883 Coq.MSets.MSetRBT MakeRaw gt_tree def
R17887:17887 Coq.MSets.MSetRBT <> r var
R17885:17885 Coq.MSets.MSetRBT <> x var
R17891:17892 Coq.MSets.MSetRBT MakeRaw Ok class
R17895:17899 Coq.MSets.MSetRBT MakeRaw lbalS def
R17905:17905 Coq.MSets.MSetRBT <> r var
R17903:17903 Coq.MSets.MSetRBT <> x var
R17901:17901 Coq.MSets.MSetRBT <> l var
R17922:17932 Coq.MSets.MSetRBT MakeRaw lbalS_match thm
R17922:17932 Coq.MSets.MSetRBT MakeRaw lbalS_match thm
R18058:18065 Coq.MSets.MSetRBT MakeRaw rbal'_ok inst
R18058:18065 Coq.MSets.MSetRBT MakeRaw rbal'_ok inst
R18212:18219 Coq.MSets.MSetRBT MakeRaw rbal'_ok inst
R18212:18219 Coq.MSets.MSetRBT MakeRaw rbal'_ok inst
prf 18238:18247 MakeRaw rbalS_spec
R18280:18284 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18261:18263 Coq.MSets.MSetRBT MakeRaw InT ind
R18268:18272 Coq.MSets.MSetRBT MakeRaw rbalS def
R18278:18278 Coq.MSets.MSetRBT <> r var
R18276:18276 Coq.MSets.MSetRBT <> x var
R18274:18274 Coq.MSets.MSetRBT <> l var
R18265:18265 Coq.MSets.MSetRBT <> y var
R18293:18296 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R18285:18288 Coq.MSets.MSetRBT X eq defax
R18292:18292 Coq.MSets.MSetRBT <> x var
R18290:18290 Coq.MSets.MSetRBT <> y var
R18304:18307 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R18297:18299 Coq.MSets.MSetRBT MakeRaw InT ind
R18303:18303 Coq.MSets.MSetRBT <> l var
R18301:18301 Coq.MSets.MSetRBT <> y var
R18308:18310 Coq.MSets.MSetRBT MakeRaw InT ind
R18314:18314 Coq.MSets.MSetRBT <> r var
R18312:18312 Coq.MSets.MSetRBT <> y var
R18330:18340 Coq.MSets.MSetRBT MakeRaw rbalS_match thm
R18330:18340 Coq.MSets.MSetRBT MakeRaw rbalS_match thm
inst 18560:18567 MakeRaw rbalS_ok
R18587:18588 Coq.MSets.MSetRBT MakeRaw Ok class
R18590:18590 Coq.MSets.MSetRBT <> l var
R18593:18594 Coq.MSets.MSetRBT MakeRaw Ok class
R18596:18596 Coq.MSets.MSetRBT <> r var
R18599:18605 Coq.MSets.MSetRBT MakeRaw lt_tree def
R18609:18609 Coq.MSets.MSetRBT <> l var
R18607:18607 Coq.MSets.MSetRBT <> x var
R18612:18618 Coq.MSets.MSetRBT MakeRaw gt_tree def
R18622:18622 Coq.MSets.MSetRBT <> r var
R18620:18620 Coq.MSets.MSetRBT <> x var
R18626:18627 Coq.MSets.MSetRBT MakeRaw Ok class
R18630:18634 Coq.MSets.MSetRBT MakeRaw rbalS def
R18640:18640 Coq.MSets.MSetRBT <> r var
R18638:18638 Coq.MSets.MSetRBT <> x var
R18636:18636 Coq.MSets.MSetRBT <> l var
R18657:18667 Coq.MSets.MSetRBT MakeRaw rbalS_match thm
R18657:18667 Coq.MSets.MSetRBT MakeRaw rbalS_match thm
R18793:18799 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R18793:18799 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R18937:18943 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R18937:18943 Coq.MSets.MSetRBT MakeRaw lbal_ok inst
R18969:18978 Coq.MSets.MSetRBT MakeRaw lbalS_spec thm
R18980:18989 Coq.MSets.MSetRBT MakeRaw rbalS_spec thm
R19250:19255 Coq.MSets.MSetRBT MakeRaw notred def
R19258:19259 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19307:19308 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19400:19405 Coq.MSets.MSetRBT MakeRaw append def
R19400:19405 Coq.MSets.MSetRBT MakeRaw append def
R19418:19419 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19422:19427 Coq.MSets.MSetRBT MakeRaw append def
R19430:19431 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19472:19477 Coq.MSets.MSetRBT MakeRaw notred def
R19480:19481 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19529:19530 Coq.MSets.MSetRBT MakeRaw Bk syndef
prf 19630:19644 MakeRaw append_rr_match
R19667:19671 Coq.MSets.MSetRBT MakeRaw rspec ind
R19776:19781 Coq.MSets.MSetRBT MakeRaw append def
R19798:19799 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19807:19808 Coq.MSets.MSetRBT <> rr var
R19804:19805 Coq.MSets.MSetRBT <> rx var
R19801:19802 Coq.MSets.MSetRBT <> rl var
R19784:19785 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19793:19794 Coq.MSets.MSetRBT <> lr var
R19790:19791 Coq.MSets.MSetRBT <> lx var
R19787:19788 Coq.MSets.MSetRBT <> ll var
R19759:19764 Coq.MSets.MSetRBT MakeRaw append def
R19769:19770 Coq.MSets.MSetRBT <> rl var
R19766:19767 Coq.MSets.MSetRBT <> lr var
R19733:19734 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19743:19744 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19751:19752 Coq.MSets.MSetRBT <> rr var
R19748:19749 Coq.MSets.MSetRBT <> rx var
R19746:19746 Coq.MSets.MSetRBT <> t var
R19739:19740 Coq.MSets.MSetRBT <> lx var
R19736:19737 Coq.MSets.MSetRBT <> ll var
R19689:19690 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19708:19709 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19716:19717 Coq.MSets.MSetRBT <> rr var
R19713:19714 Coq.MSets.MSetRBT <> rx var
R19711:19711 Coq.MSets.MSetRBT <> b var
R19705:19705 Coq.MSets.MSetRBT <> x var
R19693:19694 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19702:19702 Coq.MSets.MSetRBT <> a var
R19699:19700 Coq.MSets.MSetRBT <> lx var
R19696:19697 Coq.MSets.MSetRBT <> ll var
R19828:19833 Coq.MSets.MSetRBT MakeRaw rmatch thm
R19828:19833 Coq.MSets.MSetRBT MakeRaw rmatch thm
prf 19854:19868 MakeRaw append_bb_match
R19891:19895 Coq.MSets.MSetRBT MakeRaw rspec ind
R20003:20008 Coq.MSets.MSetRBT MakeRaw append def
R20025:20026 Coq.MSets.MSetRBT MakeRaw Bk syndef
R20034:20035 Coq.MSets.MSetRBT <> rr var
R20031:20032 Coq.MSets.MSetRBT <> rx var
R20028:20029 Coq.MSets.MSetRBT <> rl var
R20011:20012 Coq.MSets.MSetRBT MakeRaw Bk syndef
R20020:20021 Coq.MSets.MSetRBT <> lr var
R20017:20018 Coq.MSets.MSetRBT <> lx var
R20014:20015 Coq.MSets.MSetRBT <> ll var
R19986:19991 Coq.MSets.MSetRBT MakeRaw append def
R19996:19997 Coq.MSets.MSetRBT <> rl var
R19993:19994 Coq.MSets.MSetRBT <> lr var
R19957:19961 Coq.MSets.MSetRBT MakeRaw lbalS def
R19970:19971 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19978:19979 Coq.MSets.MSetRBT <> rr var
R19975:19976 Coq.MSets.MSetRBT <> rx var
R19973:19973 Coq.MSets.MSetRBT <> t var
R19966:19967 Coq.MSets.MSetRBT <> lx var
R19963:19964 Coq.MSets.MSetRBT <> ll var
R19913:19914 Coq.MSets.MSetRBT MakeRaw Rd syndef
R19932:19933 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19940:19941 Coq.MSets.MSetRBT <> rr var
R19937:19938 Coq.MSets.MSetRBT <> rx var
R19935:19935 Coq.MSets.MSetRBT <> b var
R19929:19929 Coq.MSets.MSetRBT <> x var
R19917:19918 Coq.MSets.MSetRBT MakeRaw Bk syndef
R19926:19926 Coq.MSets.MSetRBT <> a var
R19923:19924 Coq.MSets.MSetRBT <> lx var
R19920:19921 Coq.MSets.MSetRBT <> ll var
R20055:20060 Coq.MSets.MSetRBT MakeRaw rmatch thm
R20055:20060 Coq.MSets.MSetRBT MakeRaw rmatch thm
prf 20082:20092 MakeRaw append_spec
R20121:20125 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R20103:20105 Coq.MSets.MSetRBT MakeRaw InT ind
R20110:20115 Coq.MSets.MSetRBT MakeRaw append def
R20119:20119 Coq.MSets.MSetRBT <> r var
R20117:20117 Coq.MSets.MSetRBT <> l var
R20107:20107 Coq.MSets.MSetRBT <> x var
R20133:20136 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R20126:20128 Coq.MSets.MSetRBT MakeRaw InT ind
R20132:20132 Coq.MSets.MSetRBT <> l var
R20130:20130 Coq.MSets.MSetRBT <> x var
R20137:20139 Coq.MSets.MSetRBT MakeRaw InT ind
R20143:20143 Coq.MSets.MSetRBT <> r var
R20141:20141 Coq.MSets.MSetRBT <> x var
R20241:20255 Coq.MSets.MSetRBT MakeRaw append_rr_match thm
R20241:20255 Coq.MSets.MSetRBT MakeRaw append_rr_match thm
R20352:20366 Coq.MSets.MSetRBT MakeRaw append_bb_match thm
R20352:20366 Coq.MSets.MSetRBT MakeRaw append_bb_match thm
R20438:20448 Coq.MSets.MSetRBT MakeRaw append_spec thm
prf 20463:20471 MakeRaw append_ok
R20490:20491 Coq.MSets.MSetRBT MakeRaw Ok class
R20493:20493 Coq.MSets.MSetRBT <> l var
R20496:20497 Coq.MSets.MSetRBT MakeRaw Ok class
R20499:20499 Coq.MSets.MSetRBT <> r var
R20515:20518 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20530:20533 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20534:20535 Coq.MSets.MSetRBT MakeRaw Ok class
R20538:20543 Coq.MSets.MSetRBT MakeRaw append def
R20547:20547 Coq.MSets.MSetRBT <> r var
R20545:20545 Coq.MSets.MSetRBT <> l var
R20519:20525 Coq.MSets.MSetRBT MakeRaw gt_tree def
R20529:20529 Coq.MSets.MSetRBT <> r var
R20527:20527 Coq.MSets.MSetRBT <> x var
R20504:20510 Coq.MSets.MSetRBT MakeRaw lt_tree def
R20514:20514 Coq.MSets.MSetRBT <> l var
R20512:20512 Coq.MSets.MSetRBT <> x var
R20686:20687 Coq.MSets.MSetRBT MakeRaw Ok class
R20690:20695 Coq.MSets.MSetRBT MakeRaw append def
R20686:20687 Coq.MSets.MSetRBT MakeRaw Ok class
R20690:20695 Coq.MSets.MSetRBT MakeRaw append def
R20752:20755 Coq.MSets.MSetRBT X lt defax
R20752:20755 Coq.MSets.MSetRBT X lt defax
R20807:20813 Coq.MSets.MSetRBT MakeRaw gt_tree def
R20819:20824 Coq.MSets.MSetRBT MakeRaw append def
R20807:20813 Coq.MSets.MSetRBT MakeRaw gt_tree def
R20819:20824 Coq.MSets.MSetRBT MakeRaw append def
R20915:20921 Coq.MSets.MSetRBT MakeRaw lt_tree def
R20927:20932 Coq.MSets.MSetRBT MakeRaw append def
R20915:20921 Coq.MSets.MSetRBT MakeRaw lt_tree def
R20927:20932 Coq.MSets.MSetRBT MakeRaw append def
R21031:21045 Coq.MSets.MSetRBT MakeRaw append_rr_match thm
R21031:21045 Coq.MSets.MSetRBT MakeRaw append_rr_match thm
R21269:21270 Coq.MSets.MSetRBT MakeRaw Ok class
R21273:21278 Coq.MSets.MSetRBT MakeRaw append def
R21269:21270 Coq.MSets.MSetRBT MakeRaw Ok class
R21273:21278 Coq.MSets.MSetRBT MakeRaw append def
R21335:21338 Coq.MSets.MSetRBT X lt defax
R21335:21338 Coq.MSets.MSetRBT X lt defax
R21390:21396 Coq.MSets.MSetRBT MakeRaw gt_tree def
R21402:21407 Coq.MSets.MSetRBT MakeRaw append def
R21390:21396 Coq.MSets.MSetRBT MakeRaw gt_tree def
R21402:21407 Coq.MSets.MSetRBT MakeRaw append def
R21498:21504 Coq.MSets.MSetRBT MakeRaw lt_tree def
R21510:21515 Coq.MSets.MSetRBT MakeRaw append def
R21498:21504 Coq.MSets.MSetRBT MakeRaw lt_tree def
R21510:21515 Coq.MSets.MSetRBT MakeRaw append def
R21614:21628 Coq.MSets.MSetRBT MakeRaw append_bb_match thm
R21614:21628 Coq.MSets.MSetRBT MakeRaw append_bb_match thm
R21653:21660 Coq.MSets.MSetRBT MakeRaw lbalS_ok inst
R21653:21660 Coq.MSets.MSetRBT MakeRaw lbalS_ok inst
prf 21699:21706 MakeRaw del_spec
R21725:21726 Coq.MSets.MSetRBT MakeRaw Ok class
R21728:21728 Coq.MSets.MSetRBT <> s var
R21748:21752 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R21733:21735 Coq.MSets.MSetRBT MakeRaw InT ind
R21740:21742 Coq.MSets.MSetRBT MakeRaw del def
R21746:21746 Coq.MSets.MSetRBT <> s var
R21744:21744 Coq.MSets.MSetRBT <> x var
R21737:21737 Coq.MSets.MSetRBT <> y var
R21760:21763 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R21753:21755 Coq.MSets.MSetRBT MakeRaw InT ind
R21759:21759 Coq.MSets.MSetRBT <> s var
R21757:21757 Coq.MSets.MSetRBT <> y var
R21764:21764 Coq.Init.Logic <> ::type_scope:'~'_x not
R21765:21768 Coq.MSets.MSetRBT X eq defax
R21772:21772 Coq.MSets.MSetRBT <> x var
R21770:21770 Coq.MSets.MSetRBT <> y var
R21845:21848 Coq.MSets.MSetRBT X lt defax
R21845:21848 Coq.MSets.MSetRBT X lt defax
R21883:21886 Coq.MSets.MSetRBT X lt defax
R21883:21886 Coq.MSets.MSetRBT X lt defax
R22119:22126 Coq.MSets.MSetRBT MakeRaw del_spec thm
inst 22144:22149 MakeRaw del_ok
R22157:22158 Coq.MSets.MSetRBT MakeRaw Ok class
R22160:22160 Coq.MSets.MSetRBT <> s var
R22165:22166 Coq.MSets.MSetRBT MakeRaw Ok class
R22169:22171 Coq.MSets.MSetRBT MakeRaw del def
R22175:22175 Coq.MSets.MSetRBT <> s var
R22173:22173 Coq.MSets.MSetRBT <> x var
R22218:22226 Coq.MSets.MSetRBT MakeRaw append_ok thm
R22218:22226 Coq.MSets.MSetRBT MakeRaw append_ok thm
R22246:22252 Coq.MSets.MSetRBT MakeRaw lt_tree def
R22258:22260 Coq.MSets.MSetRBT MakeRaw del def
R22246:22252 Coq.MSets.MSetRBT MakeRaw lt_tree def
R22258:22260 Coq.MSets.MSetRBT MakeRaw del def
R22373:22379 Coq.MSets.MSetRBT MakeRaw gt_tree def
R22385:22387 Coq.MSets.MSetRBT MakeRaw del def
R22373:22379 Coq.MSets.MSetRBT MakeRaw gt_tree def
R22385:22387 Coq.MSets.MSetRBT MakeRaw del def
prf 22502:22512 MakeRaw remove_spec
R22522:22523 Coq.MSets.MSetRBT MakeRaw Ok class
R22525:22525 Coq.MSets.MSetRBT <> s var
R22549:22553 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R22531:22533 Coq.MSets.MSetRBT MakeRaw InT ind
R22538:22543 Coq.MSets.MSetRBT MakeRaw remove def
R22547:22547 Coq.MSets.MSetRBT <> s var
R22545:22545 Coq.MSets.MSetRBT <> x var
R22535:22535 Coq.MSets.MSetRBT <> y var
R22561:22564 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R22554:22556 Coq.MSets.MSetRBT MakeRaw InT ind
R22560:22560 Coq.MSets.MSetRBT <> s var
R22558:22558 Coq.MSets.MSetRBT <> y var
R22565:22565 Coq.Init.Logic <> ::type_scope:'~'_x not
R22566:22569 Coq.MSets.MSetRBT X eq defax
R22573:22573 Coq.MSets.MSetRBT <> x var
R22571:22571 Coq.MSets.MSetRBT <> y var
R22590:22595 Coq.MSets.MSetRBT MakeRaw remove def
R22630:22640 Coq.MSets.MSetRBT MakeRaw remove_spec thm
inst 22658:22666 MakeRaw remove_ok
R22674:22675 Coq.MSets.MSetRBT MakeRaw Ok class
R22677:22677 Coq.MSets.MSetRBT <> s var
R22682:22683 Coq.MSets.MSetRBT MakeRaw Ok class
R22686:22691 Coq.MSets.MSetRBT MakeRaw remove def
R22695:22695 Coq.MSets.MSetRBT <> s var
R22693:22693 Coq.MSets.MSetRBT <> x var
R22713:22718 Coq.MSets.MSetRBT MakeRaw remove def
prf 22782:22792 MakeRaw delmin_spec
R22813:22814 Coq.MSets.MSetRBT MakeRaw Ok class
R22817:22820 Coq.MSets.MSetRBT MakeRaw Node constr
R22828:22828 Coq.MSets.MSetRBT <> r var
R22826:22826 Coq.MSets.MSetRBT <> y var
R22824:22824 Coq.MSets.MSetRBT <> l var
R22822:22822 Coq.MSets.MSetRBT <> c var
R22856:22861 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22893:22896 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R22884:22886 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22862:22868 Coq.MSets.MSetRBT MakeRaw min_elt def
R22871:22874 Coq.MSets.MSetRBT MakeRaw Node constr
R22882:22882 Coq.MSets.MSetRBT <> r var
R22880:22880 Coq.MSets.MSetRBT <> y var
R22878:22878 Coq.MSets.MSetRBT <> l var
R22876:22876 Coq.MSets.MSetRBT <> c var
R22887:22890 Coq.Init.Datatypes <> Some constr
R22892:22892 Coq.MSets.MSetRBT <> x var
R22917:22919 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22897:22899 Coq.MSets.MSetRBT MakeRaw del def
R22904:22907 Coq.MSets.MSetRBT MakeRaw Node constr
R22915:22915 Coq.MSets.MSetRBT <> r var
R22913:22913 Coq.MSets.MSetRBT <> y var
R22911:22911 Coq.MSets.MSetRBT <> l var
R22909:22909 Coq.MSets.MSetRBT <> c var
R22901:22901 Coq.MSets.MSetRBT <> x var
R22920:22921 Coq.MSets.MSetRBT <> s' var
R22847:22849 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22835:22840 Coq.MSets.MSetRBT MakeRaw delmin def
R22846:22846 Coq.MSets.MSetRBT <> r var
R22844:22844 Coq.MSets.MSetRBT <> y var
R22842:22842 Coq.MSets.MSetRBT <> l var
R22850:22850 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22852:22852 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22855:22855 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22851:22851 Coq.MSets.MSetRBT <> x var
R22853:22854 Coq.MSets.MSetRBT <> s' var
R23064:23078 Coq.MSets.MSetRBT MakeRaw compare_refl thm
R23064:23078 Coq.MSets.MSetRBT MakeRaw compare_refl thm
R23064:23078 Coq.MSets.MSetRBT MakeRaw compare_refl thm
R23157:23162 Coq.MSets.MSetRBT MakeRaw delmin def
R23241:23244 Coq.MSets.MSetRBT MakeRaw Node constr
R23241:23244 Coq.MSets.MSetRBT MakeRaw Node constr
R23410:23413 Coq.MSets.MSetRBT X lt defax
R23410:23413 Coq.MSets.MSetRBT X lt defax
R23462:23464 Coq.MSets.MSetRBT MakeRaw InT ind
R23484:23496 Coq.MSets.MSetRBT MakeRaw min_elt_spec1 thm
R23462:23464 Coq.MSets.MSetRBT MakeRaw InT ind
R23484:23496 Coq.MSets.MSetRBT MakeRaw min_elt_spec1 thm
R23524:23537 Coq.MSets.MSetRBT X compare_spec prfax
R23524:23537 Coq.MSets.MSetRBT X compare_spec prfax
prf 23612:23627 MakeRaw remove_min_spec1
R23638:23639 Coq.MSets.MSetRBT MakeRaw Ok class
R23641:23641 Coq.MSets.MSetRBT <> s var
R23672:23677 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23696:23699 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R23687:23689 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23678:23684 Coq.MSets.MSetRBT MakeRaw min_elt def
R23686:23686 Coq.MSets.MSetRBT <> s var
R23690:23693 Coq.Init.Datatypes <> Some constr
R23695:23695 Coq.MSets.MSetRBT <> x var
R23710:23712 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23700:23705 Coq.MSets.MSetRBT MakeRaw remove def
R23709:23709 Coq.MSets.MSetRBT <> s var
R23707:23707 Coq.MSets.MSetRBT <> x var
R23713:23714 Coq.MSets.MSetRBT <> s' var
R23658:23660 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23646:23655 Coq.MSets.MSetRBT MakeRaw remove_min def
R23657:23657 Coq.MSets.MSetRBT <> s var
R23661:23664 Coq.Init.Datatypes <> Some constr
R23666:23666 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23668:23668 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23671:23671 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23667:23667 Coq.MSets.MSetRBT <> x var
R23669:23670 Coq.MSets.MSetRBT <> s' var
R23732:23741 Coq.MSets.MSetRBT MakeRaw remove_min def
R23794:23804 Coq.MSets.MSetRBT MakeRaw delmin_spec thm
R23794:23804 Coq.MSets.MSetRBT MakeRaw delmin_spec thm
R23826:23831 Coq.MSets.MSetRBT MakeRaw delmin def
R23900:23905 Coq.MSets.MSetRBT MakeRaw remove def
R23911:23914 Coq.MSets.MSetRBT MakeRaw Node constr
R23900:23905 Coq.MSets.MSetRBT MakeRaw remove def
R23911:23914 Coq.MSets.MSetRBT MakeRaw Node constr
prf 23965:23980 MakeRaw remove_min_spec2
R24005:24008 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24009:24013 Coq.MSets.MSetRBT MakeRaw Empty def
R24015:24015 Coq.MSets.MSetRBT <> s var
R23998:24000 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23986:23995 Coq.MSets.MSetRBT MakeRaw remove_min def
R23997:23997 Coq.MSets.MSetRBT <> s var
R24001:24004 Coq.Init.Datatypes <> None constr
R24033:24042 Coq.MSets.MSetRBT MakeRaw remove_min def
R24097:24102 Coq.MSets.MSetRBT MakeRaw delmin def
prf 24117:24129 MakeRaw remove_min_ok
R24134:24134 Coq.MSets.MSetRBT MakeRaw t def
R24139:24140 Coq.MSets.MSetRBT MakeRaw Ok class
R24142:24142 Coq.MSets.MSetRBT <> s var
R24153:24162 Coq.MSets.MSetRBT MakeRaw remove_min def
R24164:24164 Coq.MSets.MSetRBT <> s var
R24174:24177 Coq.Init.Datatypes <> Some constr
R24179:24179 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24181:24181 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24184:24184 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R24189:24190 Coq.MSets.MSetRBT MakeRaw Ok class
R24198:24201 Coq.Init.Datatypes <> None constr
R24206:24209 Coq.Init.Logic <> True ind
R24237:24252 Coq.MSets.MSetRBT MakeRaw remove_min_spec1 thm
R24237:24252 Coq.MSets.MSetRBT MakeRaw remove_min_spec1 thm
R24268:24277 Coq.MSets.MSetRBT MakeRaw remove_min def
syndef 24390:24395 MakeRaw ifpred
R24415:24418 Coq.Init.Peano <> pred syndef
def 24447:24463 MakeRaw treeify_invariant
R24473:24481 Coq.MSets.MSetRBT MakeRaw treeify_t syndef
R24519:24523 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24540:24540 Coq.MSets.MSetRBT <> f var
R24542:24544 Coq.MSets.MSetRBT <> acc var
R24567:24570 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R24560:24562 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24550:24557 Coq.MSets.MSetRBT MakeRaw cardinal def
R24559:24559 Coq.MSets.MSetRBT <> t var
R24563:24566 Coq.MSets.MSetRBT <> size var
R24574:24576 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24571:24573 Coq.MSets.MSetRBT <> acc var
R24587:24590 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R24577:24584 Coq.MSets.MSetRBT MakeRaw elements def
R24586:24586 Coq.MSets.MSetRBT <> t var
R24591:24594 Coq.MSets.MSetRBT <> acc' var
R24505:24508 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R24501:24504 Coq.MSets.MSetRBT <> size var
R24509:24514 Coq.Init.Datatypes <> length def
R24516:24518 Coq.MSets.MSetRBT <> acc var
prf 24604:24620 MakeRaw treeify_zero_spec
R24624:24640 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R24644:24655 Coq.MSets.MSetRBT MakeRaw treeify_zero def
prf 24698:24713 MakeRaw treeify_one_spec
R24717:24733 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R24737:24747 Coq.MSets.MSetRBT MakeRaw treeify_one def
prf 24813:24829 MakeRaw treeify_cont_spec
R24880:24884 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24910:24914 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24939:24943 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24944:24960 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R24968:24979 Coq.MSets.MSetRBT MakeRaw treeify_cont def
R24983:24983 Coq.MSets.MSetRBT <> g var
R24981:24981 Coq.MSets.MSetRBT <> f var
R24962:24965 Coq.MSets.MSetRBT <> size var
R24919:24921 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24915:24918 Coq.MSets.MSetRBT <> size var
R24922:24922 Coq.Init.Datatypes <> S constr
R24930:24932 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R24925:24929 Coq.MSets.MSetRBT <> size1 var
R24933:24937 Coq.MSets.MSetRBT <> size2 var
R24885:24901 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R24909:24909 Coq.MSets.MSetRBT <> g var
R24903:24907 Coq.MSets.MSetRBT <> size2 var
R24855:24871 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R24879:24879 Coq.MSets.MSetRBT <> f var
R24873:24877 Coq.MSets.MSetRBT <> size1 var
R25026:25037 Coq.MSets.MSetRBT MakeRaw treeify_cont def
R25238:25247 Coq.Arith.PeanoNat Nat lt_nge thm
R25238:25247 Coq.Arith.PeanoNat Nat lt_nge thm
R25269:25277 Coq.Lists.List <> app_nil_r thm
R25283:25299 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25269:25277 Coq.Lists.List <> app_nil_r thm
R25269:25277 Coq.Lists.List <> app_nil_r thm
R25283:25299 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25283:25299 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25438:25447 Coq.Lists.List <> app_length thm
R25453:25469 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25438:25447 Coq.Lists.List <> app_length thm
R25438:25447 Coq.Lists.List <> app_length thm
R25453:25469 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25453:25469 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R25491:25504 Coq.Arith.PeanoNat Nat add_succ_r thm
R25510:25525 Coq.Arith.PeanoNat Nat succ_le_mono thm
R25491:25504 Coq.Arith.PeanoNat Nat add_succ_r thm
R25491:25504 Coq.Arith.PeanoNat Nat add_succ_r thm
R25510:25525 Coq.Arith.PeanoNat Nat succ_le_mono thm
R25510:25525 Coq.Arith.PeanoNat Nat succ_le_mono thm
R25538:25554 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R25538:25554 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R25568:25580 Coq.MSets.MSetRBT MakeRaw elements_node thm
R25583:25589 Coq.Lists.List <> app_ass syndef
R25568:25580 Coq.MSets.MSetRBT MakeRaw elements_node thm
R25568:25580 Coq.MSets.MSetRBT MakeRaw elements_node thm
R25583:25589 Coq.Lists.List <> app_ass syndef
R25583:25589 Coq.Lists.List <> app_ass syndef
prf 25615:25630 MakeRaw treeify_aux_spec
R25637:25640 Coq.Init.Datatypes <> bool ind
R25646:25662 Coq.MSets.MSetRBT MakeRaw treeify_invariant def
R25691:25701 Coq.MSets.MSetRBT MakeRaw treeify_aux def
R25705:25705 Coq.MSets.MSetRBT <> n var
R25703:25703 Coq.MSets.MSetRBT <> p var
R25665:25670 Coq.MSets.MSetRBT MakeRaw ifpred syndef
R25675:25684 Coq.PArith.BinPos Pos to_nat def
R25686:25686 Coq.MSets.MSetRBT <> n var
R25675:25684 Coq.PArith.BinPos Pos to_nat def
R25686:25686 Coq.MSets.MSetRBT <> n var
R25672:25672 Coq.MSets.MSetRBT <> p var
R25790:25806 Coq.MSets.MSetRBT MakeRaw treeify_cont_spec thm
R25822:25826 Coq.Init.Datatypes <> false constr
R25790:25806 Coq.MSets.MSetRBT MakeRaw treeify_cont_spec thm
R25822:25826 Coq.Init.Datatypes <> false constr
R25861:25874 Coq.PArith.Pnat Pos2Nat inj_xI thm
R25861:25874 Coq.PArith.Pnat Pos2Nat inj_xI thm
R25861:25874 Coq.PArith.Pnat Pos2Nat inj_xI thm
R25893:25906 Coq.PArith.Pnat Pos2Nat is_pos thm
R25893:25906 Coq.PArith.Pnat Pos2Nat is_pos thm
R25918:25931 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R25918:25931 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R25977:25987 Coq.Arith.PeanoNat Nat add_0_r thm
R25977:25987 Coq.Arith.PeanoNat Nat add_0_r thm
R25977:25987 Coq.Arith.PeanoNat Nat add_0_r thm
R25977:25987 Coq.Arith.PeanoNat Nat add_0_r thm
R25977:25987 Coq.Arith.PeanoNat Nat add_0_r thm
R26017:26030 Coq.Arith.PeanoNat Nat add_succ_r thm
R26033:26045 Coq.Arith.PeanoNat Nat succ_pred thm
R26017:26030 Coq.Arith.PeanoNat Nat add_succ_r thm
R26017:26030 Coq.Arith.PeanoNat Nat add_succ_r thm
R26033:26045 Coq.Arith.PeanoNat Nat succ_pred thm
R26033:26045 Coq.Arith.PeanoNat Nat succ_pred thm
R26033:26045 Coq.Arith.PeanoNat Nat succ_pred thm
R26067:26083 Coq.MSets.MSetRBT MakeRaw treeify_cont_spec thm
R26115:26118 Coq.Init.Datatypes <> true constr
R26067:26083 Coq.MSets.MSetRBT MakeRaw treeify_cont_spec thm
R26115:26118 Coq.Init.Datatypes <> true constr
R26137:26150 Coq.PArith.Pnat Pos2Nat inj_xO thm
R26137:26150 Coq.PArith.Pnat Pos2Nat inj_xO thm
R26137:26150 Coq.PArith.Pnat Pos2Nat inj_xO thm
R26169:26182 Coq.PArith.Pnat Pos2Nat is_pos thm
R26169:26182 Coq.PArith.Pnat Pos2Nat is_pos thm
R26194:26207 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R26194:26207 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R26229:26242 Coq.Arith.PeanoNat Nat add_succ_r thm
R26245:26257 Coq.Arith.PeanoNat Nat succ_pred thm
R26229:26242 Coq.Arith.PeanoNat Nat add_succ_r thm
R26229:26242 Coq.Arith.PeanoNat Nat add_succ_r thm
R26245:26257 Coq.Arith.PeanoNat Nat succ_pred thm
R26245:26257 Coq.Arith.PeanoNat Nat succ_pred thm
R26309:26319 Coq.Arith.PeanoNat Nat add_0_r thm
R26309:26319 Coq.Arith.PeanoNat Nat add_0_r thm
R26309:26319 Coq.Arith.PeanoNat Nat add_0_r thm
R26309:26319 Coq.Arith.PeanoNat Nat add_0_r thm
R26309:26319 Coq.Arith.PeanoNat Nat add_0_r thm
R26354:26367 Coq.Arith.PeanoNat Nat add_pred_l thm
R26354:26367 Coq.Arith.PeanoNat Nat add_pred_l thm
R26393:26409 Coq.MSets.MSetRBT MakeRaw treeify_zero_spec thm
R26419:26434 Coq.MSets.MSetRBT MakeRaw treeify_one_spec thm
R26393:26409 Coq.MSets.MSetRBT MakeRaw treeify_zero_spec thm
R26419:26434 Coq.MSets.MSetRBT MakeRaw treeify_one_spec thm
prf 26451:26466 MakeRaw plength_aux_spec
R26504:26506 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26476:26485 Coq.PArith.BinPos Pos to_nat def
R26488:26498 Coq.MSets.MSetRBT MakeRaw plength_aux def
R26502:26502 Coq.MSets.MSetRBT <> p var
R26500:26500 Coq.MSets.MSetRBT <> l var
R26515:26517 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R26507:26512 Coq.Init.Datatypes <> length def
R26514:26514 Coq.MSets.MSetRBT <> l var
R26518:26527 Coq.PArith.BinPos Pos to_nat def
R26529:26529 Coq.MSets.MSetRBT <> p var
R26617:26632 Coq.PArith.Pnat Pos2Nat inj_succ thm
R26635:26648 Coq.Arith.PeanoNat Nat add_succ_r thm
R26617:26632 Coq.PArith.Pnat Pos2Nat inj_succ thm
R26617:26632 Coq.PArith.Pnat Pos2Nat inj_succ thm
R26635:26648 Coq.Arith.PeanoNat Nat add_succ_r thm
R26635:26648 Coq.Arith.PeanoNat Nat add_succ_r thm
prf 26663:26674 MakeRaw plength_spec
R26702:26704 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26680:26689 Coq.PArith.BinPos Pos to_nat def
R26692:26698 Coq.MSets.MSetRBT MakeRaw plength def
R26700:26700 Coq.MSets.MSetRBT <> l var
R26705:26705 Coq.Init.Datatypes <> S constr
R26708:26713 Coq.Init.Datatypes <> length def
R26715:26715 Coq.MSets.MSetRBT <> l var
R26734:26740 Coq.MSets.MSetRBT MakeRaw plength def
R26751:26766 Coq.MSets.MSetRBT MakeRaw plength_aux_spec thm
R26751:26766 Coq.MSets.MSetRBT MakeRaw plength_aux_spec thm
R26751:26766 Coq.MSets.MSetRBT MakeRaw plength_aux_spec thm
R26775:26785 Coq.Arith.PeanoNat Nat add_1_r thm
R26775:26785 Coq.Arith.PeanoNat Nat add_1_r thm
prf 26800:26815 MakeRaw treeify_elements
R26841:26843 Coq.Init.Logic <> ::type_scope:x_'='_x not
R26821:26828 Coq.MSets.MSetRBT MakeRaw elements def
R26831:26837 Coq.MSets.MSetRBT MakeRaw treeify def
R26839:26839 Coq.MSets.MSetRBT <> l var
R26844:26844 Coq.MSets.MSetRBT <> l var
R26868:26883 Coq.MSets.MSetRBT MakeRaw treeify_aux_spec thm
R26897:26900 Coq.Init.Datatypes <> true constr
R26886:26892 Coq.MSets.MSetRBT MakeRaw plength def
R26868:26883 Coq.MSets.MSetRBT MakeRaw treeify_aux_spec thm
R26897:26900 Coq.Init.Datatypes <> true constr
R26886:26892 Coq.MSets.MSetRBT MakeRaw plength def
R26914:26920 Coq.MSets.MSetRBT MakeRaw treeify def
R26932:26942 Coq.MSets.MSetRBT MakeRaw treeify_aux def
R27005:27016 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R27005:27016 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R27005:27016 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R27039:27050 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R27053:27062 Coq.Lists.List <> app_length thm
R27068:27084 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R27039:27050 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R27039:27050 Coq.MSets.MSetRBT MakeRaw plength_spec thm
R27053:27062 Coq.Lists.List <> app_length thm
R27053:27062 Coq.Lists.List <> app_length thm
R27068:27084 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R27068:27084 Coq.MSets.MSetRBT MakeRaw elements_cardinal thm
R27122:27130 Coq.Lists.List <> app_nil_r thm
R27122:27130 Coq.Lists.List <> app_nil_r thm
R27122:27130 Coq.Lists.List <> app_nil_r thm
R27173:27186 Coq.Arith.PeanoNat Nat add_succ_r thm
R27189:27200 Coq.Arith.PeanoNat Nat add_comm thm
R27173:27186 Coq.Arith.PeanoNat Nat add_succ_r thm
R27173:27186 Coq.Arith.PeanoNat Nat add_succ_r thm
R27189:27200 Coq.Arith.PeanoNat Nat add_comm thm
R27189:27200 Coq.Arith.PeanoNat Nat add_comm thm
R27212:27229 Coq.Arith.PeanoNat Nat succ_add_discr thm
R27212:27229 Coq.Arith.PeanoNat Nat succ_add_discr thm
prf 27244:27255 MakeRaw treeify_spec
R27280:27284 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R27263:27265 Coq.MSets.MSetRBT MakeRaw InT ind
R27270:27276 Coq.MSets.MSetRBT MakeRaw treeify def
R27278:27278 Coq.MSets.MSetRBT <> l var
R27267:27267 Coq.MSets.MSetRBT <> x var
R27285:27287 Coq.Lists.SetoidList <> InA ind
R27296:27296 Coq.MSets.MSetRBT <> l var
R27294:27294 Coq.MSets.MSetRBT <> x var
R27289:27292 Coq.MSets.MSetRBT X eq defax
R27330:27343 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R27346:27361 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R27330:27343 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R27330:27343 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R27346:27361 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R27346:27361 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
prf 27376:27385 MakeRaw treeify_ok
R27402:27405 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27406:27407 Coq.MSets.MSetRBT MakeRaw Ok class
R27410:27416 Coq.MSets.MSetRBT MakeRaw treeify def
R27418:27418 Coq.MSets.MSetRBT <> l var
R27391:27394 Coq.Sorting.Sorted <> sort syndef
R27401:27401 Coq.MSets.MSetRBT <> l var
R27396:27399 Coq.MSets.MSetRBT X lt defax
R27444:27459 Coq.MSets.MSetRBT MakeRaw elements_sort_ok thm
R27444:27459 Coq.MSets.MSetRBT MakeRaw elements_sort_ok thm
R27470:27485 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R27470:27485 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R27470:27485 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
prf 27525:27534 MakeRaw filter_app
R27546:27549 Coq.Init.Datatypes <> list ind
R27551:27551 Coq.MSets.MSetRBT <> A var
R27580:27582 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27557:27567 Coq.Lists.List <> filter def
R27573:27576 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27572:27572 Coq.MSets.MSetRBT <> l var
R27577:27578 Coq.MSets.MSetRBT <> l' var
R27569:27569 Coq.MSets.MSetRBT <> f var
R27598:27601 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27583:27593 Coq.Lists.List <> filter def
R27597:27597 Coq.MSets.MSetRBT <> l var
R27595:27595 Coq.MSets.MSetRBT <> f var
R27602:27612 Coq.Lists.List <> filter def
R27616:27617 Coq.MSets.MSetRBT <> l' var
R27614:27614 Coq.MSets.MSetRBT <> f var
prf 27722:27740 MakeRaw filter_aux_elements
R27771:27773 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27753:27762 Coq.MSets.MSetRBT MakeRaw filter_aux def
R27768:27770 Coq.MSets.MSetRBT <> acc var
R27766:27766 Coq.MSets.MSetRBT <> s var
R27764:27764 Coq.MSets.MSetRBT <> f var
R27800:27803 Coq.Init.Datatypes <> ::list_scope:x_'++'_x not
R27774:27784 Coq.Lists.List <> filter def
R27789:27796 Coq.MSets.MSetRBT MakeRaw elements def
R27798:27798 Coq.MSets.MSetRBT <> s var
R27786:27786 Coq.MSets.MSetRBT <> f var
R27804:27806 Coq.MSets.MSetRBT <> acc var
R27896:27908 Coq.MSets.MSetRBT MakeRaw elements_node thm
R27911:27920 Coq.MSets.MSetRBT MakeRaw filter_app thm
R27896:27908 Coq.MSets.MSetRBT MakeRaw elements_node thm
R27896:27908 Coq.MSets.MSetRBT MakeRaw elements_node thm
R27911:27920 Coq.MSets.MSetRBT MakeRaw filter_app thm
R27911:27920 Coq.MSets.MSetRBT MakeRaw filter_app thm
R27969:27975 Coq.Lists.List <> app_ass syndef
R27969:27975 Coq.Lists.List <> app_ass syndef
R27969:27975 Coq.Lists.List <> app_ass syndef
R27969:27975 Coq.Lists.List <> app_ass syndef
R27969:27975 Coq.Lists.List <> app_ass syndef
prf 27990:28004 MakeRaw filter_elements
R28034:28036 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28013:28020 Coq.MSets.MSetRBT MakeRaw elements def
R28023:28028 Coq.MSets.MSetRBT MakeRaw filter def
R28032:28032 Coq.MSets.MSetRBT <> s var
R28030:28030 Coq.MSets.MSetRBT <> f var
R28037:28047 Coq.Lists.List <> filter def
R28052:28059 Coq.MSets.MSetRBT MakeRaw elements def
R28061:28061 Coq.MSets.MSetRBT <> s var
R28049:28049 Coq.MSets.MSetRBT <> f var
R28080:28085 Coq.MSets.MSetRBT MakeRaw filter def
R28101:28116 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R28119:28137 Coq.MSets.MSetRBT MakeRaw filter_aux_elements thm
R28140:28148 Coq.Lists.List <> app_nil_r thm
R28101:28116 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R28101:28116 Coq.MSets.MSetRBT MakeRaw treeify_elements thm
R28119:28137 Coq.MSets.MSetRBT MakeRaw filter_aux_elements thm
R28119:28137 Coq.MSets.MSetRBT MakeRaw filter_aux_elements thm
R28140:28148 Coq.Lists.List <> app_nil_r thm
R28140:28148 Coq.Lists.List <> app_nil_r thm
prf 28163:28173 MakeRaw filter_spec
R28210:28215 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28260:28260 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28234:28238 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R28216:28218 Coq.MSets.MSetRBT MakeRaw InT ind
R28223:28228 Coq.MSets.MSetRBT MakeRaw filter def
R28232:28232 Coq.MSets.MSetRBT <> s var
R28230:28230 Coq.MSets.MSetRBT <> f var
R28220:28220 Coq.MSets.MSetRBT <> x var
R28246:28249 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R28239:28241 Coq.MSets.MSetRBT MakeRaw InT ind
R28245:28245 Coq.MSets.MSetRBT <> s var
R28243:28243 Coq.MSets.MSetRBT <> x var
R28253:28255 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28250:28250 Coq.MSets.MSetRBT <> f var
R28252:28252 Coq.MSets.MSetRBT <> x var
R28256:28259 Coq.Init.Datatypes <> true constr
R28184:28189 Coq.Classes.Morphisms <> Proper class
R28209:28209 Coq.MSets.MSetRBT <> f var
R28196:28198 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R28192:28195 Coq.MSets.MSetRBT X eq defax
R28199:28206 Coq.Init.Logic <> eq ind
R28294:28307 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R28310:28324 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28327:28336 Coq.Lists.SetoidList <> filter_InA thm
R28339:28352 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R28294:28307 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R28294:28307 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R28310:28324 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28310:28324 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28327:28336 Coq.Lists.SetoidList <> filter_InA thm
R28327:28336 Coq.Lists.SetoidList <> filter_InA thm
R28327:28336 Coq.Lists.SetoidList <> filter_InA thm
R28339:28352 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R28339:28352 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
inst 28385:28393 MakeRaw filter_ok
R28401:28402 Coq.MSets.MSetRBT MakeRaw Ok class
R28404:28404 Coq.MSets.MSetRBT <> s var
R28409:28410 Coq.MSets.MSetRBT MakeRaw Ok class
R28413:28418 Coq.MSets.MSetRBT MakeRaw filter def
R28422:28422 Coq.MSets.MSetRBT <> s var
R28420:28420 Coq.MSets.MSetRBT <> f var
R28440:28455 Coq.MSets.MSetRBT MakeRaw elements_sort_ok thm
R28440:28455 Coq.MSets.MSetRBT MakeRaw elements_sort_ok thm
R28467:28481 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28467:28481 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28467:28481 Coq.MSets.MSetRBT MakeRaw filter_elements thm
R28508:28511 Coq.MSets.MSetRBT X eq defax
R28491:28501 Coq.Lists.SetoidList <> filter_sort thm
R28508:28511 Coq.MSets.MSetRBT X eq defax
R28491:28501 Coq.Lists.SetoidList <> filter_sort thm
prf 28556:28573 MakeRaw partition_aux_spec
R28619:28623 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28592:28604 Coq.MSets.MSetRBT MakeRaw partition_aux def
R28615:28618 Coq.MSets.MSetRBT <> acc2 var
R28610:28613 Coq.MSets.MSetRBT <> acc1 var
R28608:28608 Coq.MSets.MSetRBT <> s var
R28606:28606 Coq.MSets.MSetRBT <> f var
R28624:28624 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28644:28645 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28685:28685 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28625:28634 Coq.MSets.MSetRBT MakeRaw filter_aux def
R28640:28643 Coq.MSets.MSetRBT <> acc1 var
R28638:28638 Coq.MSets.MSetRBT <> s var
R28636:28636 Coq.MSets.MSetRBT <> f var
R28646:28655 Coq.MSets.MSetRBT MakeRaw filter_aux def
R28681:28684 Coq.MSets.MSetRBT <> acc2 var
R28679:28679 Coq.MSets.MSetRBT <> s var
R28667:28670 Coq.Init.Datatypes <> negb def
R28673:28673 Coq.MSets.MSetRBT <> f var
R28675:28675 Coq.MSets.MSetRBT <> x var
prf 28849:28862 MakeRaw partition_spec
R28884:28886 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28871:28879 Coq.MSets.MSetRBT MakeRaw partition def
R28883:28883 Coq.MSets.MSetRBT <> s var
R28881:28881 Coq.MSets.MSetRBT <> f var
R28887:28887 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28898:28899 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28930:28930 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R28888:28893 Coq.MSets.MSetRBT MakeRaw filter def
R28897:28897 Coq.MSets.MSetRBT <> s var
R28895:28895 Coq.MSets.MSetRBT <> f var
R28900:28905 Coq.MSets.MSetRBT MakeRaw filter def
R28929:28929 Coq.MSets.MSetRBT <> s var
R28917:28920 Coq.Init.Datatypes <> negb def
R28923:28923 Coq.MSets.MSetRBT <> f var
R28925:28925 Coq.MSets.MSetRBT <> x var
R28948:28956 Coq.MSets.MSetRBT MakeRaw partition def
R28959:28964 Coq.MSets.MSetRBT MakeRaw filter def
R28979:28996 Coq.MSets.MSetRBT MakeRaw partition_aux_spec thm
R28979:28996 Coq.MSets.MSetRBT MakeRaw partition_aux_spec thm
R28979:28996 Coq.MSets.MSetRBT MakeRaw partition_aux_spec thm
prf 29011:29025 MakeRaw partition_spec1
R29060:29064 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29065:29069 Coq.MSets.MSetRBT MakeRaw Equal def
R29094:29099 Coq.MSets.MSetRBT MakeRaw filter def
R29103:29103 Coq.MSets.MSetRBT <> s var
R29101:29101 Coq.MSets.MSetRBT <> f var
R29072:29074 Coq.Init.Datatypes <> fst def
R29077:29085 Coq.MSets.MSetRBT MakeRaw partition def
R29089:29089 Coq.MSets.MSetRBT <> s var
R29087:29087 Coq.MSets.MSetRBT <> f var
R29034:29039 Coq.Classes.Morphisms <> Proper class
R29059:29059 Coq.MSets.MSetRBT <> f var
R29046:29048 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R29042:29045 Coq.MSets.MSetRBT X eq defax
R29049:29056 Coq.Init.Logic <> eq ind
R29126:29139 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29126:29139 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29126:29139 Coq.MSets.MSetRBT MakeRaw partition_spec thm
prf 29154:29168 MakeRaw partition_spec2
R29203:29207 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29208:29212 Coq.MSets.MSetRBT MakeRaw Equal def
R29237:29242 Coq.MSets.MSetRBT MakeRaw filter def
R29266:29266 Coq.MSets.MSetRBT <> s var
R29254:29257 Coq.Init.Datatypes <> negb def
R29260:29260 Coq.MSets.MSetRBT <> f var
R29262:29262 Coq.MSets.MSetRBT <> x var
R29215:29217 Coq.Init.Datatypes <> snd def
R29220:29228 Coq.MSets.MSetRBT MakeRaw partition def
R29232:29232 Coq.MSets.MSetRBT <> s var
R29230:29230 Coq.MSets.MSetRBT <> f var
R29177:29182 Coq.Classes.Morphisms <> Proper class
R29202:29202 Coq.MSets.MSetRBT <> f var
R29189:29191 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R29185:29188 Coq.MSets.MSetRBT X eq defax
R29192:29199 Coq.Init.Logic <> eq ind
R29289:29302 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29289:29302 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29289:29302 Coq.MSets.MSetRBT MakeRaw partition_spec thm
inst 29320:29332 MakeRaw partition_ok1
R29340:29341 Coq.MSets.MSetRBT MakeRaw Ok class
R29343:29343 Coq.MSets.MSetRBT <> s var
R29348:29349 Coq.MSets.MSetRBT MakeRaw Ok class
R29352:29354 Coq.Init.Datatypes <> fst def
R29357:29365 Coq.MSets.MSetRBT MakeRaw partition def
R29369:29369 Coq.MSets.MSetRBT <> s var
R29367:29367 Coq.MSets.MSetRBT <> f var
R29389:29402 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29415:29423 Coq.MSets.MSetRBT MakeRaw filter_ok inst
R29389:29402 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29389:29402 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29415:29423 Coq.MSets.MSetRBT MakeRaw filter_ok inst
inst 29441:29453 MakeRaw partition_ok2
R29461:29462 Coq.MSets.MSetRBT MakeRaw Ok class
R29464:29464 Coq.MSets.MSetRBT <> s var
R29469:29470 Coq.MSets.MSetRBT MakeRaw Ok class
R29473:29475 Coq.Init.Datatypes <> snd def
R29478:29486 Coq.MSets.MSetRBT MakeRaw partition def
R29490:29490 Coq.MSets.MSetRBT <> s var
R29488:29488 Coq.MSets.MSetRBT <> f var
R29510:29523 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29536:29544 Coq.MSets.MSetRBT MakeRaw filter_ok inst
R29510:29523 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29510:29523 Coq.MSets.MSetRBT MakeRaw partition_spec thm
R29536:29544 Coq.MSets.MSetRBT MakeRaw filter_ok inst
R29644:29654 Coq.Lists.SetoidList <> InA_app_iff thm
R29658:29665 Coq.Lists.SetoidList <> InA_cons thm
R29669:29675 Coq.Lists.SetoidList <> InA_nil thm
R29679:29685 Coq.Lists.SetoidList <> InA_rev thm
rec 29710:29712 MakeRaw INV
proj 29737:29745 MakeRaw l1_sorted
proj 29770:29778 MakeRaw l2_sorted
proj 29803:29812 MakeRaw acc_sorted
proj 29832:29840 MakeRaw l1_lt_acc
proj 29894:29902 MakeRaw l2_lt_acc
R29749:29752 Coq.Sorting.Sorted <> sort syndef
R29760:29762 Coq.Lists.List <> rev def
R29764:29765 Coq.MSets.MSetRBT <> l1 var
R29754:29757 Coq.MSets.MSetRBT X lt defax
R29782:29785 Coq.Sorting.Sorted <> sort syndef
R29793:29795 Coq.Lists.List <> rev def
R29797:29798 Coq.MSets.MSetRBT <> l2 var
R29787:29790 Coq.MSets.MSetRBT X lt defax
R29816:29819 Coq.Sorting.Sorted <> sort syndef
R29826:29828 Coq.MSets.MSetRBT <> acc var
R29821:29824 Coq.MSets.MSetRBT X lt defax
R29861:29864 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29879:29882 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29883:29886 Coq.MSets.MSetRBT X lt defax
R29890:29890 Coq.MSets.MSetRBT <> y var
R29888:29888 Coq.MSets.MSetRBT <> x var
R29865:29867 Coq.Lists.SetoidList <> InA ind
R29876:29878 Coq.MSets.MSetRBT <> acc var
R29874:29874 Coq.MSets.MSetRBT <> y var
R29869:29872 Coq.MSets.MSetRBT X eq defax
R29848:29850 Coq.Lists.SetoidList <> InA ind
R29859:29860 Coq.MSets.MSetRBT <> l1 var
R29857:29857 Coq.MSets.MSetRBT <> x var
R29852:29855 Coq.MSets.MSetRBT X eq defax
R29923:29926 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29941:29944 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R29945:29948 Coq.MSets.MSetRBT X lt defax
R29952:29952 Coq.MSets.MSetRBT <> y var
R29950:29950 Coq.MSets.MSetRBT <> x var
R29927:29929 Coq.Lists.SetoidList <> InA ind
R29938:29940 Coq.MSets.MSetRBT <> acc var
R29936:29936 Coq.MSets.MSetRBT <> y var
R29931:29934 Coq.MSets.MSetRBT X eq defax
R29910:29912 Coq.Lists.SetoidList <> InA ind
R29921:29922 Coq.MSets.MSetRBT <> l2 var
R29919:29919 Coq.MSets.MSetRBT <> x var
R29914:29917 Coq.MSets.MSetRBT X eq defax
prf 30021:30028 MakeRaw INV_init
R30038:30039 Coq.MSets.MSetRBT MakeRaw Ok class
R30041:30042 Coq.MSets.MSetRBT <> s1 var
R30045:30046 Coq.MSets.MSetRBT MakeRaw Ok class
R30048:30049 Coq.MSets.MSetRBT <> s2 var
R30055:30057 Coq.MSets.MSetRBT MakeRaw INV rec
R30095:30097 Coq.Init.Datatypes <> nil constr
R30078:30089 Coq.MSets.MSetRBT MakeRaw rev_elements def
R30091:30092 Coq.MSets.MSetRBT <> s2 var
R30060:30071 Coq.MSets.MSetRBT MakeRaw rev_elements def
R30073:30074 Coq.MSets.MSetRBT <> s1 var
R30117:30132 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R30117:30132 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R30117:30132 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R30117:30132 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R30117:30132 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R30152:30165 Coq.Lists.List <> rev_involutive thm
R30152:30165 Coq.Lists.List <> rev_involutive thm
R30152:30165 Coq.Lists.List <> rev_involutive thm
R30152:30165 Coq.Lists.List <> rev_involutive thm
R30152:30165 Coq.Lists.List <> rev_involutive thm
R30152:30165 Coq.Lists.List <> rev_involutive thm
R30152:30165 Coq.Lists.List <> rev_involutive thm
R30152:30165 Coq.Lists.List <> rev_involutive thm
R30152:30165 Coq.Lists.List <> rev_involutive thm
R30152:30165 Coq.Lists.List <> rev_involutive thm
R30152:30165 Coq.Lists.List <> rev_involutive thm
R30152:30165 Coq.Lists.List <> rev_involutive thm
R30152:30165 Coq.Lists.List <> rev_involutive thm
prf 30203:30209 MakeRaw INV_sym
R30236:30239 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30240:30242 Coq.MSets.MSetRBT MakeRaw INV rec
R30250:30252 Coq.MSets.MSetRBT <> acc var
R30247:30248 Coq.MSets.MSetRBT <> l1 var
R30244:30245 Coq.MSets.MSetRBT <> l2 var
R30223:30225 Coq.MSets.MSetRBT MakeRaw INV rec
R30233:30235 Coq.MSets.MSetRBT <> acc var
R30230:30231 Coq.MSets.MSetRBT <> l2 var
R30227:30228 Coq.MSets.MSetRBT <> l1 var
prf 30298:30305 MakeRaw INV_drop
R30345:30348 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30349:30351 Coq.MSets.MSetRBT MakeRaw INV rec
R30359:30361 Coq.MSets.MSetRBT <> acc var
R30356:30357 Coq.MSets.MSetRBT <> l2 var
R30353:30354 Coq.MSets.MSetRBT <> l1 var
R30324:30326 Coq.MSets.MSetRBT MakeRaw INV rec
R30342:30344 Coq.MSets.MSetRBT <> acc var
R30339:30340 Coq.MSets.MSetRBT <> l2 var
R30331:30334 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R30329:30330 Coq.MSets.MSetRBT <> x1 var
R30335:30336 Coq.MSets.MSetRBT <> l1 var
R30426:30439 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R30426:30439 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
prf 30498:30503 MakeRaw INV_eq
R30554:30557 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30568:30573 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R30574:30576 Coq.MSets.MSetRBT MakeRaw INV rec
R30587:30590 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R30585:30586 Coq.MSets.MSetRBT <> x1 var
R30591:30593 Coq.MSets.MSetRBT <> acc var
R30581:30582 Coq.MSets.MSetRBT <> l2 var
R30578:30579 Coq.MSets.MSetRBT <> l1 var
R30558:30561 Coq.MSets.MSetRBT X eq defax
R30566:30567 Coq.MSets.MSetRBT <> x2 var
R30563:30564 Coq.MSets.MSetRBT <> x1 var
R30525:30527 Coq.MSets.MSetRBT MakeRaw INV rec
R30551:30553 Coq.MSets.MSetRBT <> acc var
R30543:30546 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R30541:30542 Coq.MSets.MSetRBT <> x2 var
R30547:30548 Coq.MSets.MSetRBT <> l2 var
R30532:30535 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R30530:30531 Coq.MSets.MSetRBT <> x1 var
R30536:30537 Coq.MSets.MSetRBT <> l1 var
R30651:30664 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R30651:30664 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R30709:30722 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R30709:30722 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R30812:30815 Coq.MSets.MSetRBT X eq defax
R30798:30805 Coq.Lists.SetoidList <> InA_InfA thm
R30812:30815 Coq.MSets.MSetRBT X eq defax
R30798:30805 Coq.Lists.SetoidList <> InA_InfA thm
prf 31011:31016 MakeRaw INV_lt
R31067:31070 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31081:31086 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31087:31089 Coq.MSets.MSetRBT MakeRaw INV rec
R31108:31111 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R31106:31107 Coq.MSets.MSetRBT <> x2 var
R31112:31114 Coq.MSets.MSetRBT <> acc var
R31102:31103 Coq.MSets.MSetRBT <> l2 var
R31094:31097 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R31092:31093 Coq.MSets.MSetRBT <> x1 var
R31098:31099 Coq.MSets.MSetRBT <> l1 var
R31071:31074 Coq.MSets.MSetRBT X lt defax
R31079:31080 Coq.MSets.MSetRBT <> x2 var
R31076:31077 Coq.MSets.MSetRBT <> x1 var
R31038:31040 Coq.MSets.MSetRBT MakeRaw INV rec
R31064:31066 Coq.MSets.MSetRBT <> acc var
R31056:31059 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R31054:31055 Coq.MSets.MSetRBT <> x2 var
R31060:31061 Coq.MSets.MSetRBT <> l2 var
R31045:31048 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R31043:31044 Coq.MSets.MSetRBT <> x1 var
R31049:31050 Coq.MSets.MSetRBT <> l1 var
R31172:31185 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R31172:31185 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R31230:31243 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R31230:31243 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R31333:31336 Coq.MSets.MSetRBT X eq defax
R31319:31326 Coq.Lists.SetoidList <> InA_InfA thm
R31333:31336 Coq.MSets.MSetRBT X eq defax
R31319:31326 Coq.Lists.SetoidList <> InA_InfA thm
prf 31601:31607 MakeRaw INV_rev
R31635:31638 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31639:31644 Coq.Sorting.Sorted <> Sorted ind
R31652:31661 Coq.Lists.List <> rev_append def
R31666:31668 Coq.MSets.MSetRBT <> acc var
R31663:31664 Coq.MSets.MSetRBT <> l1 var
R31646:31649 Coq.MSets.MSetRBT X lt defax
R31622:31624 Coq.MSets.MSetRBT MakeRaw INV rec
R31632:31634 Coq.MSets.MSetRBT <> acc var
R31629:31630 Coq.MSets.MSetRBT <> l2 var
R31626:31627 Coq.MSets.MSetRBT <> l1 var
R31696:31709 Coq.Lists.List <> rev_append_rev thm
R31696:31709 Coq.Lists.List <> rev_append_rev thm
R31696:31709 Coq.Lists.List <> rev_append_rev thm
R31734:31737 Coq.MSets.MSetRBT X eq defax
R31719:31727 Coq.Lists.SetoidList <> SortA_app thm
R31734:31737 Coq.MSets.MSetRBT X eq defax
R31719:31727 Coq.Lists.SetoidList <> SortA_app thm
R31780:31788 Coq.MSets.MSetRBT MakeRaw l1_lt_acc proj
R31780:31788 Coq.MSets.MSetRBT MakeRaw l1_lt_acc proj
prf 31827:31839 MakeRaw union_list_ok
R31867:31870 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R31871:31874 Coq.Sorting.Sorted <> sort syndef
R31882:31891 Coq.MSets.MSetRBT MakeRaw union_list def
R31899:31901 Coq.MSets.MSetRBT <> acc var
R31896:31897 Coq.MSets.MSetRBT <> l2 var
R31893:31894 Coq.MSets.MSetRBT <> l1 var
R31876:31879 Coq.MSets.MSetRBT X lt defax
R31854:31856 Coq.MSets.MSetRBT MakeRaw INV rec
R31864:31866 Coq.MSets.MSetRBT <> acc var
R31861:31862 Coq.MSets.MSetRBT <> l2 var
R31858:31859 Coq.MSets.MSetRBT <> l1 var
R32031:32037 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R32040:32046 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R32031:32037 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R32040:32046 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R32066:32072 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R32066:32072 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R32097:32110 Coq.MSets.MSetRBT X compare_spec prfax
R32097:32110 Coq.MSets.MSetRBT X compare_spec prfax
R32145:32150 Coq.MSets.MSetRBT MakeRaw INV_eq thm
R32145:32150 Coq.MSets.MSetRBT MakeRaw INV_eq thm
R32179:32180 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R32179:32180 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R32195:32200 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R32195:32200 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R32233:32239 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R32242:32247 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R32233:32239 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R32242:32247 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R32267:32273 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R32267:32273 Coq.MSets.MSetRBT MakeRaw INV_sym thm
inst 32291:32305 MakeRaw linear_union_ok
R32315:32316 Coq.MSets.MSetRBT MakeRaw Ok class
R32318:32319 Coq.MSets.MSetRBT <> s1 var
R32322:32323 Coq.MSets.MSetRBT MakeRaw Ok class
R32325:32326 Coq.MSets.MSetRBT <> s2 var
R32332:32333 Coq.MSets.MSetRBT MakeRaw Ok class
R32336:32347 Coq.MSets.MSetRBT MakeRaw linear_union def
R32352:32353 Coq.MSets.MSetRBT <> s2 var
R32349:32350 Coq.MSets.MSetRBT <> s1 var
R32372:32383 Coq.MSets.MSetRBT MakeRaw linear_union def
R32396:32405 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R32408:32420 Coq.MSets.MSetRBT MakeRaw union_list_ok thm
R32423:32430 Coq.MSets.MSetRBT MakeRaw INV_init thm
R32396:32405 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R32408:32420 Coq.MSets.MSetRBT MakeRaw union_list_ok thm
R32423:32430 Coq.MSets.MSetRBT MakeRaw INV_init thm
inst 32448:32458 MakeRaw fold_add_ok
R32468:32469 Coq.MSets.MSetRBT MakeRaw Ok class
R32471:32472 Coq.MSets.MSetRBT <> s1 var
R32475:32476 Coq.MSets.MSetRBT MakeRaw Ok class
R32478:32479 Coq.MSets.MSetRBT <> s2 var
R32485:32486 Coq.MSets.MSetRBT MakeRaw Ok class
R32489:32492 Coq.MSets.MSetRBT MakeRaw fold def
R32501:32502 Coq.MSets.MSetRBT <> s2 var
R32498:32499 Coq.MSets.MSetRBT <> s1 var
R32494:32496 Coq.MSets.MSetRBT MakeRaw add def
R32522:32530 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R32536:32554 Coq.Lists.List <> fold_left_rev_right thm
R32522:32530 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R32522:32530 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R32536:32554 Coq.Lists.List <> fold_left_rev_right thm
R32536:32554 Coq.Lists.List <> fold_left_rev_right thm
R32565:32567 Coq.MSets.MSetRBT MakeRaw elt def
R32587:32589 Coq.Lists.List <> rev def
R32592:32599 Coq.MSets.MSetRBT MakeRaw elements def
R32621:32624 Coq.Program.Basics <> flip def
R32587:32589 Coq.Lists.List <> rev def
R32592:32599 Coq.MSets.MSetRBT MakeRaw elements def
inst 32656:32663 MakeRaw union_ok
R32673:32674 Coq.MSets.MSetRBT MakeRaw Ok class
R32676:32677 Coq.MSets.MSetRBT <> s1 var
R32680:32681 Coq.MSets.MSetRBT MakeRaw Ok class
R32683:32684 Coq.MSets.MSetRBT <> s2 var
R32689:32690 Coq.MSets.MSetRBT MakeRaw Ok class
R32693:32697 Coq.MSets.MSetRBT MakeRaw union def
R32702:32703 Coq.MSets.MSetRBT <> s2 var
R32699:32700 Coq.MSets.MSetRBT <> s1 var
R32722:32726 Coq.MSets.MSetRBT MakeRaw union def
R32738:32751 Coq.MSets.MSetRBT MakeRaw compare_height def
prf 32775:32789 MakeRaw union_list_spec
R32839:32845 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R32806:32808 Coq.Lists.SetoidList <> InA ind
R32818:32827 Coq.MSets.MSetRBT MakeRaw union_list def
R32835:32837 Coq.MSets.MSetRBT <> acc var
R32832:32833 Coq.MSets.MSetRBT <> l2 var
R32829:32830 Coq.MSets.MSetRBT <> l1 var
R32815:32815 Coq.MSets.MSetRBT <> x var
R32810:32813 Coq.MSets.MSetRBT X eq defax
R32859:32862 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R32846:32848 Coq.Lists.SetoidList <> InA ind
R32857:32858 Coq.MSets.MSetRBT <> l1 var
R32855:32855 Coq.MSets.MSetRBT <> x var
R32850:32853 Coq.MSets.MSetRBT X eq defax
R32876:32879 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R32863:32865 Coq.Lists.SetoidList <> InA ind
R32874:32875 Coq.MSets.MSetRBT <> l2 var
R32872:32872 Coq.MSets.MSetRBT <> x var
R32867:32870 Coq.MSets.MSetRBT X eq defax
R32880:32882 Coq.Lists.SetoidList <> InA ind
R32891:32893 Coq.MSets.MSetRBT <> acc var
R32889:32889 Coq.MSets.MSetRBT <> x var
R32884:32887 Coq.MSets.MSetRBT X eq defax
R32983:32996 Coq.Lists.List <> rev_append_rev thm
R32983:32996 Coq.Lists.List <> rev_append_rev thm
R32983:32996 Coq.Lists.List <> rev_append_rev thm
R33076:33089 Coq.Lists.List <> rev_append_rev thm
R33076:33089 Coq.Lists.List <> rev_append_rev thm
R33076:33089 Coq.Lists.List <> rev_append_rev thm
R33114:33127 Coq.MSets.MSetRBT X compare_spec prfax
R33114:33127 Coq.MSets.MSetRBT X compare_spec prfax
R33160:33167 Coq.Lists.SetoidList <> InA_cons thm
R33160:33167 Coq.Lists.SetoidList <> InA_cons thm
R33160:33167 Coq.Lists.SetoidList <> InA_cons thm
R33160:33167 Coq.Lists.SetoidList <> InA_cons thm
R33160:33167 Coq.Lists.SetoidList <> InA_cons thm
R33160:33167 Coq.Lists.SetoidList <> InA_cons thm
R33203:33204 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R33213:33220 Coq.Lists.SetoidList <> InA_cons thm
R33203:33204 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R33203:33204 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R33213:33220 Coq.Lists.SetoidList <> InA_cons thm
R33213:33220 Coq.Lists.SetoidList <> InA_cons thm
R33213:33220 Coq.Lists.SetoidList <> InA_cons thm
R33213:33220 Coq.Lists.SetoidList <> InA_cons thm
R33213:33220 Coq.Lists.SetoidList <> InA_cons thm
R33251:33258 Coq.Lists.SetoidList <> InA_cons thm
R33251:33258 Coq.Lists.SetoidList <> InA_cons thm
R33251:33258 Coq.Lists.SetoidList <> InA_cons thm
R33251:33258 Coq.Lists.SetoidList <> InA_cons thm
R33251:33258 Coq.Lists.SetoidList <> InA_cons thm
R33251:33258 Coq.Lists.SetoidList <> InA_cons thm
prf 33280:33296 MakeRaw linear_union_spec
R33335:33339 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R33309:33311 Coq.MSets.MSetRBT MakeRaw InT ind
R33316:33327 Coq.MSets.MSetRBT MakeRaw linear_union def
R33332:33333 Coq.MSets.MSetRBT <> s2 var
R33329:33330 Coq.MSets.MSetRBT <> s1 var
R33313:33313 Coq.MSets.MSetRBT <> x var
R33348:33351 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R33340:33342 Coq.MSets.MSetRBT MakeRaw InT ind
R33346:33347 Coq.MSets.MSetRBT <> s1 var
R33344:33344 Coq.MSets.MSetRBT <> x var
R33352:33354 Coq.MSets.MSetRBT MakeRaw InT ind
R33358:33359 Coq.MSets.MSetRBT <> s2 var
R33356:33356 Coq.MSets.MSetRBT <> x var
R33377:33388 Coq.MSets.MSetRBT MakeRaw linear_union def
R33400:33411 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R33414:33428 Coq.MSets.MSetRBT MakeRaw union_list_spec thm
R33432:33447 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R33400:33411 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R33400:33411 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R33414:33428 Coq.MSets.MSetRBT MakeRaw union_list_spec thm
R33414:33428 Coq.MSets.MSetRBT MakeRaw union_list_spec thm
R33432:33447 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R33432:33447 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R33432:33447 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R33432:33447 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R33460:33466 Coq.Lists.SetoidList <> InA_rev thm
R33469:33475 Coq.Lists.SetoidList <> InA_nil thm
R33479:33492 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33460:33466 Coq.Lists.SetoidList <> InA_rev thm
R33460:33466 Coq.Lists.SetoidList <> InA_rev thm
R33460:33466 Coq.Lists.SetoidList <> InA_rev thm
R33460:33466 Coq.Lists.SetoidList <> InA_rev thm
R33469:33475 Coq.Lists.SetoidList <> InA_nil thm
R33469:33475 Coq.Lists.SetoidList <> InA_nil thm
R33479:33492 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33479:33492 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33479:33492 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33479:33492 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
prf 33526:33538 MakeRaw fold_add_spec
R33573:33577 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R33551:33553 Coq.MSets.MSetRBT MakeRaw InT ind
R33558:33561 Coq.MSets.MSetRBT MakeRaw fold def
R33570:33571 Coq.MSets.MSetRBT <> s2 var
R33567:33568 Coq.MSets.MSetRBT <> s1 var
R33563:33565 Coq.MSets.MSetRBT MakeRaw add def
R33555:33555 Coq.MSets.MSetRBT <> x var
R33586:33589 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R33578:33580 Coq.MSets.MSetRBT MakeRaw InT ind
R33584:33585 Coq.MSets.MSetRBT <> s1 var
R33582:33582 Coq.MSets.MSetRBT <> x var
R33590:33592 Coq.MSets.MSetRBT MakeRaw InT ind
R33596:33597 Coq.MSets.MSetRBT <> s2 var
R33594:33594 Coq.MSets.MSetRBT <> x var
R33616:33624 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R33630:33648 Coq.Lists.List <> fold_left_rev_right thm
R33616:33624 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R33616:33624 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R33630:33648 Coq.Lists.List <> fold_left_rev_right thm
R33630:33648 Coq.Lists.List <> fold_left_rev_right thm
R33664:33677 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33687:33693 Coq.Lists.SetoidList <> InA_rev thm
R33664:33677 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33664:33677 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R33687:33693 Coq.Lists.SetoidList <> InA_rev thm
R33687:33693 Coq.Lists.SetoidList <> InA_rev thm
R33715:33717 Coq.MSets.MSetRBT MakeRaw elt def
R33737:33739 Coq.Lists.List <> rev def
R33742:33749 Coq.MSets.MSetRBT MakeRaw elements def
R33737:33739 Coq.Lists.List <> rev def
R33742:33749 Coq.MSets.MSetRBT MakeRaw elements def
R33775:33781 Coq.Lists.SetoidList <> InA_nil thm
R33775:33781 Coq.Lists.SetoidList <> InA_nil thm
R33775:33781 Coq.Lists.SetoidList <> InA_nil thm
R33801:33804 Coq.Program.Basics <> flip def
R33815:33823 Coq.MSets.MSetRBT MakeRaw add_spec' thm
R33831:33838 Coq.Lists.SetoidList <> InA_cons thm
R33815:33823 Coq.MSets.MSetRBT MakeRaw add_spec' thm
R33815:33823 Coq.MSets.MSetRBT MakeRaw add_spec' thm
R33831:33838 Coq.Lists.SetoidList <> InA_cons thm
R33831:33838 Coq.Lists.SetoidList <> InA_cons thm
prf 33860:33870 MakeRaw union_spec'
R33902:33906 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R33883:33885 Coq.MSets.MSetRBT MakeRaw InT ind
R33890:33894 Coq.MSets.MSetRBT MakeRaw union def
R33899:33900 Coq.MSets.MSetRBT <> s2 var
R33896:33897 Coq.MSets.MSetRBT <> s1 var
R33887:33887 Coq.MSets.MSetRBT <> x var
R33915:33918 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R33907:33909 Coq.MSets.MSetRBT MakeRaw InT ind
R33913:33914 Coq.MSets.MSetRBT <> s1 var
R33911:33911 Coq.MSets.MSetRBT <> x var
R33919:33921 Coq.MSets.MSetRBT MakeRaw InT ind
R33925:33926 Coq.MSets.MSetRBT <> s2 var
R33923:33923 Coq.MSets.MSetRBT <> x var
R33944:33948 Coq.MSets.MSetRBT MakeRaw union def
R33960:33973 Coq.MSets.MSetRBT MakeRaw compare_height def
R33985:34001 Coq.MSets.MSetRBT MakeRaw linear_union_spec thm
R33985:34001 Coq.MSets.MSetRBT MakeRaw linear_union_spec thm
R34013:34025 Coq.MSets.MSetRBT MakeRaw fold_add_spec thm
R34013:34025 Coq.MSets.MSetRBT MakeRaw fold_add_spec thm
R34039:34051 Coq.MSets.MSetRBT MakeRaw fold_add_spec thm
R34039:34051 Coq.MSets.MSetRBT MakeRaw fold_add_spec thm
R34039:34051 Coq.MSets.MSetRBT MakeRaw fold_add_spec thm
prf 34073:34082 MakeRaw union_spec
R34103:34104 Coq.MSets.MSetRBT MakeRaw Ok class
R34106:34107 Coq.MSets.MSetRBT <> s1 var
R34110:34111 Coq.MSets.MSetRBT MakeRaw Ok class
R34113:34114 Coq.MSets.MSetRBT <> s2 var
R34139:34143 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R34120:34122 Coq.MSets.MSetRBT MakeRaw InT ind
R34127:34131 Coq.MSets.MSetRBT MakeRaw union def
R34136:34137 Coq.MSets.MSetRBT <> s2 var
R34133:34134 Coq.MSets.MSetRBT <> s1 var
R34124:34124 Coq.MSets.MSetRBT <> y var
R34152:34155 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R34144:34146 Coq.MSets.MSetRBT MakeRaw InT ind
R34150:34151 Coq.MSets.MSetRBT <> s1 var
R34148:34148 Coq.MSets.MSetRBT <> y var
R34156:34158 Coq.MSets.MSetRBT MakeRaw InT ind
R34162:34163 Coq.MSets.MSetRBT <> s2 var
R34160:34160 Coq.MSets.MSetRBT <> y var
R34189:34199 Coq.MSets.MSetRBT MakeRaw union_spec' thm
R34189:34199 Coq.MSets.MSetRBT MakeRaw union_spec' thm
prf 34231:34243 MakeRaw inter_list_ok
R34271:34274 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34275:34278 Coq.Sorting.Sorted <> sort syndef
R34286:34295 Coq.MSets.MSetRBT MakeRaw inter_list def
R34303:34305 Coq.MSets.MSetRBT <> acc var
R34300:34301 Coq.MSets.MSetRBT <> l2 var
R34297:34298 Coq.MSets.MSetRBT <> l1 var
R34280:34283 Coq.MSets.MSetRBT X lt defax
R34258:34260 Coq.MSets.MSetRBT MakeRaw INV rec
R34268:34270 Coq.MSets.MSetRBT <> acc var
R34265:34266 Coq.MSets.MSetRBT <> l2 var
R34262:34263 Coq.MSets.MSetRBT <> l1 var
R34450:34463 Coq.MSets.MSetRBT X compare_spec prfax
R34450:34463 Coq.MSets.MSetRBT X compare_spec prfax
R34498:34503 Coq.MSets.MSetRBT MakeRaw INV_eq thm
R34498:34503 Coq.MSets.MSetRBT MakeRaw INV_eq thm
R34542:34548 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R34551:34558 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R34561:34567 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R34542:34548 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R34551:34558 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R34561:34567 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R34600:34607 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R34600:34607 Coq.MSets.MSetRBT MakeRaw INV_drop thm
inst 34632:34646 MakeRaw linear_inter_ok
R34656:34657 Coq.MSets.MSetRBT MakeRaw Ok class
R34659:34660 Coq.MSets.MSetRBT <> s1 var
R34663:34664 Coq.MSets.MSetRBT MakeRaw Ok class
R34666:34667 Coq.MSets.MSetRBT <> s2 var
R34673:34674 Coq.MSets.MSetRBT MakeRaw Ok class
R34677:34688 Coq.MSets.MSetRBT MakeRaw linear_inter def
R34693:34694 Coq.MSets.MSetRBT <> s2 var
R34690:34691 Coq.MSets.MSetRBT <> s1 var
R34713:34724 Coq.MSets.MSetRBT MakeRaw linear_inter def
R34737:34746 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R34749:34761 Coq.MSets.MSetRBT MakeRaw inter_list_ok thm
R34764:34771 Coq.MSets.MSetRBT MakeRaw INV_init thm
R34737:34746 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R34749:34761 Coq.MSets.MSetRBT MakeRaw inter_list_ok thm
R34764:34771 Coq.MSets.MSetRBT MakeRaw INV_init thm
inst 34789:34796 MakeRaw inter_ok
R34806:34807 Coq.MSets.MSetRBT MakeRaw Ok class
R34809:34810 Coq.MSets.MSetRBT <> s1 var
R34813:34814 Coq.MSets.MSetRBT MakeRaw Ok class
R34816:34817 Coq.MSets.MSetRBT <> s2 var
R34822:34823 Coq.MSets.MSetRBT MakeRaw Ok class
R34826:34830 Coq.MSets.MSetRBT MakeRaw inter def
R34835:34836 Coq.MSets.MSetRBT <> s2 var
R34832:34833 Coq.MSets.MSetRBT <> s1 var
R34855:34859 Coq.MSets.MSetRBT MakeRaw inter def
R34871:34884 Coq.MSets.MSetRBT MakeRaw compare_height def
prf 34908:34922 MakeRaw inter_list_spec
R34957:34961 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34980:34985 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35077:35077 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35019:35026 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R34986:34988 Coq.Lists.SetoidList <> InA ind
R34998:35007 Coq.MSets.MSetRBT MakeRaw inter_list def
R35015:35017 Coq.MSets.MSetRBT <> acc var
R35012:35013 Coq.MSets.MSetRBT <> l2 var
R35009:35010 Coq.MSets.MSetRBT <> l1 var
R34995:34995 Coq.MSets.MSetRBT <> x var
R34990:34993 Coq.MSets.MSetRBT X eq defax
R35027:35027 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R35058:35062 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R35041:35044 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R35028:35030 Coq.Lists.SetoidList <> InA ind
R35039:35040 Coq.MSets.MSetRBT <> l1 var
R35037:35037 Coq.MSets.MSetRBT <> x var
R35032:35035 Coq.MSets.MSetRBT X eq defax
R35045:35047 Coq.Lists.SetoidList <> InA ind
R35056:35057 Coq.MSets.MSetRBT <> l2 var
R35054:35054 Coq.MSets.MSetRBT <> x var
R35049:35052 Coq.MSets.MSetRBT X eq defax
R35063:35065 Coq.Lists.SetoidList <> InA ind
R35074:35076 Coq.MSets.MSetRBT <> acc var
R35072:35072 Coq.MSets.MSetRBT <> x var
R35067:35070 Coq.MSets.MSetRBT X eq defax
R34962:34965 Coq.Sorting.Sorted <> sort syndef
R34973:34975 Coq.Lists.List <> rev def
R34977:34978 Coq.MSets.MSetRBT <> l2 var
R34967:34970 Coq.MSets.MSetRBT X lt defax
R34939:34942 Coq.Sorting.Sorted <> sort syndef
R34950:34952 Coq.Lists.List <> rev def
R34954:34955 Coq.MSets.MSetRBT <> l1 var
R34944:34947 Coq.MSets.MSetRBT X lt defax
R35279:35292 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R35279:35292 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R35341:35354 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R35341:35354 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R35398:35411 Coq.MSets.MSetRBT X compare_spec prfax
R35398:35411 Coq.MSets.MSetRBT X compare_spec prfax
R35444:35451 Coq.Lists.SetoidList <> InA_cons thm
R35444:35451 Coq.Lists.SetoidList <> InA_cons thm
R35444:35451 Coq.Lists.SetoidList <> InA_cons thm
R35444:35451 Coq.Lists.SetoidList <> InA_cons thm
R35444:35451 Coq.Lists.SetoidList <> InA_cons thm
R35444:35451 Coq.Lists.SetoidList <> InA_cons thm
R35538:35541 Coq.MSets.MSetRBT X lt defax
R35538:35541 Coq.MSets.MSetRBT X lt defax
R35644:35647 Coq.MSets.MSetRBT X lt defax
R35644:35647 Coq.MSets.MSetRBT X lt defax
prf 35694:35710 MakeRaw linear_inter_spec
R35722:35723 Coq.MSets.MSetRBT MakeRaw Ok class
R35725:35726 Coq.MSets.MSetRBT <> s1 var
R35729:35730 Coq.MSets.MSetRBT MakeRaw Ok class
R35732:35733 Coq.MSets.MSetRBT <> s2 var
R35765:35769 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R35739:35741 Coq.MSets.MSetRBT MakeRaw InT ind
R35746:35757 Coq.MSets.MSetRBT MakeRaw linear_inter def
R35762:35763 Coq.MSets.MSetRBT <> s2 var
R35759:35760 Coq.MSets.MSetRBT <> s1 var
R35743:35743 Coq.MSets.MSetRBT <> x var
R35778:35781 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R35770:35772 Coq.MSets.MSetRBT MakeRaw InT ind
R35776:35777 Coq.MSets.MSetRBT <> s1 var
R35774:35774 Coq.MSets.MSetRBT <> x var
R35782:35784 Coq.MSets.MSetRBT MakeRaw InT ind
R35788:35789 Coq.MSets.MSetRBT <> s2 var
R35786:35786 Coq.MSets.MSetRBT <> x var
R35807:35818 Coq.MSets.MSetRBT MakeRaw linear_inter def
R35893:35906 Coq.Lists.List <> rev_involutive thm
R35831:35846 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R35849:35860 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R35863:35877 Coq.MSets.MSetRBT MakeRaw inter_list_spec thm
R35831:35846 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R35831:35846 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R35831:35846 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R35831:35846 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R35849:35860 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R35849:35860 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R35863:35877 Coq.MSets.MSetRBT MakeRaw inter_list_spec thm
R35893:35906 Coq.Lists.List <> rev_involutive thm
R35893:35906 Coq.Lists.List <> rev_involutive thm
R35893:35906 Coq.Lists.List <> rev_involutive thm
R35893:35906 Coq.Lists.List <> rev_involutive thm
R35863:35877 Coq.MSets.MSetRBT MakeRaw inter_list_spec thm
R35929:35935 Coq.Lists.SetoidList <> InA_rev thm
R35938:35944 Coq.Lists.SetoidList <> InA_nil thm
R35948:35961 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R35929:35935 Coq.Lists.SetoidList <> InA_rev thm
R35929:35935 Coq.Lists.SetoidList <> InA_rev thm
R35929:35935 Coq.Lists.SetoidList <> InA_rev thm
R35929:35935 Coq.Lists.SetoidList <> InA_rev thm
R35938:35944 Coq.Lists.SetoidList <> InA_nil thm
R35938:35944 Coq.Lists.SetoidList <> InA_nil thm
R35948:35961 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R35948:35961 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R35948:35961 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R35948:35961 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
inst 36003:36012 MakeRaw mem_proper
R36018:36019 Coq.MSets.MSetRBT MakeRaw Ok class
R36021:36021 Coq.MSets.MSetRBT <> s var
R36027:36032 Coq.Classes.Morphisms <> Proper class
R36064:36066 Coq.MSets.MSetRBT MakeRaw mem def
R36070:36070 Coq.MSets.MSetRBT <> s var
R36068:36068 Coq.MSets.MSetRBT <> k var
R36039:36043 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R36035:36038 Coq.MSets.MSetRBT X eq defax
R36044:36051 Coq.Init.Logic <> eq ind
R36103:36121 Coq.Bool.Bool <> eq_iff_eq_true thm
R36133:36140 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36103:36121 Coq.Bool.Bool <> eq_iff_eq_true thm
R36133:36140 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36133:36140 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36133:36140 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36133:36140 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36133:36140 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36133:36140 Coq.MSets.MSetRBT MakeRaw mem_spec thm
prf 36178:36187 MakeRaw inter_spec
R36199:36200 Coq.MSets.MSetRBT MakeRaw Ok class
R36202:36203 Coq.MSets.MSetRBT <> s1 var
R36206:36207 Coq.MSets.MSetRBT MakeRaw Ok class
R36209:36210 Coq.MSets.MSetRBT <> s2 var
R36235:36239 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R36216:36218 Coq.MSets.MSetRBT MakeRaw InT ind
R36223:36227 Coq.MSets.MSetRBT MakeRaw inter def
R36232:36233 Coq.MSets.MSetRBT <> s2 var
R36229:36230 Coq.MSets.MSetRBT <> s1 var
R36220:36220 Coq.MSets.MSetRBT <> y var
R36248:36251 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R36240:36242 Coq.MSets.MSetRBT MakeRaw InT ind
R36246:36247 Coq.MSets.MSetRBT <> s1 var
R36244:36244 Coq.MSets.MSetRBT <> y var
R36252:36254 Coq.MSets.MSetRBT MakeRaw InT ind
R36258:36259 Coq.MSets.MSetRBT <> s2 var
R36256:36256 Coq.MSets.MSetRBT <> y var
R36277:36281 Coq.MSets.MSetRBT MakeRaw inter def
R36293:36306 Coq.MSets.MSetRBT MakeRaw compare_height def
R36322:36338 Coq.MSets.MSetRBT MakeRaw linear_inter_spec thm
R36322:36338 Coq.MSets.MSetRBT MakeRaw linear_inter_spec thm
R36352:36362 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36365:36372 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36352:36362 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36352:36362 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36365:36372 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36365:36372 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36404:36414 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36417:36424 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36404:36414 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36404:36414 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R36417:36424 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R36417:36424 Coq.MSets.MSetRBT MakeRaw mem_spec thm
prf 36479:36490 MakeRaw diff_list_ok
R36518:36521 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36522:36525 Coq.Sorting.Sorted <> sort syndef
R36533:36541 Coq.MSets.MSetRBT MakeRaw diff_list def
R36549:36551 Coq.MSets.MSetRBT <> acc var
R36546:36547 Coq.MSets.MSetRBT <> l2 var
R36543:36544 Coq.MSets.MSetRBT <> l1 var
R36527:36530 Coq.MSets.MSetRBT X lt defax
R36505:36507 Coq.MSets.MSetRBT MakeRaw INV rec
R36515:36517 Coq.MSets.MSetRBT <> acc var
R36512:36513 Coq.MSets.MSetRBT <> l2 var
R36509:36510 Coq.MSets.MSetRBT <> l1 var
R36692:36700 Coq.MSets.MSetRBT MakeRaw diff_list def
R36710:36716 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R36710:36716 Coq.MSets.MSetRBT MakeRaw INV_rev thm
R36741:36754 Coq.MSets.MSetRBT X compare_spec prfax
R36741:36754 Coq.MSets.MSetRBT X compare_spec prfax
R36789:36796 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R36799:36805 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36808:36815 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R36818:36824 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36789:36796 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R36799:36805 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36808:36815 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R36818:36824 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36863:36869 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36872:36879 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R36882:36888 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36863:36869 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36872:36879 Coq.MSets.MSetRBT MakeRaw INV_drop thm
R36882:36888 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36921:36927 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36930:36935 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R36921:36927 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36930:36935 Coq.MSets.MSetRBT MakeRaw INV_lt thm
R36955:36961 Coq.MSets.MSetRBT MakeRaw INV_sym thm
R36955:36961 Coq.MSets.MSetRBT MakeRaw INV_sym thm
inst 36979:36991 MakeRaw diff_inter_ok
R37001:37002 Coq.MSets.MSetRBT MakeRaw Ok class
R37004:37005 Coq.MSets.MSetRBT <> s1 var
R37008:37009 Coq.MSets.MSetRBT MakeRaw Ok class
R37011:37012 Coq.MSets.MSetRBT <> s2 var
R37018:37019 Coq.MSets.MSetRBT MakeRaw Ok class
R37022:37032 Coq.MSets.MSetRBT MakeRaw linear_diff def
R37037:37038 Coq.MSets.MSetRBT <> s2 var
R37034:37035 Coq.MSets.MSetRBT <> s1 var
R37057:37068 Coq.MSets.MSetRBT MakeRaw linear_inter def
R37081:37090 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R37093:37104 Coq.MSets.MSetRBT MakeRaw diff_list_ok thm
R37107:37114 Coq.MSets.MSetRBT MakeRaw INV_init thm
R37081:37090 Coq.MSets.MSetRBT MakeRaw treeify_ok thm
R37093:37104 Coq.MSets.MSetRBT MakeRaw diff_list_ok thm
R37107:37114 Coq.MSets.MSetRBT MakeRaw INV_init thm
inst 37132:37145 MakeRaw fold_remove_ok
R37155:37156 Coq.MSets.MSetRBT MakeRaw Ok class
R37158:37159 Coq.MSets.MSetRBT <> s2 var
R37165:37166 Coq.MSets.MSetRBT MakeRaw Ok class
R37169:37172 Coq.MSets.MSetRBT MakeRaw fold def
R37184:37185 Coq.MSets.MSetRBT <> s2 var
R37181:37182 Coq.MSets.MSetRBT <> s1 var
R37174:37179 Coq.MSets.MSetRBT MakeRaw remove def
R37205:37213 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R37219:37237 Coq.Lists.List <> fold_left_rev_right thm
R37205:37213 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R37205:37213 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R37219:37237 Coq.Lists.List <> fold_left_rev_right thm
R37219:37237 Coq.Lists.List <> fold_left_rev_right thm
R37248:37250 Coq.MSets.MSetRBT MakeRaw elt def
R37270:37272 Coq.Lists.List <> rev def
R37275:37282 Coq.MSets.MSetRBT MakeRaw elements def
R37304:37307 Coq.Program.Basics <> flip def
R37270:37272 Coq.Lists.List <> rev def
R37275:37282 Coq.MSets.MSetRBT MakeRaw elements def
inst 37339:37345 MakeRaw diff_ok
R37355:37356 Coq.MSets.MSetRBT MakeRaw Ok class
R37358:37359 Coq.MSets.MSetRBT <> s1 var
R37362:37363 Coq.MSets.MSetRBT MakeRaw Ok class
R37365:37366 Coq.MSets.MSetRBT <> s2 var
R37371:37372 Coq.MSets.MSetRBT MakeRaw Ok class
R37375:37378 Coq.MSets.MSetRBT MakeRaw diff def
R37383:37384 Coq.MSets.MSetRBT <> s2 var
R37380:37381 Coq.MSets.MSetRBT <> s1 var
R37403:37406 Coq.MSets.MSetRBT MakeRaw diff def
R37418:37431 Coq.MSets.MSetRBT MakeRaw compare_height def
prf 37455:37468 MakeRaw diff_list_spec
R37503:37507 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37526:37531 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37623:37623 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37564:37571 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R37532:37534 Coq.Lists.SetoidList <> InA ind
R37544:37552 Coq.MSets.MSetRBT MakeRaw diff_list def
R37560:37562 Coq.MSets.MSetRBT <> acc var
R37557:37558 Coq.MSets.MSetRBT <> l2 var
R37554:37555 Coq.MSets.MSetRBT <> l1 var
R37541:37541 Coq.MSets.MSetRBT <> x var
R37536:37539 Coq.MSets.MSetRBT X eq defax
R37572:37572 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R37604:37608 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R37586:37589 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R37573:37575 Coq.Lists.SetoidList <> InA ind
R37584:37585 Coq.MSets.MSetRBT <> l1 var
R37582:37582 Coq.MSets.MSetRBT <> x var
R37577:37580 Coq.MSets.MSetRBT X eq defax
R37590:37590 Coq.Init.Logic <> ::type_scope:'~'_x not
R37591:37593 Coq.Lists.SetoidList <> InA ind
R37602:37603 Coq.MSets.MSetRBT <> l2 var
R37600:37600 Coq.MSets.MSetRBT <> x var
R37595:37598 Coq.MSets.MSetRBT X eq defax
R37609:37611 Coq.Lists.SetoidList <> InA ind
R37620:37622 Coq.MSets.MSetRBT <> acc var
R37618:37618 Coq.MSets.MSetRBT <> x var
R37613:37616 Coq.MSets.MSetRBT X eq defax
R37508:37511 Coq.Sorting.Sorted <> sort syndef
R37519:37521 Coq.Lists.List <> rev def
R37523:37524 Coq.MSets.MSetRBT <> l2 var
R37513:37516 Coq.MSets.MSetRBT X lt defax
R37485:37488 Coq.Sorting.Sorted <> sort syndef
R37496:37498 Coq.Lists.List <> rev def
R37500:37501 Coq.MSets.MSetRBT <> l1 var
R37490:37493 Coq.MSets.MSetRBT X lt defax
R37790:37803 Coq.Lists.List <> rev_append_rev thm
R37790:37803 Coq.Lists.List <> rev_append_rev thm
R37790:37803 Coq.Lists.List <> rev_append_rev thm
R37857:37870 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R37857:37870 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R37919:37932 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R37919:37932 Coq.MSets.MSetRBT MakeRaw sorted_app_inv thm
R37976:37989 Coq.MSets.MSetRBT X compare_spec prfax
R37976:37989 Coq.MSets.MSetRBT X compare_spec prfax
R38078:38081 Coq.MSets.MSetRBT X lt defax
R38078:38081 Coq.MSets.MSetRBT X lt defax
R38199:38202 Coq.MSets.MSetRBT X lt defax
R38199:38202 Coq.MSets.MSetRBT X lt defax
R38350:38353 Coq.MSets.MSetRBT X lt defax
R38350:38353 Coq.MSets.MSetRBT X lt defax
prf 38400:38415 MakeRaw linear_diff_spec
R38427:38428 Coq.MSets.MSetRBT MakeRaw Ok class
R38430:38431 Coq.MSets.MSetRBT <> s1 var
R38434:38435 Coq.MSets.MSetRBT MakeRaw Ok class
R38437:38438 Coq.MSets.MSetRBT <> s2 var
R38469:38473 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R38444:38446 Coq.MSets.MSetRBT MakeRaw InT ind
R38451:38461 Coq.MSets.MSetRBT MakeRaw linear_diff def
R38466:38467 Coq.MSets.MSetRBT <> s2 var
R38463:38464 Coq.MSets.MSetRBT <> s1 var
R38448:38448 Coq.MSets.MSetRBT <> x var
R38482:38485 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R38474:38476 Coq.MSets.MSetRBT MakeRaw InT ind
R38480:38481 Coq.MSets.MSetRBT <> s1 var
R38478:38478 Coq.MSets.MSetRBT <> x var
R38486:38486 Coq.Init.Logic <> ::type_scope:'~'_x not
R38487:38489 Coq.MSets.MSetRBT MakeRaw InT ind
R38493:38494 Coq.MSets.MSetRBT <> s2 var
R38491:38491 Coq.MSets.MSetRBT <> x var
R38512:38522 Coq.MSets.MSetRBT MakeRaw linear_diff def
R38596:38609 Coq.Lists.List <> rev_involutive thm
R38535:38550 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R38553:38564 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R38567:38580 Coq.MSets.MSetRBT MakeRaw diff_list_spec thm
R38535:38550 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R38535:38550 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R38535:38550 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R38535:38550 Coq.MSets.MSetRBT MakeRaw rev_elements_rev thm
R38553:38564 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R38553:38564 Coq.MSets.MSetRBT MakeRaw treeify_spec thm
R38567:38580 Coq.MSets.MSetRBT MakeRaw diff_list_spec thm
R38596:38609 Coq.Lists.List <> rev_involutive thm
R38596:38609 Coq.Lists.List <> rev_involutive thm
R38596:38609 Coq.Lists.List <> rev_involutive thm
R38596:38609 Coq.Lists.List <> rev_involutive thm
R38567:38580 Coq.MSets.MSetRBT MakeRaw diff_list_spec thm
R38632:38638 Coq.Lists.SetoidList <> InA_rev thm
R38641:38647 Coq.Lists.SetoidList <> InA_nil thm
R38651:38664 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38632:38638 Coq.Lists.SetoidList <> InA_rev thm
R38632:38638 Coq.Lists.SetoidList <> InA_rev thm
R38632:38638 Coq.Lists.SetoidList <> InA_rev thm
R38632:38638 Coq.Lists.SetoidList <> InA_rev thm
R38641:38647 Coq.Lists.SetoidList <> InA_nil thm
R38641:38647 Coq.Lists.SetoidList <> InA_nil thm
R38651:38664 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38651:38664 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38651:38664 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38651:38664 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
prf 38697:38712 MakeRaw fold_remove_spec
R38724:38725 Coq.MSets.MSetRBT MakeRaw Ok class
R38727:38728 Coq.MSets.MSetRBT <> s2 var
R38760:38764 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R38735:38737 Coq.MSets.MSetRBT MakeRaw InT ind
R38742:38745 Coq.MSets.MSetRBT MakeRaw fold def
R38757:38758 Coq.MSets.MSetRBT <> s2 var
R38754:38755 Coq.MSets.MSetRBT <> s1 var
R38747:38752 Coq.MSets.MSetRBT MakeRaw remove def
R38739:38739 Coq.MSets.MSetRBT <> x var
R38773:38776 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R38765:38767 Coq.MSets.MSetRBT MakeRaw InT ind
R38771:38772 Coq.MSets.MSetRBT <> s2 var
R38769:38769 Coq.MSets.MSetRBT <> x var
R38777:38777 Coq.Init.Logic <> ::type_scope:'~'_x not
R38778:38780 Coq.MSets.MSetRBT MakeRaw InT ind
R38784:38785 Coq.MSets.MSetRBT <> s1 var
R38782:38782 Coq.MSets.MSetRBT <> x var
R38804:38812 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R38818:38836 Coq.Lists.List <> fold_left_rev_right thm
R38804:38812 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R38804:38812 Coq.MSets.MSetRBT MakeRaw fold_spec thm
R38818:38836 Coq.Lists.List <> fold_left_rev_right thm
R38818:38836 Coq.Lists.List <> fold_left_rev_right thm
R38852:38865 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38875:38881 Coq.Lists.SetoidList <> InA_rev thm
R38852:38865 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38852:38865 Coq.MSets.MSetRBT MakeRaw elements_spec1 thm
R38875:38881 Coq.Lists.SetoidList <> InA_rev thm
R38875:38881 Coq.Lists.SetoidList <> InA_rev thm
R38903:38905 Coq.MSets.MSetRBT MakeRaw elt def
R38925:38927 Coq.Lists.List <> rev def
R38930:38937 Coq.MSets.MSetRBT MakeRaw elements def
R38925:38927 Coq.Lists.List <> rev def
R38930:38937 Coq.MSets.MSetRBT MakeRaw elements def
R38971:38977 Coq.Lists.SetoidList <> InA_nil thm
R38971:38977 Coq.Lists.SetoidList <> InA_nil thm
R38971:38977 Coq.Lists.SetoidList <> InA_nil thm
R39001:39004 Coq.Program.Basics <> flip def
R39020:39030 Coq.MSets.MSetRBT MakeRaw remove_spec thm
R39038:39045 Coq.Lists.SetoidList <> InA_cons thm
R39020:39030 Coq.MSets.MSetRBT MakeRaw remove_spec thm
R39020:39030 Coq.MSets.MSetRBT MakeRaw remove_spec thm
R39020:39030 Coq.MSets.MSetRBT MakeRaw remove_spec thm
R39038:39045 Coq.Lists.SetoidList <> InA_cons thm
R39038:39045 Coq.Lists.SetoidList <> InA_cons thm
prf 39110:39118 MakeRaw diff_spec
R39130:39131 Coq.MSets.MSetRBT MakeRaw Ok class
R39133:39134 Coq.MSets.MSetRBT <> s1 var
R39137:39138 Coq.MSets.MSetRBT MakeRaw Ok class
R39140:39141 Coq.MSets.MSetRBT <> s2 var
R39165:39169 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R39147:39149 Coq.MSets.MSetRBT MakeRaw InT ind
R39154:39157 Coq.MSets.MSetRBT MakeRaw diff def
R39162:39163 Coq.MSets.MSetRBT <> s2 var
R39159:39160 Coq.MSets.MSetRBT <> s1 var
R39151:39151 Coq.MSets.MSetRBT <> y var
R39178:39181 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R39170:39172 Coq.MSets.MSetRBT MakeRaw InT ind
R39176:39177 Coq.MSets.MSetRBT <> s1 var
R39174:39174 Coq.MSets.MSetRBT <> y var
R39182:39182 Coq.Init.Logic <> ::type_scope:'~'_x not
R39183:39185 Coq.MSets.MSetRBT MakeRaw InT ind
R39189:39190 Coq.MSets.MSetRBT <> s2 var
R39187:39187 Coq.MSets.MSetRBT <> y var
R39208:39211 Coq.MSets.MSetRBT MakeRaw diff def
R39223:39236 Coq.MSets.MSetRBT MakeRaw compare_height def
R39252:39267 Coq.MSets.MSetRBT MakeRaw linear_diff_spec thm
R39252:39267 Coq.MSets.MSetRBT MakeRaw linear_diff_spec thm
R39281:39291 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R39294:39311 Coq.Bool.Bool <> negb_true_iff thm
R39322:39344 Coq.Bool.Bool <> not_true_iff_false thm
R39347:39354 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R39281:39291 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R39281:39291 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R39281:39291 Coq.MSets.MSetRBT MakeRaw filter_spec thm
R39294:39311 Coq.Bool.Bool <> negb_true_iff thm
R39294:39311 Coq.Bool.Bool <> negb_true_iff thm
R39322:39344 Coq.Bool.Bool <> not_true_iff_false thm
R39322:39344 Coq.Bool.Bool <> not_true_iff_false thm
R39347:39354 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R39347:39354 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R39347:39354 Coq.MSets.MSetRBT MakeRaw mem_spec thm
R39412:39421 Coq.MSets.MSetRBT MakeRaw mem_proper inst
R39412:39421 Coq.MSets.MSetRBT MakeRaw mem_proper inst
R39437:39452 Coq.MSets.MSetRBT MakeRaw fold_remove_spec thm
R39437:39452 Coq.MSets.MSetRBT MakeRaw fold_remove_spec thm
R39465:39471 Coq.MSets.MSetRBT MakeRaw <> modtype
R39649:39666 Coq.Structures.Orders OrderedType <> mod
R39680:39686 Coq.MSets.MSetRBT MakeRaw <> mod
R39688:39688 Coq.MSets.MSetRBT X <> modtype
mod 39634:39645 <> BalanceProps
syndef 39708:39709 BalanceProps Rd
R39715:39718 Coq.MSets.MSetRBT M Node constr
R39720:39722 Coq.MSets.MSetRBT <> Red constr
syndef 39741:39742 BalanceProps Bk
R39748:39751 Coq.MSets.MSetRBT M Node constr
R39753:39757 Coq.MSets.MSetRBT <> Black constr
ind 40006:40008 BalanceProps rbt
constr 40038:40044 BalanceProps RB_Leaf
constr 40062:40066 BalanceProps RB_Rd
constr 40147:40151 BalanceProps RB_Bk
R40015:40018 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40023:40026 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40019:40022 Coq.MSets.MSetRBT M tree ind
R40012:40014 Coq.Init.Datatypes <> nat ind
R40015:40018 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40023:40026 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40019:40022 Coq.MSets.MSetRBT M tree ind
R40012:40014 Coq.Init.Datatypes <> nat ind
R40048:40050 Coq.MSets.MSetRBT <> rbt ind
R40054:40057 Coq.MSets.MSetRBT M Leaf constr
R40089:40092 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40101:40104 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40112:40115 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40123:40126 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40127:40129 Coq.MSets.MSetRBT <> rbt ind
R40134:40135 Coq.MSets.MSetRBT BalanceProps Rd syndef
R40141:40141 Coq.MSets.MSetRBT <> r var
R40139:40139 Coq.MSets.MSetRBT <> k var
R40137:40137 Coq.MSets.MSetRBT <> l var
R40131:40131 Coq.MSets.MSetRBT <> n var
R40116:40118 Coq.MSets.MSetRBT <> rbt ind
R40122:40122 Coq.MSets.MSetRBT <> r var
R40120:40120 Coq.MSets.MSetRBT <> n var
R40105:40107 Coq.MSets.MSetRBT <> rbt ind
R40111:40111 Coq.MSets.MSetRBT <> l var
R40109:40109 Coq.MSets.MSetRBT <> n var
R40093:40098 Coq.MSets.MSetRBT M notred def
R40100:40100 Coq.MSets.MSetRBT <> r var
R40081:40086 Coq.MSets.MSetRBT M notred def
R40088:40088 Coq.MSets.MSetRBT <> l var
R40170:40173 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40181:40184 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40185:40187 Coq.MSets.MSetRBT <> rbt ind
R40196:40197 Coq.MSets.MSetRBT BalanceProps Bk syndef
R40203:40203 Coq.MSets.MSetRBT <> r var
R40201:40201 Coq.MSets.MSetRBT <> k var
R40199:40199 Coq.MSets.MSetRBT <> l var
R40190:40190 Coq.Init.Datatypes <> S constr
R40192:40192 Coq.MSets.MSetRBT <> n var
R40174:40176 Coq.MSets.MSetRBT <> rbt ind
R40180:40180 Coq.MSets.MSetRBT <> r var
R40178:40178 Coq.MSets.MSetRBT <> n var
R40163:40165 Coq.MSets.MSetRBT <> rbt ind
R40169:40169 Coq.MSets.MSetRBT <> l var
R40167:40167 Coq.MSets.MSetRBT <> n var
ind 40437:40439 BalanceProps rrt
constr 40470:40474 BalanceProps RR_Rd
R40444:40446 Coq.Init.Datatypes <> nat ind
R40455:40458 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40451:40454 Coq.MSets.MSetRBT M tree ind
R40444:40446 Coq.Init.Datatypes <> nat ind
R40455:40458 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40451:40454 Coq.MSets.MSetRBT M tree ind
R40491:40494 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40502:40505 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40506:40508 Coq.MSets.MSetRBT <> rrt ind
R40513:40514 Coq.MSets.MSetRBT BalanceProps Rd syndef
R40520:40520 Coq.MSets.MSetRBT <> r var
R40518:40518 Coq.MSets.MSetRBT <> k var
R40516:40516 Coq.MSets.MSetRBT <> l var
R40510:40510 Coq.MSets.MSetRBT <> n var
R40495:40497 Coq.MSets.MSetRBT BalanceProps rbt ind
R40501:40501 Coq.MSets.MSetRBT <> r var
R40499:40499 Coq.MSets.MSetRBT <> n var
R40484:40486 Coq.MSets.MSetRBT BalanceProps rbt ind
R40490:40490 Coq.MSets.MSetRBT <> l var
R40488:40488 Coq.MSets.MSetRBT <> n var
ind 40800:40803 BalanceProps arbt
constr 40834:40839 BalanceProps ARB_RB
constr 40866:40871 BalanceProps ARB_RR
R40808:40810 Coq.Init.Datatypes <> nat ind
R40815:40818 Coq.MSets.MSetRBT M tree ind
R40808:40810 Coq.Init.Datatypes <> nat ind
R40815:40818 Coq.MSets.MSetRBT M tree ind
R40850:40853 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40854:40857 Coq.MSets.MSetRBT <> arbt ind
R40861:40861 Coq.MSets.MSetRBT <> t var
R40859:40859 Coq.MSets.MSetRBT <> n var
R40843:40845 Coq.MSets.MSetRBT BalanceProps rbt ind
R40849:40849 Coq.MSets.MSetRBT <> t var
R40847:40847 Coq.MSets.MSetRBT <> n var
R40882:40885 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R40886:40889 Coq.MSets.MSetRBT <> arbt ind
R40893:40893 Coq.MSets.MSetRBT <> t var
R40891:40891 Coq.MSets.MSetRBT <> n var
R40875:40877 Coq.MSets.MSetRBT BalanceProps rrt ind
R40881:40881 Coq.MSets.MSetRBT <> t var
R40879:40879 Coq.MSets.MSetRBT <> n var
ind 40990:40992 BalanceProps Rbt
constr 41007:41009 BalanceProps RBT
rec 40990:40992 BalanceProps Rbt
proj 41007:41009 BalanceProps RBT
R40997:41000 Coq.MSets.MSetRBT M tree ind
R41013:41019 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R41021:41022 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R41023:41025 Coq.MSets.MSetRBT BalanceProps rbt ind
R41029:41029 Coq.MSets.MSetRBT <> t var
R41027:41027 Coq.MSets.MSetRBT <> d var
def 41093:41099 BalanceProps rbt_ind
R41118:41120 Coq.MSets.MSetRBT BalanceProps rbt ind
R41157:41159 Coq.MSets.MSetRBT <> rbt ind
R41161:41163 Coq.MSets.MSetRBT <> rrt ind
R41165:41168 Coq.MSets.MSetRBT <> arbt ind
R41199:41204 Coq.MSets.MSetRBT M notred def
R41219:41219 Coq.Init.Logic <> I constr
R41330:41333 Coq.MSets.MSetRBT BalanceProps arbt ind
R41330:41333 Coq.MSets.MSetRBT BalanceProps arbt ind
prf 41429:41437 BalanceProps rr_nrr_rb
R41453:41456 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41468:41471 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41472:41474 Coq.MSets.MSetRBT BalanceProps rbt ind
R41478:41478 Coq.MSets.MSetRBT <> t var
R41476:41476 Coq.MSets.MSetRBT <> n var
R41457:41465 Coq.MSets.MSetRBT M notredred syndef
R41467:41467 Coq.MSets.MSetRBT <> t var
R41446:41448 Coq.MSets.MSetRBT BalanceProps rrt ind
R41452:41452 Coq.MSets.MSetRBT <> t var
R41450:41450 Coq.MSets.MSetRBT <> n var
prf 41607:41616 BalanceProps arb_nrr_rb
R41633:41636 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41648:41651 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41652:41654 Coq.MSets.MSetRBT BalanceProps rbt ind
R41658:41658 Coq.MSets.MSetRBT <> t var
R41656:41656 Coq.MSets.MSetRBT <> n var
R41637:41645 Coq.MSets.MSetRBT M notredred syndef
R41647:41647 Coq.MSets.MSetRBT <> t var
R41625:41628 Coq.MSets.MSetRBT BalanceProps arbt ind
R41632:41632 Coq.MSets.MSetRBT <> t var
R41630:41630 Coq.MSets.MSetRBT <> n var
prf 41699:41707 BalanceProps arb_nr_rb
R41724:41727 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41736:41739 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41740:41742 Coq.MSets.MSetRBT BalanceProps rbt ind
R41746:41746 Coq.MSets.MSetRBT <> t var
R41744:41744 Coq.MSets.MSetRBT <> n var
R41728:41733 Coq.MSets.MSetRBT M notred def
R41735:41735 Coq.MSets.MSetRBT <> t var
R41716:41719 Coq.MSets.MSetRBT BalanceProps arbt ind
R41723:41723 Coq.MSets.MSetRBT <> t var
R41721:41721 Coq.MSets.MSetRBT <> n var
def 41929:41936 BalanceProps redcarac
R41943:41947 Coq.MSets.MSetRBT M rcase def
R41979:41979 Coq.MSets.MSetRBT <> s var
prf 41989:41999 BalanceProps rb_maxdepth
R42014:42017 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42028:42031 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R42018:42025 Coq.MSets.MSetRBT M maxdepth def
R42027:42027 Coq.MSets.MSetRBT <> s var
R42035:42037 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R42033:42033 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R42034:42034 Coq.MSets.MSetRBT <> n var
R42038:42045 Coq.MSets.MSetRBT BalanceProps redcarac def
R42047:42047 Coq.MSets.MSetRBT <> s var
R42007:42009 Coq.MSets.MSetRBT BalanceProps rbt ind
R42013:42013 Coq.MSets.MSetRBT <> s var
R42011:42011 Coq.MSets.MSetRBT <> n var
R42099:42106 Coq.MSets.MSetRBT BalanceProps redcarac def
R42099:42106 Coq.MSets.MSetRBT BalanceProps redcarac def
R42153:42160 Coq.MSets.MSetRBT BalanceProps redcarac def
R42153:42160 Coq.MSets.MSetRBT BalanceProps redcarac def
R42241:42254 Coq.Arith.PeanoNat Nat add_succ_r thm
R42260:42275 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42241:42254 Coq.Arith.PeanoNat Nat add_succ_r thm
R42241:42254 Coq.Arith.PeanoNat Nat add_succ_r thm
R42260:42275 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42260:42275 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42291:42301 Coq.Arith.PeanoNat Nat max_lub thm
R42291:42301 Coq.Arith.PeanoNat Nat max_lub thm
R42325:42340 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42325:42340 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42325:42340 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42352:42362 Coq.Arith.PeanoNat Nat max_lub thm
R42372:42383 Coq.Arith.PeanoNat Nat le_trans thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42454:42464 Coq.Arith.PeanoNat Nat add_1_r thm
R42352:42362 Coq.Arith.PeanoNat Nat max_lub thm
R42372:42383 Coq.Arith.PeanoNat Nat le_trans thm
R42372:42383 Coq.Arith.PeanoNat Nat le_trans thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42454:42464 Coq.Arith.PeanoNat Nat add_1_r thm
R42454:42464 Coq.Arith.PeanoNat Nat add_1_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42454:42464 Coq.Arith.PeanoNat Nat add_1_r thm
R42454:42464 Coq.Arith.PeanoNat Nat add_1_r thm
R42454:42464 Coq.Arith.PeanoNat Nat add_1_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42454:42464 Coq.Arith.PeanoNat Nat add_1_r thm
R42454:42464 Coq.Arith.PeanoNat Nat add_1_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42454:42464 Coq.Arith.PeanoNat Nat add_1_r thm
R42454:42464 Coq.Arith.PeanoNat Nat add_1_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42454:42464 Coq.Arith.PeanoNat Nat add_1_r thm
R42454:42464 Coq.Arith.PeanoNat Nat add_1_r thm
R42454:42464 Coq.Arith.PeanoNat Nat add_1_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42440:42450 Coq.Arith.PeanoNat Nat add_0_r thm
R42454:42464 Coq.Arith.PeanoNat Nat add_1_r thm
R42454:42464 Coq.Arith.PeanoNat Nat add_1_r thm
prf 42496:42506 BalanceProps rb_mindepth
R42521:42524 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42539:42542 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R42526:42528 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R42525:42525 Coq.MSets.MSetRBT <> n var
R42529:42536 Coq.MSets.MSetRBT BalanceProps redcarac def
R42538:42538 Coq.MSets.MSetRBT <> s var
R42543:42550 Coq.MSets.MSetRBT M mindepth def
R42552:42552 Coq.MSets.MSetRBT <> s var
R42514:42516 Coq.MSets.MSetRBT BalanceProps rbt ind
R42520:42520 Coq.MSets.MSetRBT <> s var
R42518:42518 Coq.MSets.MSetRBT <> n var
R42606:42619 Coq.Arith.PeanoNat Nat add_succ_r thm
R42606:42619 Coq.Arith.PeanoNat Nat add_succ_r thm
R42606:42619 Coq.Arith.PeanoNat Nat add_succ_r thm
R42634:42649 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42634:42649 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42664:42671 Coq.MSets.MSetRBT BalanceProps redcarac def
R42664:42671 Coq.MSets.MSetRBT BalanceProps redcarac def
R42718:42725 Coq.MSets.MSetRBT BalanceProps redcarac def
R42718:42725 Coq.MSets.MSetRBT BalanceProps redcarac def
R42773:42783 Coq.Arith.PeanoNat Nat min_glb thm
R42773:42783 Coq.Arith.PeanoNat Nat min_glb thm
R42798:42813 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42798:42813 Coq.Arith.PeanoNat Nat succ_le_mono thm
R42824:42834 Coq.Arith.PeanoNat Nat add_0_r thm
R42824:42834 Coq.Arith.PeanoNat Nat add_0_r thm
R42824:42834 Coq.Arith.PeanoNat Nat add_0_r thm
R42846:42856 Coq.Arith.PeanoNat Nat min_glb thm
R42846:42856 Coq.Arith.PeanoNat Nat min_glb thm
prf 42889:42907 BalanceProps maxdepth_upperbound
R42918:42922 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42933:42936 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R42923:42930 Coq.MSets.MSetRBT M maxdepth def
R42932:42932 Coq.MSets.MSetRBT <> s var
R42938:42940 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R42941:42948 Coq.Arith.PeanoNat Nat log2 def
R42951:42951 Coq.Init.Datatypes <> S constr
R42954:42961 Coq.MSets.MSetRBT M cardinal def
R42963:42963 Coq.MSets.MSetRBT <> s var
R42913:42915 Coq.MSets.MSetRBT BalanceProps Rbt class
R42917:42917 Coq.MSets.MSetRBT <> s var
R42998:43009 Coq.Arith.PeanoNat Nat le_trans thm
R43020:43030 Coq.MSets.MSetRBT BalanceProps rb_maxdepth thm
R42998:43009 Coq.Arith.PeanoNat Nat le_trans thm
R43020:43030 Coq.MSets.MSetRBT BalanceProps rb_maxdepth thm
R43058:43059 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R43072:43072 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R43061:43061 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R43062:43069 Coq.MSets.MSetRBT BalanceProps redcarac def
R43058:43059 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R43072:43072 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R43061:43061 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R43062:43069 Coq.MSets.MSetRBT BalanceProps redcarac def
R43087:43105 Coq.Arith.PeanoNat Nat mul_add_distr_l thm
R43087:43105 Coq.Arith.PeanoNat Nat mul_add_distr_l thm
R43087:43105 Coq.Arith.PeanoNat Nat mul_add_distr_l thm
R43114:43130 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R43114:43130 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R43147:43157 Coq.Arith.PeanoNat Nat mul_1_l thm
R43147:43157 Coq.Arith.PeanoNat Nat mul_1_l thm
R43147:43157 Coq.Arith.PeanoNat Nat mul_1_l thm
R43171:43187 Coq.Arith.PeanoNat Nat mul_le_mono_r thm
R43171:43187 Coq.Arith.PeanoNat Nat mul_le_mono_r thm
R43219:43235 Coq.Arith.PeanoNat Nat mul_le_mono_l thm
R43219:43235 Coq.Arith.PeanoNat Nat mul_le_mono_l thm
R43255:43262 Coq.MSets.MSetRBT M mindepth def
R43255:43262 Coq.MSets.MSetRBT M mindepth def
R43283:43293 Coq.MSets.MSetRBT BalanceProps rb_mindepth thm
R43283:43293 Coq.MSets.MSetRBT BalanceProps rb_mindepth thm
R43307:43327 Coq.MSets.MSetRBT M mindepth_log_cardinal thm
R43307:43327 Coq.MSets.MSetRBT M mindepth_log_cardinal thm
prf 43342:43360 BalanceProps maxdepth_lowerbound
R43373:43377 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43399:43401 Coq.Init.Peano <> ::nat_scope:x_'<'_x not
R43378:43385 Coq.Arith.PeanoNat Nat log2 def
R43388:43395 Coq.MSets.MSetRBT M cardinal def
R43397:43397 Coq.MSets.MSetRBT <> s var
R43402:43409 Coq.MSets.MSetRBT M maxdepth def
R43411:43411 Coq.MSets.MSetRBT <> s var
R43367:43368 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R43366:43366 Coq.MSets.MSetRBT <> s var
R43369:43372 Coq.MSets.MSetRBT M Leaf constr
R43428:43448 Coq.MSets.MSetRBT M maxdepth_log_cardinal thm
R43428:43448 Coq.MSets.MSetRBT M maxdepth_log_cardinal thm
prf 43485:43496 BalanceProps singleton_rb
R43502:43504 Coq.MSets.MSetRBT BalanceProps Rbt class
R43507:43515 Coq.MSets.MSetRBT M singleton def
R43517:43517 Coq.MSets.MSetRBT <> x var
R43536:43544 Coq.MSets.MSetRBT M singleton def
prf 43612:43623 BalanceProps makeBlack_rb
R43639:43642 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43643:43645 Coq.MSets.MSetRBT BalanceProps Rbt class
R43648:43656 Coq.MSets.MSetRBT M makeBlack def
R43658:43658 Coq.MSets.MSetRBT <> t var
R43631:43634 Coq.MSets.MSetRBT BalanceProps arbt ind
R43638:43638 Coq.MSets.MSetRBT <> t var
R43636:43636 Coq.MSets.MSetRBT <> n var
R43747:43747 Coq.Init.Datatypes <> S constr
R43747:43747 Coq.Init.Datatypes <> S constr
R43747:43747 Coq.Init.Datatypes <> S constr
prf 43797:43806 BalanceProps makeRed_rr
R43826:43829 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43838:43841 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43842:43844 Coq.MSets.MSetRBT BalanceProps rrt ind
R43849:43855 Coq.MSets.MSetRBT M makeRed def
R43857:43857 Coq.MSets.MSetRBT <> t var
R43846:43846 Coq.MSets.MSetRBT <> n var
R43830:43835 Coq.MSets.MSetRBT M notred def
R43837:43837 Coq.MSets.MSetRBT <> t var
R43815:43817 Coq.MSets.MSetRBT BalanceProps rbt ind
R43825:43825 Coq.MSets.MSetRBT <> t var
R43820:43820 Coq.Init.Datatypes <> S constr
R43822:43822 Coq.MSets.MSetRBT <> n var
prf 43950:43956 BalanceProps lbal_rb
R43977:43980 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43988:43991 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43992:43994 Coq.MSets.MSetRBT BalanceProps rbt ind
R44003:44006 Coq.MSets.MSetRBT M lbal def
R44012:44012 Coq.MSets.MSetRBT <> r var
R44010:44010 Coq.MSets.MSetRBT <> k var
R44008:44008 Coq.MSets.MSetRBT <> l var
R43997:43997 Coq.Init.Datatypes <> S constr
R43999:43999 Coq.MSets.MSetRBT <> n var
R43981:43983 Coq.MSets.MSetRBT BalanceProps rbt ind
R43987:43987 Coq.MSets.MSetRBT <> r var
R43985:43985 Coq.MSets.MSetRBT <> n var
R43969:43972 Coq.MSets.MSetRBT BalanceProps arbt ind
R43976:43976 Coq.MSets.MSetRBT <> l var
R43974:43974 Coq.MSets.MSetRBT <> n var
R44028:44037 Coq.MSets.MSetRBT M lbal_match thm
R44028:44037 Coq.MSets.MSetRBT M lbal_match thm
prf 44081:44087 BalanceProps rbal_rb
R44107:44110 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44119:44122 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44123:44125 Coq.MSets.MSetRBT BalanceProps rbt ind
R44134:44137 Coq.MSets.MSetRBT M rbal def
R44143:44143 Coq.MSets.MSetRBT <> r var
R44141:44141 Coq.MSets.MSetRBT <> k var
R44139:44139 Coq.MSets.MSetRBT <> l var
R44128:44128 Coq.Init.Datatypes <> S constr
R44130:44130 Coq.MSets.MSetRBT <> n var
R44111:44114 Coq.MSets.MSetRBT BalanceProps arbt ind
R44118:44118 Coq.MSets.MSetRBT <> r var
R44116:44116 Coq.MSets.MSetRBT <> n var
R44100:44102 Coq.MSets.MSetRBT BalanceProps rbt ind
R44106:44106 Coq.MSets.MSetRBT <> l var
R44104:44104 Coq.MSets.MSetRBT <> n var
R44159:44168 Coq.MSets.MSetRBT M rbal_match thm
R44159:44168 Coq.MSets.MSetRBT M rbal_match thm
prf 44212:44219 BalanceProps rbal'_rb
R44239:44242 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44251:44254 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44255:44257 Coq.MSets.MSetRBT BalanceProps rbt ind
R44266:44270 Coq.MSets.MSetRBT M rbal' def
R44276:44276 Coq.MSets.MSetRBT <> r var
R44274:44274 Coq.MSets.MSetRBT <> k var
R44272:44272 Coq.MSets.MSetRBT <> l var
R44260:44260 Coq.Init.Datatypes <> S constr
R44262:44262 Coq.MSets.MSetRBT <> n var
R44243:44246 Coq.MSets.MSetRBT BalanceProps arbt ind
R44250:44250 Coq.MSets.MSetRBT <> r var
R44248:44248 Coq.MSets.MSetRBT <> n var
R44232:44234 Coq.MSets.MSetRBT BalanceProps rbt ind
R44238:44238 Coq.MSets.MSetRBT <> l var
R44236:44236 Coq.MSets.MSetRBT <> n var
R44292:44302 Coq.MSets.MSetRBT M rbal'_match thm
R44292:44302 Coq.MSets.MSetRBT M rbal'_match thm
prf 44346:44353 BalanceProps lbalS_rb
R44374:44377 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44389:44392 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44401:44404 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44405:44407 Coq.MSets.MSetRBT BalanceProps rbt ind
R44416:44420 Coq.MSets.MSetRBT M lbalS def
R44426:44426 Coq.MSets.MSetRBT <> r var
R44424:44424 Coq.MSets.MSetRBT <> x var
R44422:44422 Coq.MSets.MSetRBT <> l var
R44410:44410 Coq.Init.Datatypes <> S constr
R44412:44412 Coq.MSets.MSetRBT <> n var
R44393:44398 Coq.MSets.MSetRBT M notred def
R44400:44400 Coq.MSets.MSetRBT <> r var
R44378:44380 Coq.MSets.MSetRBT BalanceProps rbt ind
R44388:44388 Coq.MSets.MSetRBT <> r var
R44383:44383 Coq.Init.Datatypes <> S constr
R44385:44385 Coq.MSets.MSetRBT <> n var
R44366:44369 Coq.MSets.MSetRBT BalanceProps arbt ind
R44373:44373 Coq.MSets.MSetRBT <> l var
R44371:44371 Coq.MSets.MSetRBT <> n var
R44524:44534 Coq.MSets.MSetRBT M lbalS_match thm
R44524:44534 Coq.MSets.MSetRBT M lbalS_match thm
R44582:44589 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
R44582:44589 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
prf 44610:44618 BalanceProps lbalS_arb
R44639:44642 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44654:44657 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44658:44661 Coq.MSets.MSetRBT BalanceProps arbt ind
R44670:44674 Coq.MSets.MSetRBT M lbalS def
R44680:44680 Coq.MSets.MSetRBT <> r var
R44678:44678 Coq.MSets.MSetRBT <> x var
R44676:44676 Coq.MSets.MSetRBT <> l var
R44664:44664 Coq.Init.Datatypes <> S constr
R44666:44666 Coq.MSets.MSetRBT <> n var
R44643:44645 Coq.MSets.MSetRBT BalanceProps rbt ind
R44653:44653 Coq.MSets.MSetRBT <> r var
R44648:44648 Coq.Init.Datatypes <> S constr
R44650:44650 Coq.MSets.MSetRBT <> n var
R44631:44634 Coq.MSets.MSetRBT BalanceProps arbt ind
R44638:44638 Coq.MSets.MSetRBT <> l var
R44636:44636 Coq.MSets.MSetRBT <> n var
R44697:44707 Coq.MSets.MSetRBT M lbalS_match thm
R44697:44707 Coq.MSets.MSetRBT M lbalS_match thm
R44881:44888 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
R44891:44900 Coq.MSets.MSetRBT BalanceProps makeRed_rr thm
R44881:44888 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
R44891:44900 Coq.MSets.MSetRBT BalanceProps makeRed_rr thm
R44920:44927 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
R44920:44927 Coq.MSets.MSetRBT BalanceProps rbal'_rb thm
prf 44948:44955 BalanceProps rbalS_rb
R44979:44982 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44991:44994 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45003:45006 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45007:45009 Coq.MSets.MSetRBT BalanceProps rbt ind
R45018:45022 Coq.MSets.MSetRBT M rbalS def
R45028:45028 Coq.MSets.MSetRBT <> r var
R45026:45026 Coq.MSets.MSetRBT <> x var
R45024:45024 Coq.MSets.MSetRBT <> l var
R45012:45012 Coq.Init.Datatypes <> S constr
R45014:45014 Coq.MSets.MSetRBT <> n var
R44995:44998 Coq.MSets.MSetRBT BalanceProps arbt ind
R45002:45002 Coq.MSets.MSetRBT <> r var
R45000:45000 Coq.MSets.MSetRBT <> n var
R44983:44988 Coq.MSets.MSetRBT M notred def
R44990:44990 Coq.MSets.MSetRBT <> l var
R44968:44970 Coq.MSets.MSetRBT BalanceProps rbt ind
R44978:44978 Coq.MSets.MSetRBT <> l var
R44973:44973 Coq.Init.Datatypes <> S constr
R44975:44975 Coq.MSets.MSetRBT <> n var
R45126:45136 Coq.MSets.MSetRBT M rbalS_match thm
R45126:45136 Coq.MSets.MSetRBT M rbalS_match thm
R45184:45190 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R45184:45190 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
prf 45211:45219 BalanceProps rbalS_arb
R45243:45246 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45255:45258 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45259:45262 Coq.MSets.MSetRBT BalanceProps arbt ind
R45271:45275 Coq.MSets.MSetRBT M rbalS def
R45281:45281 Coq.MSets.MSetRBT <> r var
R45279:45279 Coq.MSets.MSetRBT <> x var
R45277:45277 Coq.MSets.MSetRBT <> l var
R45265:45265 Coq.Init.Datatypes <> S constr
R45267:45267 Coq.MSets.MSetRBT <> n var
R45247:45250 Coq.MSets.MSetRBT BalanceProps arbt ind
R45254:45254 Coq.MSets.MSetRBT <> r var
R45252:45252 Coq.MSets.MSetRBT <> n var
R45232:45234 Coq.MSets.MSetRBT BalanceProps rbt ind
R45242:45242 Coq.MSets.MSetRBT <> l var
R45237:45237 Coq.Init.Datatypes <> S constr
R45239:45239 Coq.MSets.MSetRBT <> n var
R45298:45308 Coq.MSets.MSetRBT M rbalS_match thm
R45298:45308 Coq.MSets.MSetRBT M rbalS_match thm
R45482:45488 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R45491:45500 Coq.MSets.MSetRBT BalanceProps makeRed_rr thm
R45482:45488 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R45491:45500 Coq.MSets.MSetRBT BalanceProps makeRed_rr thm
R45520:45526 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R45520:45526 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
def 45712:45716 BalanceProps ifred
R45734:45738 Coq.MSets.MSetRBT M rcase def
R45770:45770 Coq.MSets.MSetRBT <> s var
R45767:45767 Coq.MSets.MSetRBT <> B var
R45754:45754 Coq.MSets.MSetRBT <> A var
prf 45780:45791 BalanceProps ifred_notred
R45809:45813 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45831:45831 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45825:45829 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R45814:45818 Coq.MSets.MSetRBT BalanceProps ifred def
R45824:45824 Coq.MSets.MSetRBT <> B var
R45822:45822 Coq.MSets.MSetRBT <> A var
R45820:45820 Coq.MSets.MSetRBT <> s var
R45830:45830 Coq.MSets.MSetRBT <> B var
R45801:45806 Coq.MSets.MSetRBT M notred def
R45808:45808 Coq.MSets.MSetRBT <> s var
prf 45894:45901 BalanceProps ifred_or
R45922:45925 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45927:45928 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R45926:45926 Coq.MSets.MSetRBT <> A var
R45929:45929 Coq.MSets.MSetRBT <> B var
R45911:45915 Coq.MSets.MSetRBT BalanceProps ifred def
R45921:45921 Coq.MSets.MSetRBT <> B var
R45919:45919 Coq.MSets.MSetRBT <> A var
R45917:45917 Coq.MSets.MSetRBT <> s var
prf 45992:46000 BalanceProps ins_rr_rb
R46017:46021 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46022:46026 Coq.MSets.MSetRBT BalanceProps ifred def
R46049:46051 Coq.MSets.MSetRBT BalanceProps rbt ind
R46056:46058 Coq.MSets.MSetRBT M ins def
R46062:46062 Coq.MSets.MSetRBT <> s var
R46060:46060 Coq.MSets.MSetRBT <> x var
R46053:46053 Coq.MSets.MSetRBT <> n var
R46031:46033 Coq.MSets.MSetRBT BalanceProps rrt ind
R46038:46040 Coq.MSets.MSetRBT M ins def
R46044:46044 Coq.MSets.MSetRBT <> s var
R46042:46042 Coq.MSets.MSetRBT <> x var
R46035:46035 Coq.MSets.MSetRBT <> n var
R46028:46028 Coq.MSets.MSetRBT <> s var
R46010:46012 Coq.MSets.MSetRBT BalanceProps rbt ind
R46016:46016 Coq.MSets.MSetRBT <> s var
R46014:46014 Coq.MSets.MSetRBT <> n var
R46160:46171 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R46160:46171 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R46160:46171 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R46226:46237 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R46226:46237 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R46226:46237 Coq.MSets.MSetRBT BalanceProps ifred_notred thm
R46260:46262 Coq.MSets.MSetRBT M ins def
R46270:46272 Coq.MSets.MSetRBT M ins def
R46270:46272 Coq.MSets.MSetRBT M ins def
R46348:46354 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R46348:46354 Coq.MSets.MSetRBT BalanceProps lbal_rb thm
R46372:46379 Coq.MSets.MSetRBT BalanceProps ifred_or thm
R46372:46379 Coq.MSets.MSetRBT BalanceProps ifred_or thm
R46410:46416 Coq.MSets.MSetRBT BalanceProps rbal_rb thm
R46410:46416 Coq.MSets.MSetRBT BalanceProps rbal_rb thm
R46434:46441 Coq.MSets.MSetRBT BalanceProps ifred_or thm
R46434:46441 Coq.MSets.MSetRBT BalanceProps ifred_or thm
prf 46474:46480 BalanceProps ins_arb
R46497:46500 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46501:46504 Coq.MSets.MSetRBT BalanceProps arbt ind
R46509:46511 Coq.MSets.MSetRBT M ins def
R46515:46515 Coq.MSets.MSetRBT <> s var
R46513:46513 Coq.MSets.MSetRBT <> x var
R46506:46506 Coq.MSets.MSetRBT <> n var
R46490:46492 Coq.MSets.MSetRBT BalanceProps rbt ind
R46496:46496 Coq.MSets.MSetRBT <> s var
R46494:46494 Coq.MSets.MSetRBT <> n var
R46544:46552 Coq.MSets.MSetRBT BalanceProps ins_rr_rb thm
R46558:46565 Coq.MSets.MSetRBT BalanceProps ifred_or thm
R46544:46552 Coq.MSets.MSetRBT BalanceProps ins_rr_rb thm
R46558:46565 Coq.MSets.MSetRBT BalanceProps ifred_or thm
inst 46599:46604 BalanceProps add_rb
R46617:46620 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46621:46623 Coq.MSets.MSetRBT BalanceProps Rbt class
R46626:46628 Coq.MSets.MSetRBT M add def
R46632:46632 Coq.MSets.MSetRBT <> s var
R46630:46630 Coq.MSets.MSetRBT <> x var
R46612:46614 Coq.MSets.MSetRBT BalanceProps Rbt class
R46616:46616 Coq.MSets.MSetRBT <> s var
R46665:46667 Coq.MSets.MSetRBT M add def
R46681:46692 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R46698:46704 Coq.MSets.MSetRBT BalanceProps ins_arb thm
R46681:46692 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R46698:46704 Coq.MSets.MSetRBT BalanceProps ins_arb thm
prf 46797:46809 BalanceProps append_arb_rb
R46826:46829 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46837:46841 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46842:46842 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R46862:46868 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R46911:46911 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R46843:46846 Coq.MSets.MSetRBT BalanceProps arbt ind
R46851:46856 Coq.MSets.MSetRBT M append def
R46860:46860 Coq.MSets.MSetRBT <> r var
R46858:46858 Coq.MSets.MSetRBT <> l var
R46848:46848 Coq.MSets.MSetRBT <> n var
R46877:46880 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46889:46892 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46893:46895 Coq.MSets.MSetRBT BalanceProps rbt ind
R46900:46905 Coq.MSets.MSetRBT M append def
R46909:46909 Coq.MSets.MSetRBT <> r var
R46907:46907 Coq.MSets.MSetRBT <> l var
R46897:46897 Coq.MSets.MSetRBT <> n var
R46881:46886 Coq.MSets.MSetRBT M notred def
R46888:46888 Coq.MSets.MSetRBT <> r var
R46869:46874 Coq.MSets.MSetRBT M notred def
R46876:46876 Coq.MSets.MSetRBT <> l var
R46830:46832 Coq.MSets.MSetRBT BalanceProps rbt ind
R46836:46836 Coq.MSets.MSetRBT <> r var
R46834:46834 Coq.MSets.MSetRBT <> n var
R46819:46821 Coq.MSets.MSetRBT BalanceProps rbt ind
R46825:46825 Coq.MSets.MSetRBT <> l var
R46823:46823 Coq.MSets.MSetRBT <> n var
R47058:47072 Coq.MSets.MSetRBT M append_rr_match thm
R47058:47072 Coq.MSets.MSetRBT M append_rr_match thm
R47123:47125 Coq.MSets.MSetRBT BalanceProps rbt ind
R47130:47131 Coq.MSets.MSetRBT BalanceProps Rd syndef
R47123:47125 Coq.MSets.MSetRBT BalanceProps rbt ind
R47130:47131 Coq.MSets.MSetRBT BalanceProps Rd syndef
R47442:47456 Coq.MSets.MSetRBT M append_bb_match thm
R47442:47456 Coq.MSets.MSetRBT M append_bb_match thm
R47551:47558 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
R47551:47558 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
R47551:47558 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
prf 47619:47625 BalanceProps del_arb
prf 47685:47690 BalanceProps del_rb
R47646:47649 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47659:47662 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47663:47666 Coq.MSets.MSetRBT BalanceProps arbt ind
R47671:47673 Coq.MSets.MSetRBT M del def
R47677:47677 Coq.MSets.MSetRBT <> s var
R47675:47675 Coq.MSets.MSetRBT <> x var
R47668:47668 Coq.MSets.MSetRBT <> n var
R47650:47656 Coq.MSets.MSetRBT M isblack def
R47658:47658 Coq.MSets.MSetRBT <> s var
R47635:47637 Coq.MSets.MSetRBT BalanceProps rbt ind
R47645:47645 Coq.MSets.MSetRBT <> s var
R47640:47640 Coq.Init.Datatypes <> S constr
R47642:47642 Coq.MSets.MSetRBT <> n var
R47707:47710 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47721:47724 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R47725:47727 Coq.MSets.MSetRBT BalanceProps rbt ind
R47732:47734 Coq.MSets.MSetRBT M del def
R47738:47738 Coq.MSets.MSetRBT <> s var
R47736:47736 Coq.MSets.MSetRBT <> x var
R47729:47729 Coq.MSets.MSetRBT <> n var
R47711:47718 Coq.MSets.MSetRBT M notblack def
R47720:47720 Coq.MSets.MSetRBT <> s var
R47700:47702 Coq.MSets.MSetRBT BalanceProps rbt ind
R47706:47706 Coq.MSets.MSetRBT <> s var
R47704:47704 Coq.MSets.MSetRBT <> n var
R47827:47839 Coq.MSets.MSetRBT BalanceProps append_arb_rb thm
R47827:47839 Coq.MSets.MSetRBT BalanceProps append_arb_rb thm
R47975:47983 Coq.MSets.MSetRBT BalanceProps lbalS_arb thm
R47975:47983 Coq.MSets.MSetRBT BalanceProps lbalS_arb thm
R48113:48121 Coq.MSets.MSetRBT BalanceProps rbalS_arb thm
R48113:48121 Coq.MSets.MSetRBT BalanceProps rbalS_arb thm
R48226:48238 Coq.MSets.MSetRBT BalanceProps append_arb_rb thm
R48226:48238 Coq.MSets.MSetRBT BalanceProps append_arb_rb thm
R48405:48412 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
R48405:48412 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
R48405:48412 Coq.MSets.MSetRBT BalanceProps lbalS_rb thm
R48543:48550 Coq.MSets.MSetRBT BalanceProps rbalS_rb thm
R48543:48550 Coq.MSets.MSetRBT BalanceProps rbalS_rb thm
inst 48576:48584 BalanceProps remove_rb
R48597:48600 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48601:48603 Coq.MSets.MSetRBT BalanceProps Rbt class
R48606:48611 Coq.MSets.MSetRBT M remove def
R48615:48615 Coq.MSets.MSetRBT <> s var
R48613:48613 Coq.MSets.MSetRBT <> x var
R48592:48594 Coq.MSets.MSetRBT BalanceProps Rbt class
R48596:48596 Coq.MSets.MSetRBT <> s var
R48648:48653 Coq.MSets.MSetRBT M remove def
R48695:48706 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R48695:48706 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R48728:48739 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R48728:48739 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R48757:48762 Coq.MSets.MSetRBT BalanceProps del_rb thm
R48757:48762 Coq.MSets.MSetRBT BalanceProps del_rb thm
R48799:48810 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R48799:48810 Coq.MSets.MSetRBT BalanceProps makeBlack_rb thm
R48822:48828 Coq.MSets.MSetRBT BalanceProps del_arb thm
R48822:48828 Coq.MSets.MSetRBT BalanceProps del_arb thm
def 48880:48899 BalanceProps treeify_rb_invariant
R48915:48923 Coq.MSets.MSetRBT M treeify_t syndef
R48961:48966 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48990:48995 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R48967:48969 Coq.MSets.MSetRBT BalanceProps rbt ind
R48978:48980 Coq.Init.Datatypes <> fst def
R48983:48983 Coq.MSets.MSetRBT <> f var
R48985:48987 Coq.MSets.MSetRBT <> acc var
R48971:48975 Coq.MSets.MSetRBT <> depth var
R49023:49025 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49000:49002 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R48996:48999 Coq.MSets.MSetRBT <> size var
R49003:49008 Coq.Init.Datatypes <> length def
R49011:49013 Coq.Init.Datatypes <> snd def
R49016:49016 Coq.MSets.MSetRBT <> f var
R49018:49020 Coq.MSets.MSetRBT <> acc var
R49026:49031 Coq.Init.Datatypes <> length def
R49033:49035 Coq.MSets.MSetRBT <> acc var
R48947:48950 Coq.Init.Peano <> ::nat_scope:x_'<='_x not
R48943:48946 Coq.MSets.MSetRBT <> size var
R48951:48956 Coq.Init.Datatypes <> length def
R48958:48960 Coq.MSets.MSetRBT <> acc var
prf 49045:49059 BalanceProps treeify_zero_rb
R49063:49082 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R49088:49099 Coq.MSets.MSetRBT M treeify_zero def
prf 49149:49162 BalanceProps treeify_one_rb
R49166:49185 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R49191:49201 Coq.MSets.MSetRBT M treeify_one def
prf 49267:49281 BalanceProps treeify_cont_rb
R49339:49343 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49374:49378 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49403:49407 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49408:49427 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R49441:49452 Coq.MSets.MSetRBT M treeify_cont def
R49456:49456 Coq.MSets.MSetRBT <> g var
R49454:49454 Coq.MSets.MSetRBT <> f var
R49435:49435 Coq.Init.Datatypes <> S constr
R49437:49437 Coq.MSets.MSetRBT <> d var
R49429:49432 Coq.MSets.MSetRBT <> size var
R49383:49385 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49379:49382 Coq.MSets.MSetRBT <> size var
R49386:49386 Coq.Init.Datatypes <> S constr
R49394:49396 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R49389:49393 Coq.MSets.MSetRBT <> size1 var
R49397:49401 Coq.MSets.MSetRBT <> size2 var
R49344:49363 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R49373:49373 Coq.MSets.MSetRBT <> g var
R49371:49371 Coq.MSets.MSetRBT <> d var
R49365:49369 Coq.MSets.MSetRBT <> size2 var
R49309:49328 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R49338:49338 Coq.MSets.MSetRBT <> f var
R49336:49336 Coq.MSets.MSetRBT <> d var
R49330:49334 Coq.MSets.MSetRBT <> size1 var
R49501:49512 Coq.MSets.MSetRBT M treeify_cont def
R49710:49719 Coq.Arith.PeanoNat Nat lt_nge thm
R49710:49719 Coq.Arith.PeanoNat Nat lt_nge thm
R49905:49918 Coq.Arith.PeanoNat Nat add_succ_r thm
R49924:49939 Coq.Arith.PeanoNat Nat succ_le_mono thm
R49905:49918 Coq.Arith.PeanoNat Nat add_succ_r thm
R49905:49918 Coq.Arith.PeanoNat Nat add_succ_r thm
R49924:49939 Coq.Arith.PeanoNat Nat succ_le_mono thm
R49924:49939 Coq.Arith.PeanoNat Nat succ_le_mono thm
R49953:49969 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R49953:49969 Coq.Arith.PeanoNat Nat add_le_mono_l thm
R50024:50037 Coq.Arith.PeanoNat Nat add_succ_r thm
R50040:50052 Coq.Arith.PeanoNat Nat add_assoc thm
R50024:50037 Coq.Arith.PeanoNat Nat add_succ_r thm
R50024:50037 Coq.Arith.PeanoNat Nat add_succ_r thm
R50040:50052 Coq.Arith.PeanoNat Nat add_assoc thm
R50040:50052 Coq.Arith.PeanoNat Nat add_assoc thm
prf 50067:50080 BalanceProps treeify_aux_rb
R50087:50093 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R50095:50096 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R50107:50110 Coq.Init.Datatypes <> bool ind
R50116:50135 Coq.MSets.MSetRBT BalanceProps treeify_rb_invariant def
R50166:50176 Coq.MSets.MSetRBT M treeify_aux def
R50180:50180 Coq.MSets.MSetRBT <> n var
R50178:50178 Coq.MSets.MSetRBT <> b var
R50163:50163 Coq.MSets.MSetRBT <> d var
R50138:50143 Coq.MSets.MSetRBT M ifpred syndef
R50148:50157 Coq.PArith.BinPos Pos to_nat def
R50159:50159 Coq.MSets.MSetRBT <> n var
R50148:50157 Coq.PArith.BinPos Pos to_nat def
R50159:50159 Coq.MSets.MSetRBT <> n var
R50145:50145 Coq.MSets.MSetRBT <> b var
R50243:50243 Coq.Init.Datatypes <> S constr
R50243:50243 Coq.Init.Datatypes <> S constr
R50269:50283 Coq.MSets.MSetRBT BalanceProps treeify_cont_rb thm
R50299:50303 Coq.Init.Datatypes <> false constr
R50269:50283 Coq.MSets.MSetRBT BalanceProps treeify_cont_rb thm
R50299:50303 Coq.Init.Datatypes <> false constr
R50338:50351 Coq.PArith.Pnat Pos2Nat inj_xI thm
R50338:50351 Coq.PArith.Pnat Pos2Nat inj_xI thm
R50338:50351 Coq.PArith.Pnat Pos2Nat inj_xI thm
R50370:50383 Coq.PArith.Pnat Pos2Nat is_pos thm
R50370:50383 Coq.PArith.Pnat Pos2Nat is_pos thm
R50395:50408 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R50395:50408 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R50454:50464 Coq.Arith.PeanoNat Nat add_0_r thm
R50454:50464 Coq.Arith.PeanoNat Nat add_0_r thm
R50454:50464 Coq.Arith.PeanoNat Nat add_0_r thm
R50454:50464 Coq.Arith.PeanoNat Nat add_0_r thm
R50454:50464 Coq.Arith.PeanoNat Nat add_0_r thm
R50494:50507 Coq.Arith.PeanoNat Nat add_succ_r thm
R50510:50522 Coq.Arith.PeanoNat Nat succ_pred thm
R50494:50507 Coq.Arith.PeanoNat Nat add_succ_r thm
R50494:50507 Coq.Arith.PeanoNat Nat add_succ_r thm
R50510:50522 Coq.Arith.PeanoNat Nat succ_pred thm
R50510:50522 Coq.Arith.PeanoNat Nat succ_pred thm
R50510:50522 Coq.Arith.PeanoNat Nat succ_pred thm
R50545:50545 Coq.Init.Datatypes <> S constr
R50545:50545 Coq.Init.Datatypes <> S constr
R50571:50585 Coq.MSets.MSetRBT BalanceProps treeify_cont_rb thm
R50617:50620 Coq.Init.Datatypes <> true constr
R50571:50585 Coq.MSets.MSetRBT BalanceProps treeify_cont_rb thm
R50617:50620 Coq.Init.Datatypes <> true constr
R50639:50652 Coq.PArith.Pnat Pos2Nat inj_xO thm
R50639:50652 Coq.PArith.Pnat Pos2Nat inj_xO thm
R50639:50652 Coq.PArith.Pnat Pos2Nat inj_xO thm
R50671:50684 Coq.PArith.Pnat Pos2Nat is_pos thm
R50671:50684 Coq.PArith.Pnat Pos2Nat is_pos thm
R50696:50709 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R50696:50709 Coq.Arith.PeanoNat Nat neq_0_lt_0 thm
R50731:50744 Coq.Arith.PeanoNat Nat add_succ_r thm
R50747:50759 Coq.Arith.PeanoNat Nat succ_pred thm
R50731:50744 Coq.Arith.PeanoNat Nat add_succ_r thm
R50731:50744 Coq.Arith.PeanoNat Nat add_succ_r thm
R50747:50759 Coq.Arith.PeanoNat Nat succ_pred thm
R50747:50759 Coq.Arith.PeanoNat Nat succ_pred thm
R50811:50821 Coq.Arith.PeanoNat Nat add_0_r thm
R50811:50821 Coq.Arith.PeanoNat Nat add_0_r thm
R50811:50821 Coq.Arith.PeanoNat Nat add_0_r thm
R50811:50821 Coq.Arith.PeanoNat Nat add_0_r thm
R50811:50821 Coq.Arith.PeanoNat Nat add_0_r thm
R50856:50869 Coq.Arith.PeanoNat Nat add_pred_l thm
R50856:50869 Coq.Arith.PeanoNat Nat add_pred_l thm
R50909:50923 Coq.MSets.MSetRBT BalanceProps treeify_zero_rb thm
R50933:50946 Coq.MSets.MSetRBT BalanceProps treeify_one_rb thm
R50909:50923 Coq.MSets.MSetRBT BalanceProps treeify_zero_rb thm
R50933:50946 Coq.MSets.MSetRBT BalanceProps treeify_one_rb thm
inst 51064:51073 BalanceProps treeify_rb
R51079:51081 Coq.MSets.MSetRBT BalanceProps Rbt class
R51084:51090 Coq.MSets.MSetRBT M treeify def
R51092:51092 Coq.MSets.MSetRBT <> l var
R51111:51117 Coq.MSets.MSetRBT M treeify def
R51131:51144 Coq.MSets.MSetRBT BalanceProps treeify_aux_rb thm
R51147:51153 Coq.MSets.MSetRBT M plength def
R51131:51144 Coq.MSets.MSetRBT BalanceProps treeify_aux_rb thm
R51147:51153 Coq.MSets.MSetRBT M plength def
R51203:51214 Coq.MSets.MSetRBT M plength_spec thm
R51203:51214 Coq.MSets.MSetRBT M plength_spec thm
R51203:51214 Coq.MSets.MSetRBT M plength_spec thm
inst 51253:51261 BalanceProps filter_rb
R51269:51271 Coq.MSets.MSetRBT BalanceProps Rbt class
R51274:51279 Coq.MSets.MSetRBT M filter def
R51283:51283 Coq.MSets.MSetRBT <> s var
R51281:51281 Coq.MSets.MSetRBT <> f var
R51302:51307 Coq.MSets.MSetRBT M filter def
inst 51334:51346 BalanceProps partition_rb1
R51354:51356 Coq.MSets.MSetRBT BalanceProps Rbt class
R51359:51361 Coq.Init.Datatypes <> fst def
R51364:51372 Coq.MSets.MSetRBT M partition def
R51376:51376 Coq.MSets.MSetRBT <> s var
R51374:51374 Coq.MSets.MSetRBT <> f var
R51396:51404 Coq.MSets.MSetRBT M partition def
R51416:51428 Coq.MSets.MSetRBT M partition_aux def
inst 51462:51474 BalanceProps partition_rb2
R51482:51484 Coq.MSets.MSetRBT BalanceProps Rbt class
R51487:51489 Coq.Init.Datatypes <> snd def
R51492:51500 Coq.MSets.MSetRBT M partition def
R51504:51504 Coq.MSets.MSetRBT <> s var
R51502:51502 Coq.MSets.MSetRBT <> f var
R51524:51532 Coq.MSets.MSetRBT M partition def
R51544:51556 Coq.MSets.MSetRBT M partition_aux def
inst 51633:51643 BalanceProps fold_add_rb
R51659:51662 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51663:51665 Coq.MSets.MSetRBT BalanceProps Rbt class
R51668:51671 Coq.MSets.MSetRBT M fold def
R51680:51681 Coq.MSets.MSetRBT <> s2 var
R51677:51678 Coq.MSets.MSetRBT <> s1 var
R51673:51675 Coq.MSets.MSetRBT M add def
R51653:51655 Coq.MSets.MSetRBT BalanceProps Rbt class
R51657:51658 Coq.MSets.MSetRBT <> s2 var
R51709:51717 Coq.MSets.MSetRBT M fold_spec thm
R51723:51741 Coq.Lists.List <> fold_left_rev_right thm
R51709:51717 Coq.MSets.MSetRBT M fold_spec thm
R51709:51717 Coq.MSets.MSetRBT M fold_spec thm
R51723:51741 Coq.Lists.List <> fold_left_rev_right thm
R51723:51741 Coq.Lists.List <> fold_left_rev_right thm
R51751:51753 Coq.MSets.MSetRBT M elt def
R51773:51775 Coq.Lists.List <> rev def
R51778:51785 Coq.MSets.MSetRBT M elements def
R51807:51810 Coq.Program.Basics <> flip def
R51773:51775 Coq.Lists.List <> rev def
R51778:51785 Coq.MSets.MSetRBT M elements def
inst 51842:51855 BalanceProps fold_remove_rb
R51871:51874 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R51875:51877 Coq.MSets.MSetRBT BalanceProps Rbt class
R51880:51883 Coq.MSets.MSetRBT M fold def
R51895:51896 Coq.MSets.MSetRBT <> s2 var
R51892:51893 Coq.MSets.MSetRBT <> s1 var
R51885:51890 Coq.MSets.MSetRBT M remove def
R51865:51867 Coq.MSets.MSetRBT BalanceProps Rbt class
R51869:51870 Coq.MSets.MSetRBT <> s2 var
R51924:51932 Coq.MSets.MSetRBT M fold_spec thm
R51938:51956 Coq.Lists.List <> fold_left_rev_right thm
R51924:51932 Coq.MSets.MSetRBT M fold_spec thm
R51924:51932 Coq.MSets.MSetRBT M fold_spec thm
R51938:51956 Coq.Lists.List <> fold_left_rev_right thm
R51938:51956 Coq.Lists.List <> fold_left_rev_right thm
R51966:51968 Coq.MSets.MSetRBT M elt def
R51988:51990 Coq.Lists.List <> rev def
R51993:52000 Coq.MSets.MSetRBT M elements def
R52022:52025 Coq.Program.Basics <> flip def
R51988:51990 Coq.Lists.List <> rev def
R51993:52000 Coq.MSets.MSetRBT M elements def
prf 52054:52061 BalanceProps union_rb
R52077:52080 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52087:52090 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52091:52093 Coq.MSets.MSetRBT BalanceProps Rbt class
R52096:52100 Coq.MSets.MSetRBT M union def
R52105:52106 Coq.MSets.MSetRBT <> s2 var
R52102:52103 Coq.MSets.MSetRBT <> s1 var
R52081:52083 Coq.MSets.MSetRBT BalanceProps Rbt class
R52085:52086 Coq.MSets.MSetRBT <> s2 var
R52071:52073 Coq.MSets.MSetRBT BalanceProps Rbt class
R52075:52076 Coq.MSets.MSetRBT <> s1 var
R52133:52137 Coq.MSets.MSetRBT M union def
R52140:52151 Coq.MSets.MSetRBT M linear_union def
R52163:52176 Coq.MSets.MSetRBT M compare_height def
prf 52200:52207 BalanceProps inter_rb
R52223:52226 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52233:52236 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52237:52239 Coq.MSets.MSetRBT BalanceProps Rbt class
R52242:52246 Coq.MSets.MSetRBT M inter def
R52251:52252 Coq.MSets.MSetRBT <> s2 var
R52248:52249 Coq.MSets.MSetRBT <> s1 var
R52227:52229 Coq.MSets.MSetRBT BalanceProps Rbt class
R52231:52232 Coq.MSets.MSetRBT <> s2 var
R52217:52219 Coq.MSets.MSetRBT BalanceProps Rbt class
R52221:52222 Coq.MSets.MSetRBT <> s1 var
R52279:52283 Coq.MSets.MSetRBT M inter def
R52286:52297 Coq.MSets.MSetRBT M linear_inter def
R52309:52322 Coq.MSets.MSetRBT M compare_height def
prf 52346:52352 BalanceProps diff_rb
R52368:52371 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52378:52381 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52382:52384 Coq.MSets.MSetRBT BalanceProps Rbt class
R52387:52390 Coq.MSets.MSetRBT M diff def
R52395:52396 Coq.MSets.MSetRBT <> s2 var
R52392:52393 Coq.MSets.MSetRBT <> s1 var
R52372:52374 Coq.MSets.MSetRBT BalanceProps Rbt class
R52376:52377 Coq.MSets.MSetRBT <> s2 var
R52362:52364 Coq.MSets.MSetRBT BalanceProps Rbt class
R52366:52367 Coq.MSets.MSetRBT <> s1 var
R52423:52426 Coq.MSets.MSetRBT M diff def
R52429:52439 Coq.MSets.MSetRBT M linear_diff def
R52451:52464 Coq.MSets.MSetRBT M compare_height def
R52486:52497 Coq.MSets.MSetRBT BalanceProps <> mod
R52905:52919 Coq.MSets.MSetInterface S <> mod
R52924:52936 Coq.MSets.MSetRBT MSetRemoveMin <> mod
modtype 52882:52900 <> MSetInterface_S_Ext
R52956:52973 Coq.Structures.Orders OrderedType <> mod
R52980:52998 Coq.MSets.MSetRBT MSetInterface_S_Ext <> mod
R53017:53017 Coq.MSets.MSetRBT X <> modtype
mod 52947:52950 <> Make
mod 53028:53030 <> Make.Raw
R53041:53047 Coq.MSets.MSetRBT MakeRaw <> mod
R53049:53049 Coq.MSets.MSetRBT X <> modtype
R53056:53058 Coq.MSets.MSetRBT Make.Raw <> mod
R53070:53091 Coq.MSets.MSetInterface Raw2Sets <> modtype
R53093:53093 Coq.MSets.MSetRBT X <> modtype
R53095:53097 Coq.MSets.MSetRBT Make.Raw <> modtype
def 53113:53118 Make opt_ok
R53123:53128 Coq.Init.Datatypes <> option ind
R53134:53136 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53131:53133 Coq.MSets.MSetRBT Make elt def
R53137:53141 Coq.MSets.MSetRBT Make t def
R53156:53156 Coq.MSets.MSetRBT <> x var
R53163:53166 Coq.Init.Datatypes <> Some constr
R53168:53168 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53170:53170 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53172:53172 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53177:53182 Coq.MSets.MSetRBT Make Ok class
R53188:53191 Coq.Init.Datatypes <> None constr
R53196:53199 Coq.Init.Logic <> True ind
def 53219:53226 Make mk_opt_t
R53232:53237 Coq.Init.Datatypes <> option ind
R53243:53245 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53240:53242 Coq.MSets.MSetRBT Make elt def
R53246:53250 Coq.MSets.MSetRBT Make t def
R53257:53262 Coq.MSets.MSetRBT Make opt_ok def
R53264:53264 Coq.MSets.MSetRBT <> x var
R53272:53277 Coq.Init.Datatypes <> option ind
R53283:53285 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53280:53282 Coq.MSets.MSetRBT Make elt def
R53286:53286 Coq.MSets.MSetRBT Make t def
R53299:53299 Coq.MSets.MSetRBT <> x var
R53321:53324 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53325:53330 Coq.Init.Datatypes <> option ind
R53336:53338 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53333:53335 Coq.MSets.MSetRBT Make elt def
R53339:53339 Coq.MSets.MSetRBT Make t def
R53313:53318 Coq.MSets.MSetRBT Make opt_ok def
R53320:53320 Coq.MSets.MSetRBT <> o var
R53350:53353 Coq.Init.Datatypes <> Some constr
R53355:53355 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53357:53357 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53360:53360 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53373:53378 Coq.MSets.MSetRBT Make Ok class
R53386:53389 Coq.Init.Datatypes <> Some constr
R53391:53391 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53393:53394 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53401:53401 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53395:53397 Coq.MSets.MSetRBT Make Mkt constr
R53406:53409 Coq.Init.Datatypes <> None constr
R53423:53426 Coq.Init.Datatypes <> None constr
R53433:53433 Coq.MSets.MSetRBT <> P var
def 53449:53458 Make remove_min
R53464:53469 Coq.Init.Datatypes <> option ind
R53475:53477 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R53472:53474 Coq.MSets.MSetRBT Make elt def
R53478:53478 Coq.MSets.MSetRBT Make t def
R53486:53493 Coq.MSets.MSetRBT Make mk_opt_t def
R53522:53538 Coq.MSets.MSetRBT Make remove_min_ok thm
R53540:53540 Coq.MSets.MSetRBT <> s var
R53496:53509 Coq.MSets.MSetRBT Make remove_min def
R53512:53515 Coq.MSets.MSetRBT Make this proj
R53517:53517 Coq.MSets.MSetRBT <> s var
prf 53552:53567 Make remove_min_spec1
R53606:53612 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R53631:53634 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R53622:53624 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53613:53619 Coq.MSets.MSetRBT Make min_elt def
R53621:53621 Coq.MSets.MSetRBT <> s var
R53625:53628 Coq.Init.Datatypes <> Some constr
R53630:53630 Coq.MSets.MSetRBT <> x var
R53635:53639 Coq.MSets.MSetRBT Make Equal def
R53654:53655 Coq.MSets.MSetRBT <> s' var
R53642:53647 Coq.MSets.MSetRBT Make remove def
R53651:53651 Coq.MSets.MSetRBT <> s var
R53649:53649 Coq.MSets.MSetRBT <> x var
R53592:53594 Coq.Init.Logic <> ::type_scope:x_'='_x not
R53580:53589 Coq.MSets.MSetRBT Make remove_min def
R53591:53591 Coq.MSets.MSetRBT <> s var
R53595:53598 Coq.Init.Datatypes <> Some constr
R53600:53600 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53602:53602 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53605:53605 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R53601:53601 Coq.MSets.MSetRBT <> x var
R53603:53604 Coq.MSets.MSetRBT <> s' var
R53697:53706 Coq.MSets.MSetRBT Make remove_min def
R53709:53716 Coq.MSets.MSetRBT Make mk_opt_t def
R53719:53725 Coq.MSets.MSetRBT Make min_elt def
R53728:53733 Coq.MSets.MSetRBT Make remove def
R53736:53740 Coq.MSets.MSetRBT Make Equal def
R53743:53744 Coq.MSets.MSetRBT Make In def
R53780:53799 Coq.MSets.MSetRBT Make remove_min_spec1 thm
R53805:53806 Coq.MSets.MSetRBT <> s' var
R53803:53803 Coq.MSets.MSetRBT <> x var
R53780:53799 Coq.MSets.MSetRBT Make remove_min_spec1 thm
R53805:53806 Coq.MSets.MSetRBT <> s' var
R53803:53803 Coq.MSets.MSetRBT <> x var
R53824:53840 Coq.MSets.MSetRBT Make remove_min_ok thm
R53824:53840 Coq.MSets.MSetRBT Make remove_min_ok thm
R53870:53883 Coq.MSets.MSetRBT Make remove_min def
R53870:53883 Coq.MSets.MSetRBT Make remove_min def
prf 54013:54028 Make remove_min_spec2
R54053:54056 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R54057:54061 Coq.MSets.MSetRBT Make Empty def
R54063:54063 Coq.MSets.MSetRBT <> s var
R54046:54048 Coq.Init.Logic <> ::type_scope:x_'='_x not
R54034:54043 Coq.MSets.MSetRBT Make remove_min def
R54045:54045 Coq.MSets.MSetRBT <> s var
R54049:54052 Coq.Init.Datatypes <> None constr
R54105:54114 Coq.MSets.MSetRBT Make remove_min def
R54117:54124 Coq.MSets.MSetRBT Make mk_opt_t def
R54127:54131 Coq.MSets.MSetRBT Make Empty def
R54134:54135 Coq.MSets.MSetRBT Make In def
R54158:54177 Coq.MSets.MSetRBT Make remove_min_spec2 thm
R54158:54177 Coq.MSets.MSetRBT Make remove_min_spec2 thm
R54194:54210 Coq.MSets.MSetRBT Make remove_min_ok thm
R54194:54210 Coq.MSets.MSetRBT Make remove_min_ok thm
R54240:54253 Coq.MSets.MSetRBT Make remove_min def
R54240:54253 Coq.MSets.MSetRBT Make remove_min def
R54299:54302 Coq.MSets.MSetRBT Make <> mod

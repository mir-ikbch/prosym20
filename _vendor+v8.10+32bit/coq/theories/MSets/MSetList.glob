DIGEST 3b19a73bf152cf106b711719e126d0bf
FCoq.MSets.MSetList
R848:860 Coq.MSets.MSetInterface <> <> lib
R862:872 Coq.Structures.OrdersFacts <> <> lib
R874:884 Coq.Structures.OrdersLists <> <> lib
R1197:1207 Coq.Structures.Orders OrderedType <> mod
R1213:1216 Coq.MSets.MSetInterface WOps <> mod
R1218:1218 Coq.MSets.MSetList X <> modtype
mod 1190:1192 <> Ops
def 1235:1237 Ops elt
R1242:1244 Coq.MSets.MSetList X t defax
def 1260:1260 Ops t
R1265:1268 Coq.Init.Datatypes <> list ind
R1270:1272 Coq.MSets.MSetList Ops elt def
def 1289:1293 Ops empty
R1297:1297 Coq.MSets.MSetList Ops t def
R1302:1304 Coq.Init.Datatypes <> nil constr
def 1321:1328 Ops is_empty
R1335:1335 Coq.MSets.MSetList Ops t def
R1344:1344 Coq.MSets.MSetList <> l var
R1361:1365 Coq.Init.Datatypes <> false constr
R1351:1354 Coq.Init.Datatypes <> true constr
def 1413:1415 Ops mem
R1434:1434 Coq.MSets.MSetList <> s var
R1447:1449 Coq.Init.Datatypes <> nil constr
R1454:1458 Coq.Init.Datatypes <> false constr
R1467:1470 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1490:1498 Coq.MSets.MSetList X compare defax
R1500:1500 Coq.MSets.MSetList <> x var
R1519:1520 Coq.Init.Datatypes <> Lt constr
R1525:1529 Coq.Init.Datatypes <> false constr
R1541:1542 Coq.Init.Datatypes <> Eq constr
R1547:1550 Coq.Init.Datatypes <> true constr
R1562:1563 Coq.Init.Datatypes <> Gt constr
R1568:1570 Coq.MSets.MSetList <> mem def
R1572:1572 Coq.MSets.MSetList <> x var
def 1609:1611 Ops add
R1630:1630 Coq.MSets.MSetList <> s var
R1643:1645 Coq.Init.Datatypes <> nil constr
R1651:1654 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1650:1650 Coq.MSets.MSetList <> x var
R1655:1657 Coq.Init.Datatypes <> nil constr
R1666:1669 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1689:1697 Coq.MSets.MSetList X compare defax
R1699:1699 Coq.MSets.MSetList <> x var
R1718:1719 Coq.Init.Datatypes <> Lt constr
R1725:1728 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1724:1724 Coq.MSets.MSetList <> x var
R1729:1729 Coq.MSets.MSetList <> s var
R1741:1742 Coq.Init.Datatypes <> Eq constr
R1747:1747 Coq.MSets.MSetList <> s var
R1759:1760 Coq.Init.Datatypes <> Gt constr
R1766:1769 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1770:1772 Coq.MSets.MSetList <> add def
R1774:1774 Coq.MSets.MSetList <> x var
def 1813:1821 Ops singleton
R1828:1830 Coq.MSets.MSetList Ops elt def
R1837:1840 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1836:1836 Coq.MSets.MSetList <> x var
R1841:1843 Coq.Init.Datatypes <> nil constr
def 1858:1863 Ops remove
R1871:1871 Coq.MSets.MSetList Ops t def
R1886:1886 Coq.MSets.MSetList <> s var
R1899:1901 Coq.Init.Datatypes <> nil constr
R1906:1908 Coq.Init.Datatypes <> nil constr
R1917:1920 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1940:1948 Coq.MSets.MSetList X compare defax
R1950:1950 Coq.MSets.MSetList <> x var
R1969:1970 Coq.Init.Datatypes <> Lt constr
R1975:1975 Coq.MSets.MSetList <> s var
R1987:1988 Coq.Init.Datatypes <> Eq constr
R2005:2006 Coq.Init.Datatypes <> Gt constr
R2012:2015 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2016:2021 Coq.MSets.MSetList <> remove def
R2023:2023 Coq.MSets.MSetList <> x var
def 2060:2064 Ops union
R2071:2071 Coq.MSets.MSetList Ops t def
R2077:2080 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2081:2081 Coq.MSets.MSetList Ops t def
R2076:2076 Coq.MSets.MSetList Ops t def
R2096:2096 Coq.MSets.MSetList <> s var
R2109:2111 Coq.Init.Datatypes <> nil constr
R2126:2127 Coq.MSets.MSetList <> s' var
R2136:2139 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2174:2174 Coq.MSets.MSetList Ops t def
R2179:2179 Coq.MSets.MSetList Ops t def
R2201:2202 Coq.MSets.MSetList <> s' var
R2222:2224 Coq.Init.Datatypes <> nil constr
R2229:2229 Coq.MSets.MSetList <> s var
R2246:2249 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2277:2285 Coq.MSets.MSetList X compare defax
R2314:2315 Coq.Init.Datatypes <> Lt constr
R2321:2324 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2325:2329 Coq.MSets.MSetList <> union def
R2333:2334 Coq.MSets.MSetList <> s' var
R2353:2354 Coq.Init.Datatypes <> Eq constr
R2360:2363 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2364:2368 Coq.MSets.MSetList <> union def
R2392:2393 Coq.Init.Datatypes <> Gt constr
R2400:2403 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2404:2412 Coq.MSets.MSetList <> union_aux var
def 2473:2477 Ops inter
R2484:2484 Coq.MSets.MSetList Ops t def
R2490:2493 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2494:2494 Coq.MSets.MSetList Ops t def
R2489:2489 Coq.MSets.MSetList Ops t def
R2509:2509 Coq.MSets.MSetList <> s var
R2522:2524 Coq.Init.Datatypes <> nil constr
R2538:2540 Coq.Init.Datatypes <> nil constr
R2549:2552 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2587:2587 Coq.MSets.MSetList Ops t def
R2592:2592 Coq.MSets.MSetList Ops t def
R2614:2615 Coq.MSets.MSetList <> s' var
R2635:2637 Coq.Init.Datatypes <> nil constr
R2642:2644 Coq.Init.Datatypes <> nil constr
R2661:2664 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2692:2700 Coq.MSets.MSetList X compare defax
R2729:2730 Coq.Init.Datatypes <> Lt constr
R2735:2739 Coq.MSets.MSetList <> inter def
R2743:2744 Coq.MSets.MSetList <> s' var
R2763:2764 Coq.Init.Datatypes <> Eq constr
R2770:2773 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2774:2778 Coq.MSets.MSetList <> inter def
R2802:2803 Coq.Init.Datatypes <> Gt constr
R2808:2816 Coq.MSets.MSetList <> inter_aux var
def 2877:2880 Ops diff
R2887:2887 Coq.MSets.MSetList Ops t def
R2893:2896 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2897:2897 Coq.MSets.MSetList Ops t def
R2892:2892 Coq.MSets.MSetList Ops t def
R2912:2912 Coq.MSets.MSetList <> s var
R2925:2927 Coq.Init.Datatypes <> nil constr
R2941:2943 Coq.Init.Datatypes <> nil constr
R2952:2955 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2989:2989 Coq.MSets.MSetList Ops t def
R2994:2994 Coq.MSets.MSetList Ops t def
R3016:3017 Coq.MSets.MSetList <> s' var
R3037:3039 Coq.Init.Datatypes <> nil constr
R3044:3044 Coq.MSets.MSetList <> s var
R3061:3064 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3092:3100 Coq.MSets.MSetList X compare defax
R3129:3130 Coq.Init.Datatypes <> Lt constr
R3136:3139 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3140:3143 Coq.MSets.MSetList <> diff def
R3147:3148 Coq.MSets.MSetList <> s' var
R3167:3168 Coq.Init.Datatypes <> Eq constr
R3173:3176 Coq.MSets.MSetList <> diff def
R3200:3201 Coq.Init.Datatypes <> Gt constr
R3206:3213 Coq.MSets.MSetList <> diff_aux var
def 3274:3278 Ops equal
R3285:3285 Coq.MSets.MSetList Ops t def
R3291:3294 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3295:3298 Coq.Init.Datatypes <> bool ind
R3290:3290 Coq.MSets.MSetList Ops t def
R3316:3316 Coq.MSets.MSetList Ops t def
R3334:3335 Coq.MSets.MSetList <> s' var
R3331:3331 Coq.MSets.MSetList <> s var
R3348:3350 Coq.Init.Datatypes <> nil constr
R3353:3355 Coq.Init.Datatypes <> nil constr
R3360:3363 Coq.Init.Datatypes <> true constr
R3372:3375 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3381:3384 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3405:3413 Coq.MSets.MSetList X compare defax
R3435:3436 Coq.Init.Datatypes <> Eq constr
R3441:3445 Coq.MSets.MSetList <> equal def
R3467:3471 Coq.Init.Datatypes <> false constr
R3499:3503 Coq.Init.Datatypes <> false constr
def 3526:3531 Ops subset
R3554:3555 Coq.MSets.MSetList <> s' var
R3551:3551 Coq.MSets.MSetList <> s var
R3568:3570 Coq.Init.Datatypes <> nil constr
R3578:3581 Coq.Init.Datatypes <> true constr
R3590:3593 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3599:3602 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3623:3631 Coq.MSets.MSetList X compare defax
R3653:3654 Coq.Init.Datatypes <> Lt constr
R3659:3663 Coq.Init.Datatypes <> false constr
R3675:3676 Coq.Init.Datatypes <> Eq constr
R3681:3686 Coq.MSets.MSetList <> subset def
R3703:3704 Coq.Init.Datatypes <> Gt constr
R3709:3714 Coq.MSets.MSetList <> subset def
R3716:3716 Coq.MSets.MSetList <> s var
R3747:3751 Coq.Init.Datatypes <> false constr
def 3776:3779 Ops fold
R3800:3803 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3805:3808 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3809:3809 Coq.MSets.MSetList <> B var
R3804:3804 Coq.MSets.MSetList <> B var
R3797:3799 Coq.MSets.MSetList Ops elt def
R3817:3817 Coq.MSets.MSetList Ops t def
R3825:3825 Coq.MSets.MSetList <> B var
R3830:3830 Coq.MSets.MSetList <> B var
R3839:3847 Coq.Lists.List <> fold_left def
R3860:3860 Coq.MSets.MSetList <> i var
R3858:3858 Coq.MSets.MSetList <> s var
R3850:3853 Coq.Program.Basics <> flip def
R3855:3855 Coq.MSets.MSetList <> f var
def 3875:3880 Ops filter
R3890:3893 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3894:3897 Coq.Init.Datatypes <> bool ind
R3887:3889 Coq.MSets.MSetList Ops elt def
R3905:3905 Coq.MSets.MSetList Ops t def
R3910:3910 Coq.MSets.MSetList Ops t def
R3925:3925 Coq.MSets.MSetList <> s var
R3938:3940 Coq.Init.Datatypes <> nil constr
R3945:3947 Coq.Init.Datatypes <> nil constr
R3956:3959 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3968:3968 Coq.MSets.MSetList <> f var
R3998:4003 Coq.MSets.MSetList <> filter def
R4005:4005 Coq.MSets.MSetList <> f var
R3978:3981 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3982:3987 Coq.MSets.MSetList <> filter def
R3989:3989 Coq.MSets.MSetList <> f var
def 4030:4036 Ops for_all
R4046:4049 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4050:4053 Coq.Init.Datatypes <> bool ind
R4043:4045 Coq.MSets.MSetList Ops elt def
R4061:4061 Coq.MSets.MSetList Ops t def
R4066:4069 Coq.Init.Datatypes <> bool ind
R4084:4084 Coq.MSets.MSetList <> s var
R4097:4099 Coq.Init.Datatypes <> nil constr
R4104:4107 Coq.Init.Datatypes <> true constr
R4116:4119 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4128:4128 Coq.MSets.MSetList <> f var
R4154:4158 Coq.Init.Datatypes <> false constr
R4137:4143 Coq.MSets.MSetList <> for_all def
R4145:4145 Coq.MSets.MSetList <> f var
def 4181:4187 Ops exists_
R4197:4200 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4201:4204 Coq.Init.Datatypes <> bool ind
R4194:4196 Coq.MSets.MSetList Ops elt def
R4212:4212 Coq.MSets.MSetList Ops t def
R4217:4220 Coq.Init.Datatypes <> bool ind
R4235:4235 Coq.MSets.MSetList <> s var
R4248:4250 Coq.Init.Datatypes <> nil constr
R4255:4259 Coq.Init.Datatypes <> false constr
R4268:4271 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4280:4280 Coq.MSets.MSetList <> f var
R4299:4305 Coq.MSets.MSetList <> exists_ def
R4307:4307 Coq.MSets.MSetList <> f var
R4289:4292 Coq.Init.Datatypes <> true constr
def 4332:4340 Ops partition
R4350:4353 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4354:4357 Coq.Init.Datatypes <> bool ind
R4347:4349 Coq.MSets.MSetList Ops elt def
R4365:4365 Coq.MSets.MSetList Ops t def
R4371:4373 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R4370:4370 Coq.MSets.MSetList Ops t def
R4374:4374 Coq.MSets.MSetList Ops t def
R4389:4389 Coq.MSets.MSetList <> s var
R4402:4404 Coq.Init.Datatypes <> nil constr
R4409:4409 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4413:4414 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4418:4418 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4410:4412 Coq.Init.Datatypes <> nil constr
R4415:4417 Coq.Init.Datatypes <> nil constr
R4427:4430 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4460:4468 Coq.MSets.MSetList <> partition def
R4470:4470 Coq.MSets.MSetList <> f var
R4488:4488 Coq.MSets.MSetList <> f var
R4516:4516 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4519:4520 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4528:4528 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4517:4518 Coq.MSets.MSetList <> s1 var
R4522:4525 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4526:4527 Coq.MSets.MSetList <> s2 var
R4497:4497 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4505:4506 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4509:4509 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R4499:4502 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4503:4504 Coq.MSets.MSetList <> s1 var
R4507:4508 Coq.MSets.MSetList <> s2 var
def 4553:4560 Ops cardinal
R4567:4567 Coq.MSets.MSetList Ops t def
R4572:4574 Coq.Init.Datatypes <> nat ind
R4579:4584 Coq.Init.Datatypes <> length def
R4586:4586 Coq.MSets.MSetList <> s var
def 4603:4610 Ops elements
R4617:4617 Coq.MSets.MSetList Ops t def
R4622:4625 Coq.Init.Datatypes <> list ind
R4627:4629 Coq.MSets.MSetList Ops elt def
R4634:4634 Coq.MSets.MSetList <> x var
def 4651:4657 Ops min_elt
R4664:4664 Coq.MSets.MSetList Ops t def
R4669:4674 Coq.Init.Datatypes <> option ind
R4676:4678 Coq.MSets.MSetList Ops elt def
R4693:4693 Coq.MSets.MSetList <> s var
R4706:4708 Coq.Init.Datatypes <> nil constr
R4713:4716 Coq.Init.Datatypes <> None constr
R4725:4728 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4734:4737 Coq.Init.Datatypes <> Some constr
def 4762:4768 Ops max_elt
R4775:4775 Coq.MSets.MSetList Ops t def
R4780:4785 Coq.Init.Datatypes <> option ind
R4787:4789 Coq.MSets.MSetList Ops elt def
R4804:4804 Coq.MSets.MSetList <> s var
R4817:4819 Coq.Init.Datatypes <> nil constr
R4824:4827 Coq.Init.Datatypes <> None constr
R4836:4839 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4840:4842 Coq.Init.Datatypes <> nil constr
R4847:4850 Coq.Init.Datatypes <> Some constr
R4861:4864 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4870:4876 Coq.MSets.MSetList <> max_elt def
def 4903:4908 Ops choose
R4913:4919 Coq.MSets.MSetList Ops min_elt def
def 4934:4940 Ops compare
R4962:4963 Coq.MSets.MSetList <> s' var
R4959:4959 Coq.MSets.MSetList <> s var
R4976:4978 Coq.Init.Datatypes <> nil constr
R4981:4983 Coq.Init.Datatypes <> nil constr
R4988:4989 Coq.Init.Datatypes <> Eq constr
R4997:4999 Coq.Init.Datatypes <> nil constr
R5007:5008 Coq.Init.Datatypes <> Lt constr
R5019:5021 Coq.Init.Datatypes <> nil constr
R5026:5027 Coq.Init.Datatypes <> Gt constr
R5036:5037 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5043:5044 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5063:5071 Coq.MSets.MSetList X compare defax
R5092:5093 Coq.Init.Datatypes <> Eq constr
R5098:5104 Coq.MSets.MSetList <> compare def
R5108:5109 Coq.MSets.MSetList <> s' var
R5106:5106 Coq.MSets.MSetList <> s var
R5120:5121 Coq.Init.Datatypes <> Lt constr
R5126:5127 Coq.Init.Datatypes <> Lt constr
R5138:5139 Coq.Init.Datatypes <> Gt constr
R5144:5145 Coq.Init.Datatypes <> Gt constr
R5170:5172 Coq.MSets.MSetList Ops <> mod
R5195:5205 Coq.Structures.Orders OrderedType <> mod
R5211:5217 Coq.MSets.MSetInterface RawSets <> mod
R5219:5219 Coq.MSets.MSetList X <> modtype
mod 5183:5189 <> MakeRaw
R5244:5259 Coq.Structures.OrdersFacts OrderedTypeFacts <> modtype
R5261:5261 Coq.MSets.MSetList X <> modtype
mod 5238:5239 <> MakeRaw.MX
R5286:5301 Coq.Structures.OrdersLists OrderedTypeLists <> modtype
R5303:5303 Coq.MSets.MSetList X <> modtype
mod 5280:5281 <> MakeRaw.ML
R5317:5319 Coq.MSets.MSetList Ops <> modtype
R5321:5321 Coq.MSets.MSetList X <> modtype
sec 5388:5399 MakeRaw ForNotations
def 5416:5418 MakeRaw inf
R5436:5436 Coq.MSets.MSetList <> l var
R5448:5450 Coq.Init.Datatypes <> nil constr
R5455:5458 Coq.Init.Datatypes <> true constr
R5466:5467 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5479:5487 Coq.MSets.MSetList X compare defax
R5489:5489 Coq.MSets.MSetList <> x var
R5498:5499 Coq.Init.Datatypes <> Lt constr
R5504:5507 Coq.Init.Datatypes <> true constr
R5516:5520 Coq.Init.Datatypes <> false constr
def 5546:5549 MakeRaw isok
R5565:5565 Coq.MSets.MSetList <> l var
R5577:5579 Coq.Init.Datatypes <> nil constr
R5584:5587 Coq.Init.Datatypes <> true constr
R5595:5596 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R5609:5612 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R5602:5604 Coq.MSets.MSetList MakeRaw inf def
R5608:5608 Coq.MSets.MSetList <> l var
R5613:5616 Coq.MSets.MSetList <> isok def
R5618:5618 Coq.MSets.MSetList <> l var
syndef 5640:5643 MakeRaw Sort
R5657:5659 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5651:5654 Coq.MSets.MSetList MakeRaw isok def
R5660:5663 Coq.Init.Datatypes <> true constr
syndef 5678:5680 MakeRaw Inf
R5686:5692 Coq.Sorting.Sorted <> lelistA syndef
R5694:5697 Coq.MSets.MSetList X lt defax
syndef 5712:5713 MakeRaw In
R5719:5721 Coq.Lists.SetoidList <> InA ind
R5723:5726 Coq.MSets.MSetList X eq defax
def 5819:5822 MakeRaw IsOk
R5829:5832 Coq.MSets.MSetList MakeRaw Sort syndef
R5834:5834 Coq.MSets.MSetList <> s var
ind 5846:5847 MakeRaw Ok
constr 5865:5866 MakeRaw ok
rec 5846:5847 MakeRaw Ok
proj 5865:5866 MakeRaw ok
R5852:5852 Coq.MSets.MSetList MakeRaw t def
R5870:5873 Coq.MSets.MSetList MakeRaw Sort syndef
R5875:5875 Coq.MSets.MSetList <> s var
R5919:5920 Coq.MSets.MSetList MakeRaw Ok class
inst 5942:5948 MakeRaw Sort_Ok
R5959:5962 Coq.MSets.MSetList MakeRaw Sort syndef
R5964:5964 Coq.MSets.MSetList <> s var
R5969:5970 Coq.MSets.MSetList MakeRaw Ok class
R5972:5972 Coq.MSets.MSetList <> s var
R5979:5980 Coq.MSets.MSetList MakeRaw ok def
prf 6000:6006 MakeRaw inf_iff
R6029:6033 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R6022:6024 Coq.MSets.MSetList MakeRaw Inf syndef
R6028:6028 Coq.MSets.MSetList <> l var
R6026:6026 Coq.MSets.MSetList <> x var
R6041:6043 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6034:6036 Coq.MSets.MSetList MakeRaw inf def
R6040:6040 Coq.MSets.MSetList <> l var
R6038:6038 Coq.MSets.MSetList <> x var
R6044:6047 Coq.Init.Datatypes <> true constr
R6166:6179 Coq.MSets.MSetList MakeRaw compare_lt_iff thm
R6166:6179 Coq.MSets.MSetList MakeRaw compare_lt_iff thm
R6166:6179 Coq.MSets.MSetList MakeRaw compare_lt_iff thm
R6311:6319 Coq.MSets.MSetList X compare defax
R6311:6319 Coq.MSets.MSetList X compare defax
R6378:6391 Coq.MSets.MSetList MakeRaw compare_lt_iff thm
R6378:6391 Coq.MSets.MSetList MakeRaw compare_lt_iff thm
R6378:6391 Coq.MSets.MSetList MakeRaw compare_lt_iff thm
prf 6445:6452 MakeRaw isok_iff
R6477:6481 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R6466:6469 Coq.Sorting.Sorted <> sort syndef
R6476:6476 Coq.MSets.MSetList <> l var
R6471:6474 Coq.MSets.MSetList X lt defax
R6482:6483 Coq.MSets.MSetList MakeRaw Ok class
R6485:6485 Coq.MSets.MSetList <> l var
R6633:6635 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6622:6625 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R6614:6616 Coq.MSets.MSetList MakeRaw inf def
R6626:6629 Coq.MSets.MSetList MakeRaw isok def
R6636:6639 Coq.Init.Datatypes <> true constr
R6633:6635 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6622:6625 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R6614:6616 Coq.MSets.MSetList MakeRaw inf def
R6626:6629 Coq.MSets.MSetList MakeRaw isok def
R6636:6639 Coq.Init.Datatypes <> true constr
R6655:6661 Coq.MSets.MSetList MakeRaw inf_iff thm
R6655:6661 Coq.MSets.MSetList MakeRaw inf_iff thm
R6655:6661 Coq.MSets.MSetList MakeRaw inf_iff thm
R6682:6694 Coq.Bool.Bool <> andb_true_iff thm
R6682:6694 Coq.Bool.Bool <> andb_true_iff thm
R6682:6694 Coq.Bool.Bool <> andb_true_iff thm
R6795:6797 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6784:6787 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R6776:6778 Coq.MSets.MSetList MakeRaw inf def
R6788:6791 Coq.MSets.MSetList MakeRaw isok def
R6798:6801 Coq.Init.Datatypes <> true constr
R6795:6797 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6784:6787 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R6776:6778 Coq.MSets.MSetList MakeRaw inf def
R6788:6791 Coq.MSets.MSetList MakeRaw isok def
R6798:6801 Coq.Init.Datatypes <> true constr
R6822:6834 Coq.Bool.Bool <> andb_true_iff thm
R6840:6846 Coq.MSets.MSetList MakeRaw inf_iff thm
R6822:6834 Coq.Bool.Bool <> andb_true_iff thm
R6822:6834 Coq.Bool.Bool <> andb_true_iff thm
R6840:6846 Coq.MSets.MSetList MakeRaw inf_iff thm
R6840:6846 Coq.MSets.MSetList MakeRaw inf_iff thm
R6915:6916 Coq.MSets.MSetList MakeRaw Ok class
R6935:6942 Coq.MSets.MSetList MakeRaw isok_iff thm
R6993:6996 Coq.Sorting.Sorted <> sort syndef
R7005:7008 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6998:7001 Coq.MSets.MSetList X lt defax
R6993:6996 Coq.Sorting.Sorted <> sort syndef
R7005:7008 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R6998:7001 Coq.MSets.MSetList X lt defax
R7053:7056 Coq.Sorting.Sorted <> sort syndef
R7063:7065 Coq.Init.Datatypes <> nil constr
R7058:7061 Coq.MSets.MSetList X lt defax
R7053:7056 Coq.Sorting.Sorted <> sort syndef
R7063:7065 Coq.Init.Datatypes <> nil constr
R7058:7061 Coq.MSets.MSetList X lt defax
R7098:7101 Coq.Sorting.Sorted <> sort syndef
R7103:7106 Coq.MSets.MSetList X lt defax
R7098:7101 Coq.Sorting.Sorted <> sort syndef
R7103:7106 Coq.MSets.MSetList X lt defax
R7153:7154 Coq.MSets.MSetList MakeRaw Ok class
R7153:7154 Coq.MSets.MSetList MakeRaw Ok class
R7207:7208 Coq.MSets.MSetList MakeRaw Ok class
R7207:7208 Coq.MSets.MSetList MakeRaw Ok class
R7226:7233 Coq.MSets.MSetList MakeRaw isok_iff thm
R7177:7184 Coq.MSets.MSetList MakeRaw isok_iff thm
R7127:7128 Coq.MSets.MSetList MakeRaw Ok class
R7400:7402 Coq.MSets.MSetList MakeRaw Inf syndef
R7400:7402 Coq.MSets.MSetList MakeRaw Inf syndef
R7414:7415 Coq.MSets.MSetList MakeRaw In syndef
R7414:7415 Coq.MSets.MSetList MakeRaw In syndef
R7441:7444 Coq.MSets.MSetList X lt defax
R7468:7478 Coq.MSets.MSetList MakeRaw Sort_Inf_In thm
inst 7535:7541 MakeRaw isok_Ok
R7553:7555 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7547:7550 Coq.MSets.MSetList MakeRaw isok def
R7552:7552 Coq.MSets.MSetList <> s var
R7556:7559 Coq.Init.Datatypes <> true constr
R7564:7565 Coq.MSets.MSetList MakeRaw Ok class
R7567:7567 Coq.MSets.MSetList <> s var
def 7627:7631 MakeRaw Equal
R7652:7654 Coq.MSets.MSetList MakeRaw elt def
R7663:7667 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R7657:7658 Coq.MSets.MSetList MakeRaw In syndef
R7662:7662 Coq.MSets.MSetList <> s var
R7660:7660 Coq.MSets.MSetList <> a var
R7668:7669 Coq.MSets.MSetList MakeRaw In syndef
R7673:7674 Coq.MSets.MSetList <> s' var
R7671:7671 Coq.MSets.MSetList <> a var
def 7690:7695 MakeRaw Subset
R7716:7718 Coq.MSets.MSetList MakeRaw elt def
R7727:7730 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7731:7732 Coq.MSets.MSetList MakeRaw In syndef
R7736:7737 Coq.MSets.MSetList <> s' var
R7734:7734 Coq.MSets.MSetList <> a var
R7721:7722 Coq.MSets.MSetList MakeRaw In syndef
R7726:7726 Coq.MSets.MSetList <> s var
R7724:7724 Coq.MSets.MSetList <> a var
def 7753:7757 MakeRaw Empty
R7775:7777 Coq.MSets.MSetList MakeRaw elt def
R7780:7781 Coq.Init.Logic <> ::type_scope:'~'_x not
R7782:7783 Coq.MSets.MSetList MakeRaw In syndef
R7787:7787 Coq.MSets.MSetList <> s var
R7785:7785 Coq.MSets.MSetList <> a var
def 7803:7809 MakeRaw For_all
R7819:7822 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7816:7818 Coq.MSets.MSetList MakeRaw elt def
R7850:7853 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7854:7854 Coq.MSets.MSetList <> P var
R7856:7856 Coq.MSets.MSetList <> x var
R7844:7845 Coq.MSets.MSetList MakeRaw In syndef
R7849:7849 Coq.MSets.MSetList <> s var
R7847:7847 Coq.MSets.MSetList <> x var
def 7872:7877 MakeRaw Exists
R7887:7890 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7884:7886 Coq.MSets.MSetList MakeRaw elt def
R7902:7902 Coq.MSets.MSetList MakeRaw t def
R7908:7914 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R7916:7917 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R7924:7927 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7918:7919 Coq.MSets.MSetList MakeRaw In syndef
R7923:7923 Coq.MSets.MSetList <> s var
R7921:7921 Coq.MSets.MSetList <> x var
R7928:7928 Coq.MSets.MSetList <> P var
R7930:7930 Coq.MSets.MSetList <> x var
prf 7942:7949 MakeRaw mem_spec
R7968:7968 Coq.MSets.MSetList MakeRaw t def
R7976:7978 Coq.MSets.MSetList MakeRaw elt def
R7987:7988 Coq.MSets.MSetList MakeRaw Ok class
R7990:7990 Coq.MSets.MSetList <> s var
R8008:8012 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R8001:8003 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7994:7996 Coq.MSets.MSetList MakeRaw mem def
R8000:8000 Coq.MSets.MSetList <> s var
R7998:7998 Coq.MSets.MSetList <> x var
R8004:8007 Coq.Init.Datatypes <> true constr
R8013:8014 Coq.MSets.MSetList MakeRaw In syndef
R8018:8018 Coq.MSets.MSetList <> s var
R8016:8016 Coq.MSets.MSetList <> x var
R8130:8137 Coq.Lists.SetoidList <> InA_cons thm
R8130:8137 Coq.Lists.SetoidList <> InA_cons thm
R8130:8137 Coq.Lists.SetoidList <> InA_cons thm
R8130:8137 Coq.Lists.SetoidList <> InA_cons thm
R8130:8137 Coq.Lists.SetoidList <> InA_cons thm
R8130:8137 Coq.Lists.SetoidList <> InA_cons thm
R8130:8137 Coq.Lists.SetoidList <> InA_cons thm
prf 8261:8267 MakeRaw add_inf
R8286:8286 Coq.MSets.MSetList MakeRaw t def
R8296:8298 Coq.MSets.MSetList MakeRaw elt def
R8309:8312 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8321:8324 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8325:8327 Coq.MSets.MSetList MakeRaw Inf syndef
R8332:8334 Coq.MSets.MSetList MakeRaw add def
R8338:8338 Coq.MSets.MSetList <> s var
R8336:8336 Coq.MSets.MSetList <> x var
R8329:8329 Coq.MSets.MSetList <> a var
R8313:8316 Coq.MSets.MSetList X lt defax
R8320:8320 Coq.MSets.MSetList <> x var
R8318:8318 Coq.MSets.MSetList <> a var
R8302:8304 Coq.MSets.MSetList MakeRaw Inf syndef
R8308:8308 Coq.MSets.MSetList <> s var
R8306:8306 Coq.MSets.MSetList <> a var
inst 8494:8499 MakeRaw add_ok
R8516:8517 Coq.MSets.MSetList MakeRaw Ok class
R8519:8519 Coq.MSets.MSetList <> s var
R8523:8524 Coq.MSets.MSetList MakeRaw Ok class
R8527:8529 Coq.MSets.MSetList MakeRaw add def
R8533:8533 Coq.MSets.MSetList <> s var
R8531:8531 Coq.MSets.MSetList <> x var
R8566:8573 Coq.MSets.MSetList MakeRaw isok_iff thm
R8566:8573 Coq.MSets.MSetList MakeRaw isok_iff thm
R8566:8573 Coq.MSets.MSetList MakeRaw isok_iff thm
R8566:8573 Coq.MSets.MSetList MakeRaw isok_iff thm
R8566:8573 Coq.MSets.MSetList MakeRaw isok_iff thm
R8566:8573 Coq.MSets.MSetList MakeRaw isok_iff thm
prf 8685:8692 MakeRaw add_spec
R8711:8711 Coq.MSets.MSetList MakeRaw t def
R8721:8723 Coq.MSets.MSetList MakeRaw elt def
R8732:8733 Coq.MSets.MSetList MakeRaw Ok class
R8735:8735 Coq.MSets.MSetList <> s var
R8757:8761 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R8743:8744 Coq.MSets.MSetList MakeRaw In syndef
R8749:8751 Coq.MSets.MSetList MakeRaw add def
R8755:8755 Coq.MSets.MSetList <> s var
R8753:8753 Coq.MSets.MSetList <> x var
R8746:8746 Coq.MSets.MSetList <> y var
R8770:8773 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R8762:8765 Coq.MSets.MSetList X eq defax
R8769:8769 Coq.MSets.MSetList <> x var
R8767:8767 Coq.MSets.MSetList <> y var
R8774:8775 Coq.MSets.MSetList MakeRaw In syndef
R8779:8779 Coq.MSets.MSetList <> s var
R8777:8777 Coq.MSets.MSetList <> y var
R8879:8886 Coq.Lists.SetoidList <> InA_cons thm
R8879:8886 Coq.Lists.SetoidList <> InA_cons thm
R8879:8886 Coq.Lists.SetoidList <> InA_cons thm
R8879:8886 Coq.Lists.SetoidList <> InA_cons thm
R8879:8886 Coq.Lists.SetoidList <> InA_cons thm
R8879:8886 Coq.Lists.SetoidList <> InA_cons thm
R8879:8886 Coq.Lists.SetoidList <> InA_cons thm
R8879:8886 Coq.Lists.SetoidList <> InA_cons thm
R8879:8886 Coq.Lists.SetoidList <> InA_cons thm
R8879:8886 Coq.Lists.SetoidList <> InA_cons thm
R8879:8886 Coq.Lists.SetoidList <> InA_cons thm
R8879:8886 Coq.Lists.SetoidList <> InA_cons thm
prf 8922:8931 MakeRaw remove_inf
R8950:8950 Coq.MSets.MSetList MakeRaw t def
R8960:8962 Coq.MSets.MSetList MakeRaw elt def
R8971:8972 Coq.MSets.MSetList MakeRaw Ok class
R8974:8974 Coq.MSets.MSetList <> s var
R8985:8988 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8989:8991 Coq.MSets.MSetList MakeRaw Inf syndef
R8996:9001 Coq.MSets.MSetList MakeRaw remove def
R9005:9005 Coq.MSets.MSetList <> s var
R9003:9003 Coq.MSets.MSetList <> x var
R8993:8993 Coq.MSets.MSetList <> a var
R8978:8980 Coq.MSets.MSetList MakeRaw Inf syndef
R8984:8984 Coq.MSets.MSetList <> s var
R8982:8982 Coq.MSets.MSetList <> a var
R9100:9105 Coq.MSets.MSetList MakeRaw Inf_lt thm
R9100:9105 Coq.MSets.MSetList MakeRaw Inf_lt thm
inst 9181:9189 MakeRaw remove_ok
R9206:9207 Coq.MSets.MSetList MakeRaw Ok class
R9209:9209 Coq.MSets.MSetList <> s var
R9213:9214 Coq.MSets.MSetList MakeRaw Ok class
R9217:9222 Coq.MSets.MSetList MakeRaw remove def
R9226:9226 Coq.MSets.MSetList <> s var
R9224:9224 Coq.MSets.MSetList <> x var
R9259:9266 Coq.MSets.MSetList MakeRaw isok_iff thm
R9259:9266 Coq.MSets.MSetList MakeRaw isok_iff thm
R9259:9266 Coq.MSets.MSetList MakeRaw isok_iff thm
R9259:9266 Coq.MSets.MSetList MakeRaw isok_iff thm
R9259:9266 Coq.MSets.MSetList MakeRaw isok_iff thm
R9259:9266 Coq.MSets.MSetList MakeRaw isok_iff thm
prf 9371:9381 MakeRaw remove_spec
R9400:9400 Coq.MSets.MSetList MakeRaw t def
R9410:9412 Coq.MSets.MSetList MakeRaw elt def
R9421:9422 Coq.MSets.MSetList MakeRaw Ok class
R9424:9424 Coq.MSets.MSetList <> s var
R9449:9453 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R9432:9433 Coq.MSets.MSetList MakeRaw In syndef
R9438:9443 Coq.MSets.MSetList MakeRaw remove def
R9447:9447 Coq.MSets.MSetList <> s var
R9445:9445 Coq.MSets.MSetList <> x var
R9435:9435 Coq.MSets.MSetList <> y var
R9460:9463 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R9454:9455 Coq.MSets.MSetList MakeRaw In syndef
R9459:9459 Coq.MSets.MSetList <> s var
R9457:9457 Coq.MSets.MSetList <> y var
R9464:9464 Coq.Init.Logic <> ::type_scope:'~'_x not
R9465:9468 Coq.MSets.MSetList X eq defax
R9472:9472 Coq.MSets.MSetList <> x var
R9470:9470 Coq.MSets.MSetList <> y var
R9572:9579 Coq.Lists.SetoidList <> InA_cons thm
R9572:9579 Coq.Lists.SetoidList <> InA_cons thm
R9572:9579 Coq.Lists.SetoidList <> InA_cons thm
R9572:9579 Coq.Lists.SetoidList <> InA_cons thm
R9572:9579 Coq.Lists.SetoidList <> InA_cons thm
R9572:9579 Coq.Lists.SetoidList <> InA_cons thm
R9572:9579 Coq.Lists.SetoidList <> InA_cons thm
R9572:9579 Coq.Lists.SetoidList <> InA_cons thm
R9572:9579 Coq.Lists.SetoidList <> InA_cons thm
R9572:9579 Coq.Lists.SetoidList <> InA_cons thm
R9572:9579 Coq.Lists.SetoidList <> InA_cons thm
inst 9656:9667 MakeRaw singleton_ok
R9673:9674 Coq.MSets.MSetList MakeRaw Ok class
R9677:9685 Coq.MSets.MSetList MakeRaw singleton def
R9687:9687 Coq.MSets.MSetList <> x var
R9709:9717 Coq.MSets.MSetList MakeRaw singleton def
prf 9749:9762 MakeRaw singleton_spec
R9779:9781 Coq.MSets.MSetList MakeRaw elt def
R9802:9806 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R9784:9785 Coq.MSets.MSetList MakeRaw In syndef
R9790:9798 Coq.MSets.MSetList MakeRaw singleton def
R9800:9800 Coq.MSets.MSetList <> x var
R9787:9787 Coq.MSets.MSetList <> y var
R9807:9810 Coq.MSets.MSetList X eq defax
R9814:9814 Coq.MSets.MSetList <> x var
R9812:9812 Coq.MSets.MSetList <> y var
R9835:9843 Coq.MSets.MSetList MakeRaw singleton def
prf 10159:10167 MakeRaw union_inf
R10189:10189 Coq.MSets.MSetList MakeRaw t def
R10197:10199 Coq.MSets.MSetList MakeRaw elt def
R10208:10209 Coq.MSets.MSetList MakeRaw Ok class
R10211:10211 Coq.MSets.MSetList <> s var
R10221:10222 Coq.MSets.MSetList MakeRaw Ok class
R10224:10225 Coq.MSets.MSetList <> s' var
R10239:10242 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10251:10254 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10255:10257 Coq.MSets.MSetList MakeRaw Inf syndef
R10262:10266 Coq.MSets.MSetList MakeRaw union def
R10270:10271 Coq.MSets.MSetList <> s' var
R10268:10268 Coq.MSets.MSetList <> s var
R10259:10259 Coq.MSets.MSetList <> a var
R10243:10245 Coq.MSets.MSetList MakeRaw Inf syndef
R10249:10250 Coq.MSets.MSetList <> s' var
R10247:10247 Coq.MSets.MSetList <> a var
R10232:10234 Coq.MSets.MSetList MakeRaw Inf syndef
R10238:10238 Coq.MSets.MSetList <> s var
R10236:10236 Coq.MSets.MSetList <> a var
inst 10357:10364 MakeRaw union_ok
R10382:10383 Coq.MSets.MSetList MakeRaw Ok class
R10385:10385 Coq.MSets.MSetList <> s var
R10388:10389 Coq.MSets.MSetList MakeRaw Ok class
R10391:10392 Coq.MSets.MSetList <> s' var
R10396:10397 Coq.MSets.MSetList MakeRaw Ok class
R10400:10404 Coq.MSets.MSetList MakeRaw union def
R10408:10409 Coq.MSets.MSetList <> s' var
R10406:10406 Coq.MSets.MSetList <> s var
R10442:10449 Coq.MSets.MSetList MakeRaw isok_iff thm
R10442:10449 Coq.MSets.MSetList MakeRaw isok_iff thm
R10442:10449 Coq.MSets.MSetList MakeRaw isok_iff thm
R10442:10449 Coq.MSets.MSetList MakeRaw isok_iff thm
R10442:10449 Coq.MSets.MSetList MakeRaw isok_iff thm
R10442:10449 Coq.MSets.MSetList MakeRaw isok_iff thm
R10442:10449 Coq.MSets.MSetList MakeRaw isok_iff thm
R10442:10449 Coq.MSets.MSetList MakeRaw isok_iff thm
R10504:10505 Coq.MSets.MSetList MakeRaw ok def
R10504:10505 Coq.MSets.MSetList MakeRaw ok def
R10504:10505 Coq.MSets.MSetList MakeRaw ok def
R10504:10505 Coq.MSets.MSetList MakeRaw ok def
R10504:10505 Coq.MSets.MSetList MakeRaw ok def
R10523:10528 Coq.MSets.MSetList MakeRaw Inf_eq thm
R10551:10559 Coq.MSets.MSetList MakeRaw union_inf thm
R10574:10579 Coq.MSets.MSetList MakeRaw Inf_eq thm
R10523:10528 Coq.MSets.MSetList MakeRaw Inf_eq thm
R10551:10559 Coq.MSets.MSetList MakeRaw union_inf thm
R10574:10579 Coq.MSets.MSetList MakeRaw Inf_eq thm
R10612:10614 Coq.MSets.MSetList MakeRaw Inf syndef
R10620:10624 Coq.MSets.MSetList MakeRaw union def
R10628:10631 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R10612:10614 Coq.MSets.MSetList MakeRaw Inf syndef
R10620:10624 Coq.MSets.MSetList MakeRaw union def
R10628:10631 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
prf 10663:10672 MakeRaw union_spec
R10694:10694 Coq.MSets.MSetList MakeRaw t def
R10702:10704 Coq.MSets.MSetList MakeRaw elt def
R10713:10714 Coq.MSets.MSetList MakeRaw Ok class
R10716:10716 Coq.MSets.MSetList <> s var
R10726:10727 Coq.MSets.MSetList MakeRaw Ok class
R10729:10730 Coq.MSets.MSetList <> s' var
R10754:10758 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R10737:10738 Coq.MSets.MSetList MakeRaw In syndef
R10743:10747 Coq.MSets.MSetList MakeRaw union def
R10751:10752 Coq.MSets.MSetList <> s' var
R10749:10749 Coq.MSets.MSetList <> s var
R10740:10740 Coq.MSets.MSetList <> x var
R10765:10768 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R10759:10760 Coq.MSets.MSetList MakeRaw In syndef
R10764:10764 Coq.MSets.MSetList <> s var
R10762:10762 Coq.MSets.MSetList <> x var
R10769:10770 Coq.MSets.MSetList MakeRaw In syndef
R10774:10775 Coq.MSets.MSetList <> s' var
R10772:10772 Coq.MSets.MSetList <> x var
R10814:10821 Coq.Lists.SetoidList <> InA_cons thm
R10814:10821 Coq.Lists.SetoidList <> InA_cons thm
R10814:10821 Coq.Lists.SetoidList <> InA_cons thm
R10814:10821 Coq.Lists.SetoidList <> InA_cons thm
R10814:10821 Coq.Lists.SetoidList <> InA_cons thm
R10814:10821 Coq.Lists.SetoidList <> InA_cons thm
R10814:10821 Coq.Lists.SetoidList <> InA_cons thm
R10814:10821 Coq.Lists.SetoidList <> InA_cons thm
R10814:10821 Coq.Lists.SetoidList <> InA_cons thm
R10814:10821 Coq.Lists.SetoidList <> InA_cons thm
R10814:10821 Coq.Lists.SetoidList <> InA_cons thm
R10814:10821 Coq.Lists.SetoidList <> InA_cons thm
R10814:10821 Coq.Lists.SetoidList <> InA_cons thm
R10814:10821 Coq.Lists.SetoidList <> InA_cons thm
R10814:10821 Coq.Lists.SetoidList <> InA_cons thm
R10814:10821 Coq.Lists.SetoidList <> InA_cons thm
R10814:10821 Coq.Lists.SetoidList <> InA_cons thm
R10814:10821 Coq.Lists.SetoidList <> InA_cons thm
R10814:10821 Coq.Lists.SetoidList <> InA_cons thm
R10814:10821 Coq.Lists.SetoidList <> InA_cons thm
prf 10877:10885 MakeRaw inter_inf
R10907:10907 Coq.MSets.MSetList MakeRaw t def
R10915:10917 Coq.MSets.MSetList MakeRaw elt def
R10926:10927 Coq.MSets.MSetList MakeRaw Ok class
R10929:10929 Coq.MSets.MSetList <> s var
R10939:10940 Coq.MSets.MSetList MakeRaw Ok class
R10942:10943 Coq.MSets.MSetList <> s' var
R10957:10960 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10969:10972 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10973:10975 Coq.MSets.MSetList MakeRaw Inf syndef
R10980:10984 Coq.MSets.MSetList MakeRaw inter def
R10988:10989 Coq.MSets.MSetList <> s' var
R10986:10986 Coq.MSets.MSetList <> s var
R10977:10977 Coq.MSets.MSetList <> a var
R10961:10963 Coq.MSets.MSetList MakeRaw Inf syndef
R10967:10968 Coq.MSets.MSetList <> s' var
R10965:10965 Coq.MSets.MSetList <> a var
R10950:10952 Coq.MSets.MSetList MakeRaw Inf syndef
R10956:10956 Coq.MSets.MSetList <> s var
R10954:10954 Coq.MSets.MSetList <> a var
R11024:11029 Coq.MSets.MSetList MakeRaw Inf_lt thm
R11024:11029 Coq.MSets.MSetList MakeRaw Inf_lt thm
R11074:11079 Coq.MSets.MSetList MakeRaw Inf_lt thm
R11074:11079 Coq.MSets.MSetList MakeRaw Inf_lt thm
inst 11155:11162 MakeRaw inter_ok
R11180:11181 Coq.MSets.MSetList MakeRaw Ok class
R11183:11183 Coq.MSets.MSetList <> s var
R11186:11187 Coq.MSets.MSetList MakeRaw Ok class
R11189:11190 Coq.MSets.MSetList <> s' var
R11194:11195 Coq.MSets.MSetList MakeRaw Ok class
R11198:11202 Coq.MSets.MSetList MakeRaw inter def
R11206:11207 Coq.MSets.MSetList <> s' var
R11204:11204 Coq.MSets.MSetList <> s var
R11240:11247 Coq.MSets.MSetList MakeRaw isok_iff thm
R11240:11247 Coq.MSets.MSetList MakeRaw isok_iff thm
R11240:11247 Coq.MSets.MSetList MakeRaw isok_iff thm
R11240:11247 Coq.MSets.MSetList MakeRaw isok_iff thm
R11240:11247 Coq.MSets.MSetList MakeRaw isok_iff thm
R11240:11247 Coq.MSets.MSetList MakeRaw isok_iff thm
R11240:11247 Coq.MSets.MSetList MakeRaw isok_iff thm
R11240:11247 Coq.MSets.MSetList MakeRaw isok_iff thm
R11307:11312 Coq.MSets.MSetList MakeRaw Inf_eq thm
R11335:11343 Coq.MSets.MSetList MakeRaw inter_inf thm
R11358:11363 Coq.MSets.MSetList MakeRaw Inf_eq thm
R11307:11312 Coq.MSets.MSetList MakeRaw Inf_eq thm
R11335:11343 Coq.MSets.MSetList MakeRaw inter_inf thm
R11358:11363 Coq.MSets.MSetList MakeRaw Inf_eq thm
prf 11395:11404 MakeRaw inter_spec
R11426:11426 Coq.MSets.MSetList MakeRaw t def
R11434:11436 Coq.MSets.MSetList MakeRaw elt def
R11445:11446 Coq.MSets.MSetList MakeRaw Ok class
R11448:11448 Coq.MSets.MSetList <> s var
R11458:11459 Coq.MSets.MSetList MakeRaw Ok class
R11461:11462 Coq.MSets.MSetList <> s' var
R11486:11490 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11469:11470 Coq.MSets.MSetList MakeRaw In syndef
R11475:11479 Coq.MSets.MSetList MakeRaw inter def
R11483:11484 Coq.MSets.MSetList <> s' var
R11481:11481 Coq.MSets.MSetList <> s var
R11472:11472 Coq.MSets.MSetList <> x var
R11497:11500 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R11491:11492 Coq.MSets.MSetList MakeRaw In syndef
R11496:11496 Coq.MSets.MSetList <> s var
R11494:11494 Coq.MSets.MSetList <> x var
R11501:11502 Coq.MSets.MSetList MakeRaw In syndef
R11506:11507 Coq.MSets.MSetList <> s' var
R11504:11504 Coq.MSets.MSetList <> x var
R11546:11553 Coq.Lists.SetoidList <> InA_cons thm
R11546:11553 Coq.Lists.SetoidList <> InA_cons thm
R11546:11553 Coq.Lists.SetoidList <> InA_cons thm
R11546:11553 Coq.Lists.SetoidList <> InA_cons thm
R11546:11553 Coq.Lists.SetoidList <> InA_cons thm
R11546:11553 Coq.Lists.SetoidList <> InA_cons thm
R11546:11553 Coq.Lists.SetoidList <> InA_cons thm
R11546:11553 Coq.Lists.SetoidList <> InA_cons thm
R11546:11553 Coq.Lists.SetoidList <> InA_cons thm
R11546:11553 Coq.Lists.SetoidList <> InA_cons thm
R11546:11553 Coq.Lists.SetoidList <> InA_cons thm
R11546:11553 Coq.Lists.SetoidList <> InA_cons thm
R11546:11553 Coq.Lists.SetoidList <> InA_cons thm
R11546:11553 Coq.Lists.SetoidList <> InA_cons thm
R11546:11553 Coq.Lists.SetoidList <> InA_cons thm
R11546:11553 Coq.Lists.SetoidList <> InA_cons thm
R11546:11553 Coq.Lists.SetoidList <> InA_cons thm
R11546:11553 Coq.Lists.SetoidList <> InA_cons thm
prf 11640:11647 MakeRaw diff_inf
R11669:11669 Coq.MSets.MSetList MakeRaw t def
R11678:11679 Coq.MSets.MSetList MakeRaw Ok class
R11681:11681 Coq.MSets.MSetList <> s var
R11691:11692 Coq.MSets.MSetList MakeRaw Ok class
R11694:11695 Coq.MSets.MSetList <> s' var
R11703:11705 Coq.MSets.MSetList MakeRaw elt def
R11719:11722 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11731:11734 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11735:11737 Coq.MSets.MSetList MakeRaw Inf syndef
R11742:11745 Coq.MSets.MSetList MakeRaw diff def
R11749:11750 Coq.MSets.MSetList <> s' var
R11747:11747 Coq.MSets.MSetList <> s var
R11739:11739 Coq.MSets.MSetList <> a var
R11723:11725 Coq.MSets.MSetList MakeRaw Inf syndef
R11729:11730 Coq.MSets.MSetList <> s' var
R11727:11727 Coq.MSets.MSetList <> a var
R11712:11714 Coq.MSets.MSetList MakeRaw Inf syndef
R11718:11718 Coq.MSets.MSetList <> s var
R11716:11716 Coq.MSets.MSetList <> a var
R11796:11803 Coq.MSets.MSetList MakeRaw isok_iff thm
R11796:11803 Coq.MSets.MSetList MakeRaw isok_iff thm
R11796:11803 Coq.MSets.MSetList MakeRaw isok_iff thm
R11796:11803 Coq.MSets.MSetList MakeRaw isok_iff thm
R11796:11803 Coq.MSets.MSetList MakeRaw isok_iff thm
R11796:11803 Coq.MSets.MSetList MakeRaw isok_iff thm
R11864:11869 Coq.MSets.MSetList MakeRaw Inf_lt thm
R11864:11869 Coq.MSets.MSetList MakeRaw Inf_lt thm
R11893:11898 Coq.MSets.MSetList MakeRaw Inf_lt thm
R11893:11898 Coq.MSets.MSetList MakeRaw Inf_lt thm
R11944:11949 Coq.MSets.MSetList MakeRaw Inf_lt thm
R11944:11949 Coq.MSets.MSetList MakeRaw Inf_lt thm
inst 12024:12030 MakeRaw diff_ok
R12048:12049 Coq.MSets.MSetList MakeRaw Ok class
R12051:12051 Coq.MSets.MSetList <> s var
R12054:12055 Coq.MSets.MSetList MakeRaw Ok class
R12057:12058 Coq.MSets.MSetList <> s' var
R12062:12063 Coq.MSets.MSetList MakeRaw Ok class
R12066:12069 Coq.MSets.MSetList MakeRaw diff def
R12073:12074 Coq.MSets.MSetList <> s' var
R12071:12071 Coq.MSets.MSetList <> s var
R12107:12114 Coq.MSets.MSetList MakeRaw isok_iff thm
R12107:12114 Coq.MSets.MSetList MakeRaw isok_iff thm
R12107:12114 Coq.MSets.MSetList MakeRaw isok_iff thm
R12107:12114 Coq.MSets.MSetList MakeRaw isok_iff thm
R12107:12114 Coq.MSets.MSetList MakeRaw isok_iff thm
R12107:12114 Coq.MSets.MSetList MakeRaw isok_iff thm
R12107:12114 Coq.MSets.MSetList MakeRaw isok_iff thm
R12107:12114 Coq.MSets.MSetList MakeRaw isok_iff thm
prf 12160:12168 MakeRaw diff_spec
R12190:12190 Coq.MSets.MSetList MakeRaw t def
R12198:12200 Coq.MSets.MSetList MakeRaw elt def
R12209:12210 Coq.MSets.MSetList MakeRaw Ok class
R12212:12212 Coq.MSets.MSetList <> s var
R12222:12223 Coq.MSets.MSetList MakeRaw Ok class
R12225:12226 Coq.MSets.MSetList <> s' var
R12249:12253 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12233:12234 Coq.MSets.MSetList MakeRaw In syndef
R12239:12242 Coq.MSets.MSetList MakeRaw diff def
R12246:12247 Coq.MSets.MSetList <> s' var
R12244:12244 Coq.MSets.MSetList <> s var
R12236:12236 Coq.MSets.MSetList <> x var
R12260:12263 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R12254:12255 Coq.MSets.MSetList MakeRaw In syndef
R12259:12259 Coq.MSets.MSetList <> s var
R12257:12257 Coq.MSets.MSetList <> x var
R12264:12264 Coq.Init.Logic <> ::type_scope:'~'_x not
R12265:12266 Coq.MSets.MSetList MakeRaw In syndef
R12270:12271 Coq.MSets.MSetList <> s' var
R12268:12268 Coq.MSets.MSetList <> x var
R12310:12317 Coq.Lists.SetoidList <> InA_cons thm
R12310:12317 Coq.Lists.SetoidList <> InA_cons thm
R12310:12317 Coq.Lists.SetoidList <> InA_cons thm
R12310:12317 Coq.Lists.SetoidList <> InA_cons thm
R12310:12317 Coq.Lists.SetoidList <> InA_cons thm
R12310:12317 Coq.Lists.SetoidList <> InA_cons thm
R12310:12317 Coq.Lists.SetoidList <> InA_cons thm
R12310:12317 Coq.Lists.SetoidList <> InA_cons thm
R12310:12317 Coq.Lists.SetoidList <> InA_cons thm
R12310:12317 Coq.Lists.SetoidList <> InA_cons thm
R12310:12317 Coq.Lists.SetoidList <> InA_cons thm
R12310:12317 Coq.Lists.SetoidList <> InA_cons thm
R12310:12317 Coq.Lists.SetoidList <> InA_cons thm
R12310:12317 Coq.Lists.SetoidList <> InA_cons thm
R12310:12317 Coq.Lists.SetoidList <> InA_cons thm
R12310:12317 Coq.Lists.SetoidList <> InA_cons thm
R12310:12317 Coq.Lists.SetoidList <> InA_cons thm
R12310:12317 Coq.Lists.SetoidList <> InA_cons thm
prf 12435:12444 MakeRaw equal_spec
R12466:12466 Coq.MSets.MSetList MakeRaw t def
R12475:12476 Coq.MSets.MSetList MakeRaw Ok class
R12478:12478 Coq.MSets.MSetList <> s var
R12488:12489 Coq.MSets.MSetList MakeRaw Ok class
R12491:12492 Coq.MSets.MSetList <> s' var
R12516:12520 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R12509:12511 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12499:12503 Coq.MSets.MSetList MakeRaw equal def
R12507:12508 Coq.MSets.MSetList <> s' var
R12505:12505 Coq.MSets.MSetList <> s var
R12512:12515 Coq.Init.Datatypes <> true constr
R12521:12525 Coq.MSets.MSetList MakeRaw Equal def
R12529:12530 Coq.MSets.MSetList <> s' var
R12527:12527 Coq.MSets.MSetList <> s var
R12672:12673 Coq.MSets.MSetList MakeRaw In syndef
R12678:12680 Coq.Init.Datatypes <> nil constr
R12672:12673 Coq.MSets.MSetList MakeRaw In syndef
R12678:12680 Coq.Init.Datatypes <> nil constr
R12751:12752 Coq.MSets.MSetList MakeRaw In syndef
R12756:12758 Coq.Init.Datatypes <> nil constr
R12751:12752 Coq.MSets.MSetList MakeRaw In syndef
R12756:12758 Coq.Init.Datatypes <> nil constr
R12924:12931 Coq.Lists.SetoidList <> InA_cons thm
R12924:12931 Coq.Lists.SetoidList <> InA_cons thm
R12924:12931 Coq.Lists.SetoidList <> InA_cons thm
R12924:12931 Coq.Lists.SetoidList <> InA_cons thm
R12924:12931 Coq.Lists.SetoidList <> InA_cons thm
R12962:12969 Coq.Lists.SetoidList <> InA_cons thm
R12962:12969 Coq.Lists.SetoidList <> InA_cons thm
R12962:12969 Coq.Lists.SetoidList <> InA_cons thm
R12962:12969 Coq.Lists.SetoidList <> InA_cons thm
R12962:12969 Coq.Lists.SetoidList <> InA_cons thm
R13071:13072 Coq.MSets.MSetList MakeRaw In syndef
R13079:13080 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13071:13072 Coq.MSets.MSetList MakeRaw In syndef
R13079:13080 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13198:13199 Coq.MSets.MSetList MakeRaw In syndef
R13206:13207 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13198:13199 Coq.MSets.MSetList MakeRaw In syndef
R13206:13207 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
prf 13281:13291 MakeRaw subset_spec
R13313:13313 Coq.MSets.MSetList MakeRaw t def
R13322:13323 Coq.MSets.MSetList MakeRaw Ok class
R13325:13325 Coq.MSets.MSetList <> s var
R13335:13336 Coq.MSets.MSetList MakeRaw Ok class
R13338:13339 Coq.MSets.MSetList <> s' var
R13364:13368 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R13357:13359 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13346:13351 Coq.MSets.MSetList MakeRaw subset def
R13355:13356 Coq.MSets.MSetList <> s' var
R13353:13353 Coq.MSets.MSetList <> s var
R13360:13363 Coq.Init.Datatypes <> true constr
R13369:13374 Coq.MSets.MSetList MakeRaw Subset def
R13378:13379 Coq.MSets.MSetList <> s' var
R13376:13376 Coq.MSets.MSetList <> s var
R13559:13560 Coq.MSets.MSetList MakeRaw In syndef
R13564:13566 Coq.Init.Datatypes <> nil constr
R13559:13560 Coq.MSets.MSetList MakeRaw In syndef
R13564:13566 Coq.Init.Datatypes <> nil constr
R13745:13752 Coq.Lists.SetoidList <> InA_cons thm
R13745:13752 Coq.Lists.SetoidList <> InA_cons thm
R13745:13752 Coq.Lists.SetoidList <> InA_cons thm
R13745:13752 Coq.Lists.SetoidList <> InA_cons thm
R13745:13752 Coq.Lists.SetoidList <> InA_cons thm
R13780:13787 Coq.Lists.SetoidList <> InA_cons thm
R13780:13787 Coq.Lists.SetoidList <> InA_cons thm
R13780:13787 Coq.Lists.SetoidList <> InA_cons thm
R13780:13787 Coq.Lists.SetoidList <> InA_cons thm
R13780:13787 Coq.Lists.SetoidList <> InA_cons thm
R13889:13890 Coq.MSets.MSetList MakeRaw In syndef
R13897:13898 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R13889:13890 Coq.MSets.MSetList MakeRaw In syndef
R13897:13898 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R14038:14045 Coq.Lists.SetoidList <> InA_cons thm
R14038:14045 Coq.Lists.SetoidList <> InA_cons thm
R14038:14045 Coq.Lists.SetoidList <> InA_cons thm
R14038:14045 Coq.Lists.SetoidList <> InA_cons thm
R14038:14045 Coq.Lists.SetoidList <> InA_cons thm
R14070:14077 Coq.Lists.SetoidList <> InA_cons thm
R14070:14077 Coq.Lists.SetoidList <> InA_cons thm
R14070:14077 Coq.Lists.SetoidList <> InA_cons thm
R14070:14077 Coq.Lists.SetoidList <> InA_cons thm
R14070:14077 Coq.Lists.SetoidList <> InA_cons thm
R14094:14101 Coq.Lists.SetoidList <> InA_cons thm
R14094:14101 Coq.Lists.SetoidList <> InA_cons thm
R14094:14101 Coq.Lists.SetoidList <> InA_cons thm
R14094:14101 Coq.Lists.SetoidList <> InA_cons thm
inst 14165:14172 MakeRaw empty_ok
R14176:14177 Coq.MSets.MSetList MakeRaw Ok class
R14179:14183 Coq.MSets.MSetList MakeRaw empty def
prf 14227:14236 MakeRaw empty_spec
R14240:14244 Coq.MSets.MSetList MakeRaw Empty def
R14246:14250 Coq.MSets.MSetList MakeRaw empty def
R14271:14275 Coq.MSets.MSetList MakeRaw Empty def
R14278:14282 Coq.MSets.MSetList MakeRaw empty def
prf 14317:14329 MakeRaw is_empty_spec
R14344:14344 Coq.MSets.MSetList MakeRaw t def
R14364:14368 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14357:14359 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14347:14354 Coq.MSets.MSetList MakeRaw is_empty def
R14356:14356 Coq.MSets.MSetList <> s var
R14360:14363 Coq.Init.Datatypes <> true constr
R14369:14373 Coq.MSets.MSetList MakeRaw Empty def
R14375:14375 Coq.MSets.MSetList <> s var
prf 14514:14527 MakeRaw elements_spec1
R14543:14543 Coq.MSets.MSetList MakeRaw t def
R14551:14553 Coq.MSets.MSetList MakeRaw elt def
R14574:14578 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R14557:14558 Coq.MSets.MSetList MakeRaw In syndef
R14563:14570 Coq.MSets.MSetList MakeRaw elements def
R14572:14572 Coq.MSets.MSetList <> s var
R14560:14560 Coq.MSets.MSetList <> x var
R14579:14580 Coq.MSets.MSetList MakeRaw In syndef
R14584:14584 Coq.MSets.MSetList <> s var
R14582:14582 Coq.MSets.MSetList <> x var
prf 14625:14638 MakeRaw elements_spec2
R14654:14654 Coq.MSets.MSetList MakeRaw t def
R14663:14664 Coq.MSets.MSetList MakeRaw Ok class
R14666:14666 Coq.MSets.MSetList <> s var
R14670:14673 Coq.Sorting.Sorted <> sort syndef
R14681:14688 Coq.MSets.MSetList MakeRaw elements def
R14690:14690 Coq.MSets.MSetList <> s var
R14675:14678 Coq.MSets.MSetList X lt defax
R14732:14739 Coq.MSets.MSetList MakeRaw isok_iff thm
R14732:14739 Coq.MSets.MSetList MakeRaw isok_iff thm
R14732:14739 Coq.MSets.MSetList MakeRaw isok_iff thm
R14732:14739 Coq.MSets.MSetList MakeRaw isok_iff thm
prf 14764:14778 MakeRaw elements_spec2w
R14794:14794 Coq.MSets.MSetList MakeRaw t def
R14803:14804 Coq.MSets.MSetList MakeRaw Ok class
R14806:14806 Coq.MSets.MSetList <> s var
R14810:14815 Coq.Lists.SetoidList <> NoDupA ind
R14823:14830 Coq.MSets.MSetList MakeRaw elements def
R14832:14832 Coq.MSets.MSetList <> s var
R14817:14820 Coq.MSets.MSetList X eq defax
R14874:14881 Coq.MSets.MSetList MakeRaw isok_iff thm
R14874:14881 Coq.MSets.MSetList MakeRaw isok_iff thm
R14874:14881 Coq.MSets.MSetList MakeRaw isok_iff thm
R14874:14881 Coq.MSets.MSetList MakeRaw isok_iff thm
prf 14906:14918 MakeRaw min_elt_spec1
R14934:14934 Coq.MSets.MSetList MakeRaw t def
R14942:14944 Coq.MSets.MSetList MakeRaw elt def
R14966:14969 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14970:14971 Coq.MSets.MSetList MakeRaw In syndef
R14975:14975 Coq.MSets.MSetList <> s var
R14973:14973 Coq.MSets.MSetList <> x var
R14957:14959 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14948:14954 Coq.MSets.MSetList MakeRaw min_elt def
R14956:14956 Coq.MSets.MSetList <> s var
R14960:14963 Coq.Init.Datatypes <> Some constr
R14965:14965 Coq.MSets.MSetList <> x var
prf 15043:15055 MakeRaw min_elt_spec2
R15074:15074 Coq.MSets.MSetList MakeRaw t def
R15084:15086 Coq.MSets.MSetList MakeRaw elt def
R15095:15096 Coq.MSets.MSetList MakeRaw Ok class
R15098:15098 Coq.MSets.MSetList <> s var
R15123:15126 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15133:15136 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15137:15138 Coq.Init.Logic <> ::type_scope:'~'_x not
R15139:15142 Coq.MSets.MSetList X lt defax
R15146:15146 Coq.MSets.MSetList <> x var
R15144:15144 Coq.MSets.MSetList <> y var
R15127:15128 Coq.MSets.MSetList MakeRaw In syndef
R15132:15132 Coq.MSets.MSetList <> s var
R15130:15130 Coq.MSets.MSetList <> y var
R15114:15116 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15105:15111 Coq.MSets.MSetList MakeRaw min_elt def
R15113:15113 Coq.MSets.MSetList <> s var
R15117:15120 Coq.Init.Datatypes <> Some constr
R15122:15122 Coq.MSets.MSetList <> x var
prf 15270:15282 MakeRaw min_elt_spec3
R15297:15297 Coq.MSets.MSetList MakeRaw t def
R15316:15319 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15320:15324 Coq.MSets.MSetList MakeRaw Empty def
R15326:15326 Coq.MSets.MSetList <> s var
R15309:15311 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15300:15306 Coq.MSets.MSetList MakeRaw min_elt def
R15308:15308 Coq.MSets.MSetList <> s var
R15312:15315 Coq.Init.Datatypes <> None constr
prf 15410:15422 MakeRaw max_elt_spec1
R15438:15438 Coq.MSets.MSetList MakeRaw t def
R15446:15448 Coq.MSets.MSetList MakeRaw elt def
R15470:15473 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15474:15475 Coq.MSets.MSetList MakeRaw In syndef
R15479:15479 Coq.MSets.MSetList <> s var
R15477:15477 Coq.MSets.MSetList <> x var
R15461:15463 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15452:15458 Coq.MSets.MSetList MakeRaw max_elt def
R15460:15460 Coq.MSets.MSetList <> s var
R15464:15467 Coq.Init.Datatypes <> Some constr
R15469:15469 Coq.MSets.MSetList <> x var
prf 15634:15646 MakeRaw max_elt_spec2
R15665:15665 Coq.MSets.MSetList MakeRaw t def
R15675:15677 Coq.MSets.MSetList MakeRaw elt def
R15686:15687 Coq.MSets.MSetList MakeRaw Ok class
R15689:15689 Coq.MSets.MSetList <> s var
R15714:15717 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15724:15727 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15728:15729 Coq.Init.Logic <> ::type_scope:'~'_x not
R15730:15733 Coq.MSets.MSetList X lt defax
R15737:15737 Coq.MSets.MSetList <> y var
R15735:15735 Coq.MSets.MSetList <> x var
R15718:15719 Coq.MSets.MSetList MakeRaw In syndef
R15723:15723 Coq.MSets.MSetList <> s var
R15721:15721 Coq.MSets.MSetList <> y var
R15705:15707 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15696:15702 Coq.MSets.MSetList MakeRaw max_elt def
R15704:15704 Coq.MSets.MSetList <> s var
R15708:15711 Coq.Init.Datatypes <> Some constr
R15713:15713 Coq.MSets.MSetList <> x var
R15889:15889 Coq.Init.Logic <> ::type_scope:'~'_x not
R15890:15893 Coq.MSets.MSetList X lt defax
R15889:15889 Coq.Init.Logic <> ::type_scope:'~'_x not
R15890:15893 Coq.MSets.MSetList X lt defax
R15931:15934 Coq.MSets.MSetList X lt defax
R15931:15934 Coq.MSets.MSetList X lt defax
prf 15975:15987 MakeRaw max_elt_spec3
R16002:16002 Coq.MSets.MSetList MakeRaw t def
R16021:16024 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16025:16029 Coq.MSets.MSetList MakeRaw Empty def
R16031:16031 Coq.MSets.MSetList <> s var
R16014:16016 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16005:16011 Coq.MSets.MSetList MakeRaw max_elt def
R16013:16013 Coq.MSets.MSetList <> s var
R16017:16020 Coq.Init.Datatypes <> None constr
def 16186:16197 MakeRaw choose_spec1
R16217:16217 Coq.MSets.MSetList MakeRaw t def
R16225:16227 Coq.MSets.MSetList MakeRaw elt def
R16248:16251 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16252:16253 Coq.MSets.MSetList MakeRaw In syndef
R16257:16257 Coq.MSets.MSetList <> s var
R16255:16255 Coq.MSets.MSetList <> x var
R16239:16241 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16231:16236 Coq.MSets.MSetList MakeRaw choose def
R16238:16238 Coq.MSets.MSetList <> s var
R16242:16245 Coq.Init.Datatypes <> Some constr
R16247:16247 Coq.MSets.MSetList <> x var
R16262:16274 Coq.MSets.MSetList MakeRaw min_elt_spec1 thm
def 16291:16302 MakeRaw choose_spec2
R16321:16321 Coq.MSets.MSetList MakeRaw t def
R16339:16342 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16343:16347 Coq.MSets.MSetList MakeRaw Empty def
R16349:16349 Coq.MSets.MSetList <> s var
R16332:16334 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16324:16329 Coq.MSets.MSetList MakeRaw choose def
R16331:16331 Coq.MSets.MSetList <> s var
R16335:16338 Coq.Init.Datatypes <> None constr
R16354:16366 Coq.MSets.MSetList MakeRaw min_elt_spec3 thm
prf 16378:16389 MakeRaw choose_spec3
R16414:16417 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16423:16429 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16447:16450 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16470:16473 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16484:16487 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16488:16491 Coq.MSets.MSetList X eq defax
R16495:16496 Coq.MSets.MSetList <> x' var
R16493:16493 Coq.MSets.MSetList <> x var
R16474:16478 Coq.MSets.MSetList MakeRaw Equal def
R16482:16483 Coq.MSets.MSetList <> s' var
R16480:16480 Coq.MSets.MSetList <> s var
R16460:16462 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16451:16456 Coq.MSets.MSetList MakeRaw choose def
R16458:16459 Coq.MSets.MSetList <> s' var
R16463:16466 Coq.Init.Datatypes <> Some constr
R16468:16469 Coq.MSets.MSetList <> x' var
R16438:16440 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16430:16435 Coq.MSets.MSetList MakeRaw choose def
R16437:16437 Coq.MSets.MSetList <> s var
R16441:16444 Coq.Init.Datatypes <> Some constr
R16446:16446 Coq.MSets.MSetList <> x var
R16418:16419 Coq.MSets.MSetList MakeRaw Ok class
R16421:16422 Coq.MSets.MSetList <> s' var
R16410:16411 Coq.MSets.MSetList MakeRaw Ok class
R16413:16413 Coq.MSets.MSetList <> s var
R16518:16523 Coq.MSets.MSetList MakeRaw choose def
R16571:16571 Coq.Init.Logic <> ::type_scope:'~'_x not
R16572:16575 Coq.MSets.MSetList X lt defax
R16571:16571 Coq.Init.Logic <> ::type_scope:'~'_x not
R16572:16575 Coq.MSets.MSetList X lt defax
R16594:16606 Coq.MSets.MSetList MakeRaw min_elt_spec2 thm
R16594:16606 Coq.MSets.MSetList MakeRaw min_elt_spec2 thm
R16651:16663 Coq.MSets.MSetList MakeRaw min_elt_spec1 thm
R16651:16663 Coq.MSets.MSetList MakeRaw min_elt_spec1 thm
R16677:16677 Coq.Init.Logic <> ::type_scope:'~'_x not
R16678:16681 Coq.MSets.MSetList X lt defax
R16677:16677 Coq.Init.Logic <> ::type_scope:'~'_x not
R16678:16681 Coq.MSets.MSetList X lt defax
R16700:16712 Coq.MSets.MSetList MakeRaw min_elt_spec2 thm
R16700:16712 Coq.MSets.MSetList MakeRaw min_elt_spec2 thm
R16754:16766 Coq.MSets.MSetList MakeRaw min_elt_spec1 thm
R16754:16766 Coq.MSets.MSetList MakeRaw min_elt_spec1 thm
prf 16795:16803 MakeRaw fold_spec
R16822:16822 Coq.MSets.MSetList MakeRaw t def
R16841:16841 Coq.MSets.MSetList <> A var
R16852:16855 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16857:16860 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16861:16861 Coq.MSets.MSetList <> A var
R16856:16856 Coq.MSets.MSetList <> A var
R16849:16851 Coq.MSets.MSetList MakeRaw elt def
R16878:16880 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16868:16871 Coq.MSets.MSetList MakeRaw fold def
R16877:16877 Coq.MSets.MSetList <> i var
R16875:16875 Coq.MSets.MSetList <> s var
R16873:16873 Coq.MSets.MSetList <> f var
R16881:16889 Coq.Lists.List <> fold_left def
R16913:16913 Coq.MSets.MSetList <> i var
R16901:16908 Coq.MSets.MSetList MakeRaw elements def
R16910:16910 Coq.MSets.MSetList <> s var
R16892:16895 Coq.Program.Basics <> flip def
R16897:16897 Coq.MSets.MSetList <> f var
prf 16956:16968 MakeRaw cardinal_spec
R16987:16987 Coq.MSets.MSetList MakeRaw t def
R16996:16997 Coq.MSets.MSetList MakeRaw Ok class
R16999:16999 Coq.MSets.MSetList <> s var
R17016:17018 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17006:17013 Coq.MSets.MSetList MakeRaw cardinal def
R17015:17015 Coq.MSets.MSetList <> s var
R17019:17024 Coq.Init.Datatypes <> length def
R17027:17034 Coq.MSets.MSetList MakeRaw elements def
R17036:17036 Coq.MSets.MSetList <> s var
prf 17073:17082 MakeRaw filter_inf
R17101:17101 Coq.MSets.MSetList MakeRaw t def
R17109:17111 Coq.MSets.MSetList MakeRaw elt def
R17122:17125 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17126:17129 Coq.Init.Datatypes <> bool ind
R17119:17121 Coq.MSets.MSetList MakeRaw elt def
R17138:17139 Coq.MSets.MSetList MakeRaw Ok class
R17141:17141 Coq.MSets.MSetList <> s var
R17155:17158 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17159:17161 Coq.MSets.MSetList MakeRaw Inf syndef
R17166:17171 Coq.MSets.MSetList MakeRaw filter def
R17175:17175 Coq.MSets.MSetList <> s var
R17173:17173 Coq.MSets.MSetList <> f var
R17163:17163 Coq.MSets.MSetList <> x var
R17148:17150 Coq.MSets.MSetList MakeRaw Inf syndef
R17154:17154 Coq.MSets.MSetList <> s var
R17152:17152 Coq.MSets.MSetList <> x var
R17312:17317 Coq.MSets.MSetList MakeRaw Inf_lt thm
R17312:17317 Coq.MSets.MSetList MakeRaw Inf_lt thm
inst 17359:17367 MakeRaw filter_ok
R17384:17385 Coq.MSets.MSetList MakeRaw Ok class
R17387:17387 Coq.MSets.MSetList <> s var
R17391:17392 Coq.MSets.MSetList MakeRaw Ok class
R17395:17400 Coq.MSets.MSetList MakeRaw filter def
R17404:17404 Coq.MSets.MSetList <> s var
R17402:17402 Coq.MSets.MSetList <> f var
R17437:17444 Coq.MSets.MSetList MakeRaw isok_iff thm
R17437:17444 Coq.MSets.MSetList MakeRaw isok_iff thm
R17437:17444 Coq.MSets.MSetList MakeRaw isok_iff thm
R17437:17444 Coq.MSets.MSetList MakeRaw isok_iff thm
R17437:17444 Coq.MSets.MSetList MakeRaw isok_iff thm
R17437:17444 Coq.MSets.MSetList MakeRaw isok_iff thm
R17575:17584 Coq.MSets.MSetList MakeRaw filter_inf thm
R17575:17584 Coq.MSets.MSetList MakeRaw filter_inf thm
prf 17609:17619 MakeRaw filter_spec
R17638:17638 Coq.MSets.MSetList MakeRaw t def
R17646:17648 Coq.MSets.MSetList MakeRaw elt def
R17659:17662 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17663:17666 Coq.Init.Datatypes <> bool ind
R17656:17658 Coq.MSets.MSetList MakeRaw elt def
R17693:17700 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17743:17743 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17718:17722 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17701:17702 Coq.MSets.MSetList MakeRaw In syndef
R17707:17712 Coq.MSets.MSetList MakeRaw filter def
R17716:17716 Coq.MSets.MSetList <> s var
R17714:17714 Coq.MSets.MSetList <> f var
R17704:17704 Coq.MSets.MSetList <> x var
R17729:17732 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17723:17724 Coq.MSets.MSetList MakeRaw In syndef
R17728:17728 Coq.MSets.MSetList <> s var
R17726:17726 Coq.MSets.MSetList <> x var
R17736:17738 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17733:17733 Coq.MSets.MSetList <> f var
R17735:17735 Coq.MSets.MSetList <> x var
R17739:17742 Coq.Init.Datatypes <> true constr
R17673:17678 Coq.Classes.Morphisms <> Proper class
R17692:17692 Coq.MSets.MSetList <> f var
R17685:17687 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R17681:17684 Coq.MSets.MSetList X eq defax
R17688:17689 Coq.Init.Logic <> eq ind
R17843:17850 Coq.Lists.SetoidList <> InA_cons thm
R17843:17850 Coq.Lists.SetoidList <> InA_cons thm
R17843:17850 Coq.Lists.SetoidList <> InA_cons thm
R17843:17850 Coq.Lists.SetoidList <> InA_cons thm
R17843:17850 Coq.Lists.SetoidList <> InA_cons thm
R17843:17850 Coq.Lists.SetoidList <> InA_cons thm
R17843:17850 Coq.Lists.SetoidList <> InA_cons thm
R17843:17850 Coq.Lists.SetoidList <> InA_cons thm
prf 17969:17980 MakeRaw for_all_spec
R17999:17999 Coq.MSets.MSetList MakeRaw t def
R18010:18013 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18014:18017 Coq.Init.Datatypes <> bool ind
R18007:18009 Coq.MSets.MSetList MakeRaw elt def
R18044:18051 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18106:18106 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18070:18074 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18063:18065 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18052:18058 Coq.MSets.MSetList MakeRaw for_all def
R18062:18062 Coq.MSets.MSetList <> s var
R18060:18060 Coq.MSets.MSetList <> f var
R18066:18069 Coq.Init.Datatypes <> true constr
R18075:18081 Coq.MSets.MSetList MakeRaw For_all def
R18105:18105 Coq.MSets.MSetList <> s var
R18096:18098 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18093:18093 Coq.MSets.MSetList <> f var
R18095:18095 Coq.MSets.MSetList <> x var
R18099:18102 Coq.Init.Datatypes <> true constr
R18024:18029 Coq.Classes.Morphisms <> Proper class
R18043:18043 Coq.MSets.MSetList <> f var
R18036:18038 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R18032:18035 Coq.MSets.MSetList X eq defax
R18039:18040 Coq.Init.Logic <> eq ind
R18127:18133 Coq.MSets.MSetList MakeRaw For_all def
prf 18368:18378 MakeRaw exists_spec
R18397:18397 Coq.MSets.MSetList MakeRaw t def
R18408:18411 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18412:18415 Coq.Init.Datatypes <> bool ind
R18405:18407 Coq.MSets.MSetList MakeRaw elt def
R18442:18449 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18503:18503 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18468:18472 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R18461:18463 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18450:18456 Coq.MSets.MSetList MakeRaw exists_ def
R18460:18460 Coq.MSets.MSetList <> s var
R18458:18458 Coq.MSets.MSetList <> f var
R18464:18467 Coq.Init.Datatypes <> true constr
R18473:18478 Coq.MSets.MSetList MakeRaw Exists def
R18502:18502 Coq.MSets.MSetList <> s var
R18493:18495 Coq.Init.Logic <> ::type_scope:x_'='_x not
R18490:18490 Coq.MSets.MSetList <> f var
R18492:18492 Coq.MSets.MSetList <> x var
R18496:18499 Coq.Init.Datatypes <> true constr
R18422:18427 Coq.Classes.Morphisms <> Proper class
R18441:18441 Coq.MSets.MSetList <> f var
R18434:18436 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R18430:18433 Coq.MSets.MSetList X eq defax
R18437:18438 Coq.Init.Logic <> eq ind
R18524:18529 Coq.MSets.MSetList MakeRaw Exists def
prf 18757:18770 MakeRaw partition_inf1
R18789:18789 Coq.MSets.MSetList MakeRaw t def
R18800:18803 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18804:18807 Coq.Init.Datatypes <> bool ind
R18797:18799 Coq.MSets.MSetList MakeRaw elt def
R18815:18817 Coq.MSets.MSetList MakeRaw elt def
R18826:18827 Coq.MSets.MSetList MakeRaw Ok class
R18829:18829 Coq.MSets.MSetList <> s var
R18843:18846 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R18847:18849 Coq.MSets.MSetList MakeRaw Inf syndef
R18854:18856 Coq.Init.Datatypes <> fst def
R18859:18867 Coq.MSets.MSetList MakeRaw partition def
R18871:18871 Coq.MSets.MSetList <> s var
R18869:18869 Coq.MSets.MSetList <> f var
R18851:18851 Coq.MSets.MSetList <> x var
R18836:18838 Coq.MSets.MSetList MakeRaw Inf syndef
R18842:18842 Coq.MSets.MSetList <> s var
R18840:18840 Coq.MSets.MSetList <> x var
R18919:18926 Coq.MSets.MSetList MakeRaw isok_iff thm
R18919:18926 Coq.MSets.MSetList MakeRaw isok_iff thm
R18919:18926 Coq.MSets.MSetList MakeRaw isok_iff thm
R18919:18926 Coq.MSets.MSetList MakeRaw isok_iff thm
R19066:19074 Coq.MSets.MSetList MakeRaw partition def
R19066:19074 Coq.MSets.MSetList MakeRaw partition def
R19066:19074 Coq.MSets.MSetList MakeRaw partition def
R19123:19128 Coq.MSets.MSetList MakeRaw Inf_lt thm
R19123:19128 Coq.MSets.MSetList MakeRaw Inf_lt thm
prf 19160:19173 MakeRaw partition_inf2
R19192:19192 Coq.MSets.MSetList MakeRaw t def
R19203:19206 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19207:19210 Coq.Init.Datatypes <> bool ind
R19200:19202 Coq.MSets.MSetList MakeRaw elt def
R19218:19220 Coq.MSets.MSetList MakeRaw elt def
R19229:19230 Coq.MSets.MSetList MakeRaw Ok class
R19232:19232 Coq.MSets.MSetList <> s var
R19246:19249 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R19250:19252 Coq.MSets.MSetList MakeRaw Inf syndef
R19257:19259 Coq.Init.Datatypes <> snd def
R19262:19270 Coq.MSets.MSetList MakeRaw partition def
R19274:19274 Coq.MSets.MSetList <> s var
R19272:19272 Coq.MSets.MSetList <> f var
R19254:19254 Coq.MSets.MSetList <> x var
R19239:19241 Coq.MSets.MSetList MakeRaw Inf syndef
R19245:19245 Coq.MSets.MSetList <> s var
R19243:19243 Coq.MSets.MSetList <> x var
R19322:19329 Coq.MSets.MSetList MakeRaw isok_iff thm
R19322:19329 Coq.MSets.MSetList MakeRaw isok_iff thm
R19322:19329 Coq.MSets.MSetList MakeRaw isok_iff thm
R19322:19329 Coq.MSets.MSetList MakeRaw isok_iff thm
R19469:19477 Coq.MSets.MSetList MakeRaw partition def
R19469:19477 Coq.MSets.MSetList MakeRaw partition def
R19469:19477 Coq.MSets.MSetList MakeRaw partition def
R19518:19523 Coq.MSets.MSetList MakeRaw Inf_lt thm
R19518:19523 Coq.MSets.MSetList MakeRaw Inf_lt thm
inst 19573:19585 MakeRaw partition_ok1
R19602:19603 Coq.MSets.MSetList MakeRaw Ok class
R19605:19605 Coq.MSets.MSetList <> s var
R19609:19610 Coq.MSets.MSetList MakeRaw Ok class
R19613:19615 Coq.Init.Datatypes <> fst def
R19618:19626 Coq.MSets.MSetList MakeRaw partition def
R19630:19630 Coq.MSets.MSetList <> s var
R19628:19628 Coq.MSets.MSetList <> f var
R19664:19671 Coq.MSets.MSetList MakeRaw isok_iff thm
R19664:19671 Coq.MSets.MSetList MakeRaw isok_iff thm
R19664:19671 Coq.MSets.MSetList MakeRaw isok_iff thm
R19664:19671 Coq.MSets.MSetList MakeRaw isok_iff thm
R19664:19671 Coq.MSets.MSetList MakeRaw isok_iff thm
R19664:19671 Coq.MSets.MSetList MakeRaw isok_iff thm
R19790:19803 Coq.MSets.MSetList MakeRaw partition_inf1 thm
R19790:19803 Coq.MSets.MSetList MakeRaw partition_inf1 thm
R19833:19841 Coq.MSets.MSetList MakeRaw partition def
R19833:19841 Coq.MSets.MSetList MakeRaw partition def
R19833:19841 Coq.MSets.MSetList MakeRaw partition def
inst 19888:19900 MakeRaw partition_ok2
R19917:19918 Coq.MSets.MSetList MakeRaw Ok class
R19920:19920 Coq.MSets.MSetList <> s var
R19924:19925 Coq.MSets.MSetList MakeRaw Ok class
R19928:19930 Coq.Init.Datatypes <> snd def
R19933:19941 Coq.MSets.MSetList MakeRaw partition def
R19945:19945 Coq.MSets.MSetList <> s var
R19943:19943 Coq.MSets.MSetList <> f var
R19979:19986 Coq.MSets.MSetList MakeRaw isok_iff thm
R19979:19986 Coq.MSets.MSetList MakeRaw isok_iff thm
R19979:19986 Coq.MSets.MSetList MakeRaw isok_iff thm
R19979:19986 Coq.MSets.MSetList MakeRaw isok_iff thm
R19979:19986 Coq.MSets.MSetList MakeRaw isok_iff thm
R19979:19986 Coq.MSets.MSetList MakeRaw isok_iff thm
R20105:20118 Coq.MSets.MSetList MakeRaw partition_inf2 thm
R20105:20118 Coq.MSets.MSetList MakeRaw partition_inf2 thm
R20148:20156 Coq.MSets.MSetList MakeRaw partition def
R20148:20156 Coq.MSets.MSetList MakeRaw partition def
R20148:20156 Coq.MSets.MSetList MakeRaw partition def
prf 20193:20207 MakeRaw partition_spec1
R20226:20226 Coq.MSets.MSetList MakeRaw t def
R20237:20240 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20241:20244 Coq.Init.Datatypes <> bool ind
R20234:20236 Coq.MSets.MSetList MakeRaw elt def
R20271:20274 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20275:20279 Coq.MSets.MSetList MakeRaw Equal def
R20304:20309 Coq.MSets.MSetList MakeRaw filter def
R20313:20313 Coq.MSets.MSetList <> s var
R20311:20311 Coq.MSets.MSetList <> f var
R20282:20284 Coq.Init.Datatypes <> fst def
R20287:20295 Coq.MSets.MSetList MakeRaw partition def
R20299:20299 Coq.MSets.MSetList <> s var
R20297:20297 Coq.MSets.MSetList <> f var
R20251:20256 Coq.Classes.Morphisms <> Proper class
R20270:20270 Coq.MSets.MSetList <> f var
R20263:20265 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R20259:20262 Coq.MSets.MSetList X eq defax
R20266:20267 Coq.Init.Logic <> eq ind
R20368:20372 Coq.MSets.MSetList MakeRaw Equal def
R20464:20472 Coq.MSets.MSetList MakeRaw partition def
R20464:20472 Coq.MSets.MSetList MakeRaw partition def
prf 20654:20668 MakeRaw partition_spec2
R20687:20687 Coq.MSets.MSetList MakeRaw t def
R20698:20701 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20702:20705 Coq.Init.Datatypes <> bool ind
R20695:20697 Coq.MSets.MSetList MakeRaw elt def
R20732:20738 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20739:20743 Coq.MSets.MSetList MakeRaw Equal def
R20768:20773 Coq.MSets.MSetList MakeRaw filter def
R20797:20797 Coq.MSets.MSetList <> s var
R20785:20788 Coq.Init.Datatypes <> negb def
R20791:20791 Coq.MSets.MSetList <> f var
R20793:20793 Coq.MSets.MSetList <> x var
R20746:20748 Coq.Init.Datatypes <> snd def
R20751:20759 Coq.MSets.MSetList MakeRaw partition def
R20763:20763 Coq.MSets.MSetList <> s var
R20761:20761 Coq.MSets.MSetList <> f var
R20712:20717 Coq.Classes.Morphisms <> Proper class
R20731:20731 Coq.MSets.MSetList <> f var
R20724:20726 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R20720:20723 Coq.MSets.MSetList X eq defax
R20727:20728 Coq.Init.Logic <> eq ind
R20852:20856 Coq.MSets.MSetList MakeRaw Equal def
R20948:20956 Coq.MSets.MSetList MakeRaw partition def
R20948:20956 Coq.MSets.MSetList MakeRaw partition def
R21136:21147 Coq.MSets.MSetList MakeRaw.ForNotations <> sec
def 21164:21165 MakeRaw In
R21170:21172 Coq.Lists.SetoidList <> InA ind
R21174:21177 Coq.MSets.MSetList X eq defax
inst 21191:21199 MakeRaw In_compat
R21203:21208 Coq.Classes.Morphisms <> Proper class
R21229:21230 Coq.MSets.MSetList MakeRaw In def
R21215:21217 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R21211:21214 Coq.MSets.MSetList X eq defax
R21220:21223 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R21218:21219 Coq.Init.Logic <> eq ind
R21224:21226 Coq.Init.Logic <> iff def
R21303:21318 Coq.MSets.MSetInterface MakeListOrdering <> modtype
R21320:21320 Coq.MSets.MSetList X <> modtype
mod 21298:21298 <> MakeRaw.L
def 21336:21337 MakeRaw eq
R21342:21345 Coq.MSets.MSetList MakeRaw eq def
def 21361:21368 MakeRaw eq_equiv
R21373:21382 Coq.MSets.MSetList MakeRaw eq_equiv inst
def 21398:21399 MakeRaw lt
R21414:21420 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R21428:21429 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R21436:21439 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R21430:21431 Coq.MSets.MSetList MakeRaw Ok class
R21433:21435 Coq.MSets.MSetList <> l1' var
R21446:21449 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R21440:21441 Coq.MSets.MSetList MakeRaw Ok class
R21443:21445 Coq.MSets.MSetList <> l2' var
R21459:21462 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R21450:21451 Coq.MSets.MSetList MakeRaw eq def
R21456:21458 Coq.MSets.MSetList <> l1' var
R21453:21454 Coq.MSets.MSetList <> l1 var
R21472:21475 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R21463:21464 Coq.MSets.MSetList MakeRaw eq def
R21469:21471 Coq.MSets.MSetList <> l2' var
R21466:21467 Coq.MSets.MSetList <> l2 var
R21476:21479 Coq.MSets.MSetList MakeRaw lt def
R21485:21487 Coq.MSets.MSetList <> l2' var
R21481:21483 Coq.MSets.MSetList <> l1' var
inst 21502:21512 MakeRaw lt_strorder
R21516:21526 Coq.Classes.RelationClasses <> StrictOrder class
R21528:21529 Coq.MSets.MSetList MakeRaw lt def
R21616:21623 Coq.MSets.MSetList MakeRaw isok_iff thm
R21616:21623 Coq.MSets.MSetList MakeRaw isok_iff thm
R21616:21623 Coq.MSets.MSetList MakeRaw isok_iff thm
R21616:21623 Coq.MSets.MSetList MakeRaw isok_iff thm
R21641:21647 Coq.Lists.SetoidList <> eqlistA ind
R21649:21652 Coq.MSets.MSetList X eq defax
R21641:21647 Coq.Lists.SetoidList <> eqlistA ind
R21649:21652 Coq.MSets.MSetList X eq defax
R21707:21710 Coq.MSets.MSetList X lt defax
R21671:21694 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R21726:21727 Coq.MSets.MSetList MakeRaw ok def
R21707:21710 Coq.MSets.MSetList X lt defax
R21671:21694 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R21726:21727 Coq.MSets.MSetList MakeRaw ok def
R21726:21727 Coq.MSets.MSetList MakeRaw ok def
R21726:21727 Coq.MSets.MSetList MakeRaw ok def
R21726:21727 Coq.MSets.MSetList MakeRaw ok def
R21726:21727 Coq.MSets.MSetList MakeRaw ok def
R21726:21727 Coq.MSets.MSetList MakeRaw ok def
R21805:21827 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R21805:21827 Coq.Classes.RelationClasses <> StrictOrder_Irreflexive meth
R21995:22002 Coq.MSets.MSetList MakeRaw isok_iff thm
R21995:22002 Coq.MSets.MSetList MakeRaw isok_iff thm
R21995:22002 Coq.MSets.MSetList MakeRaw isok_iff thm
R21995:22002 Coq.MSets.MSetList MakeRaw isok_iff thm
R21995:22002 Coq.MSets.MSetList MakeRaw isok_iff thm
R21995:22002 Coq.MSets.MSetList MakeRaw isok_iff thm
R22045:22051 Coq.Lists.SetoidList <> eqlistA ind
R22053:22056 Coq.MSets.MSetList X eq defax
R22045:22051 Coq.Lists.SetoidList <> eqlistA ind
R22053:22056 Coq.MSets.MSetList X eq defax
R22114:22117 Coq.MSets.MSetList X lt defax
R22078:22101 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R22133:22134 Coq.MSets.MSetList MakeRaw ok def
R22114:22117 Coq.MSets.MSetList X lt defax
R22078:22101 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R22133:22134 Coq.MSets.MSetList MakeRaw ok def
R22133:22134 Coq.MSets.MSetList MakeRaw ok def
R22133:22134 Coq.MSets.MSetList MakeRaw ok def
R22133:22134 Coq.MSets.MSetList MakeRaw ok def
R22133:22134 Coq.MSets.MSetList MakeRaw ok def
R22133:22134 Coq.MSets.MSetList MakeRaw ok def
inst 22250:22258 MakeRaw lt_compat
R22262:22267 Coq.Classes.Morphisms <> Proper class
R22285:22286 Coq.MSets.MSetList MakeRaw lt def
R22272:22274 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R22270:22271 Coq.MSets.MSetList MakeRaw eq def
R22277:22279 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R22275:22276 Coq.MSets.MSetList MakeRaw eq def
R22280:22282 Coq.Init.Logic <> iff def
prf 22705:22720 MakeRaw compare_spec_aux
R22737:22744 Coq.Init.Datatypes <> CompSpec def
R22760:22766 Coq.MSets.MSetList MakeRaw compare def
R22770:22771 Coq.MSets.MSetList <> s' var
R22768:22768 Coq.MSets.MSetList <> s var
R22756:22757 Coq.MSets.MSetList <> s' var
R22754:22754 Coq.MSets.MSetList <> s var
R22749:22752 Coq.MSets.MSetList MakeRaw lt def
R22746:22747 Coq.MSets.MSetList MakeRaw eq def
prf 22891:22902 MakeRaw compare_spec
R22923:22926 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22932:22938 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22939:22946 Coq.Init.Datatypes <> CompSpec def
R22960:22966 Coq.MSets.MSetList MakeRaw compare def
R22970:22971 Coq.MSets.MSetList <> s' var
R22968:22968 Coq.MSets.MSetList <> s var
R22956:22957 Coq.MSets.MSetList <> s' var
R22954:22954 Coq.MSets.MSetList <> s var
R22951:22952 Coq.MSets.MSetList MakeRaw lt def
R22948:22949 Coq.MSets.MSetList MakeRaw eq def
R22927:22928 Coq.MSets.MSetList MakeRaw Ok class
R22930:22931 Coq.MSets.MSetList <> s' var
R22919:22920 Coq.MSets.MSetList MakeRaw Ok class
R22922:22922 Coq.MSets.MSetList <> s var
R23018:23033 Coq.MSets.MSetList MakeRaw compare_spec_aux thm
R23018:23033 Coq.MSets.MSetList MakeRaw compare_spec_aux thm
R23103:23104 Coq.MSets.MSetList MakeRaw ok def
R23103:23104 Coq.MSets.MSetList MakeRaw ok def
R23103:23104 Coq.MSets.MSetList MakeRaw ok def
R23103:23104 Coq.MSets.MSetList MakeRaw ok def
R23103:23104 Coq.MSets.MSetList MakeRaw ok def
R23103:23104 Coq.MSets.MSetList MakeRaw ok def
R23103:23104 Coq.MSets.MSetList MakeRaw ok def
R23103:23104 Coq.MSets.MSetList MakeRaw ok def
R23149:23150 Coq.MSets.MSetList MakeRaw ok def
R23149:23150 Coq.MSets.MSetList MakeRaw ok def
R23149:23150 Coq.MSets.MSetList MakeRaw ok def
R23149:23150 Coq.MSets.MSetList MakeRaw ok def
R23149:23150 Coq.MSets.MSetList MakeRaw ok def
R23149:23150 Coq.MSets.MSetList MakeRaw ok def
R23149:23150 Coq.MSets.MSetList MakeRaw ok def
R23149:23150 Coq.MSets.MSetList MakeRaw ok def
R23165:23171 Coq.MSets.MSetList MakeRaw <> mod
R23355:23365 Coq.Structures.Orders OrderedType <> mod
R23371:23371 Coq.MSets.MSetInterface S <> mod
R23390:23390 Coq.MSets.MSetList X <> modtype
mod 23346:23349 <> Make
R23408:23414 Coq.MSets.MSetList MakeRaw <> modtype
R23416:23416 Coq.MSets.MSetList X <> modtype
mod 23401:23403 <> Make.Raw
R23428:23435 Coq.MSets.MSetInterface Raw2Sets <> modtype
R23437:23437 Coq.MSets.MSetList X <> modtype
R23439:23441 Coq.MSets.MSetList Make.Raw <> modtype
R23448:23451 Coq.MSets.MSetList Make <> mod
R23540:23548 Coq.Logic.Eqdep_dec <> <> lib
modtype 23564:23585 <> OrderedTypeWithLeibniz
R23598:23608 Coq.Structures.Orders OrderedType <> mod
ax 23623:23632 OrderedTypeWithLeibniz eq_leibniz
R23654:23657 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23659:23661 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23658:23658 Coq.MSets.MSetList <> x var
R23662:23662 Coq.MSets.MSetList <> y var
R23648:23649 Coq.MSets.MSetList OrderedTypeWithLeibniz eq defax
R23653:23653 Coq.MSets.MSetList <> y var
R23651:23651 Coq.MSets.MSetList <> x var
R23669:23690 Coq.MSets.MSetList OrderedTypeWithLeibniz <> modtype
modtype 23706:23717 <> SWithLeibniz
R23741:23762 Coq.MSets.MSetList OrderedTypeWithLeibniz <> mod
mod 23737:23737 <> SWithLeibniz.E
R23775:23780 Coq.MSets.MSetInterface SetsOn <> mod
R23782:23782 Coq.MSets.MSetList SWithLeibniz.E <> modtype
ax 23797:23806 SWithLeibniz eq_leibniz
R23828:23831 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23833:23835 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23832:23832 Coq.MSets.MSetList <> x var
R23836:23836 Coq.MSets.MSetList <> y var
R23822:23823 Coq.MSets.MSetList SWithLeibniz eq def
R23827:23827 Coq.MSets.MSetList <> y var
R23825:23825 Coq.MSets.MSetList <> x var
R23843:23854 Coq.MSets.MSetList SWithLeibniz <> modtype
R23885:23906 Coq.MSets.MSetList OrderedTypeWithLeibniz <> mod
R23912:23923 Coq.MSets.MSetList SWithLeibniz <> mod
R23942:23942 Coq.MSets.MSetList X <> modtype
mod 23865:23879 <> MakeWithLeibniz
R23959:23959 Coq.MSets.MSetList X <> modtype
mod 23954:23954 <> MakeWithLeibniz.E
R23978:23984 Coq.MSets.MSetList MakeRaw <> modtype
R23986:23986 Coq.MSets.MSetList X <> modtype
mod 23971:23973 <> MakeWithLeibniz.Raw
R23999:24008 Coq.MSets.MSetInterface Raw2SetsOn <> modtype
R24010:24010 Coq.MSets.MSetList X <> modtype
R24012:24014 Coq.MSets.MSetList MakeWithLeibniz.Raw <> modtype
prf 24026:24040 MakeWithLeibniz eq_leibniz_list
R24076:24079 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24082:24084 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24080:24081 Coq.MSets.MSetList <> xs var
R24085:24086 Coq.MSets.MSetList <> ys var
R24058:24064 Coq.Lists.SetoidList <> eqlistA ind
R24074:24075 Coq.MSets.MSetList <> ys var
R24071:24072 Coq.MSets.MSetList <> xs var
R24066:24069 Coq.MSets.MSetList X eq defax
R24205:24216 Coq.MSets.MSetList X eq_leibniz defax
R24205:24216 Coq.MSets.MSetList X eq_leibniz defax
prf 24282:24291 MakeWithLeibniz eq_leibniz
R24315:24318 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24320:24322 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24319:24319 Coq.MSets.MSetList <> s var
R24323:24324 Coq.MSets.MSetList <> s' var
R24308:24309 Coq.MSets.MSetList MakeWithLeibniz eq def
R24313:24314 Coq.MSets.MSetList <> s' var
R24311:24311 Coq.MSets.MSetList <> s var
R24382:24391 Coq.Lists.SetoidList <> equivlistA def
R24393:24396 Coq.MSets.MSetList X eq defax
R24382:24391 Coq.Lists.SetoidList <> equivlistA def
R24393:24396 Coq.MSets.MSetList X eq defax
R24429:24435 Coq.Lists.SetoidList <> eqlistA ind
R24437:24440 Coq.MSets.MSetList X eq defax
R24429:24435 Coq.Lists.SetoidList <> eqlistA ind
R24437:24440 Coq.MSets.MSetList X eq defax
R24467:24478 Coq.MSets.MSetList MakeWithLeibniz isok_iff thm
R24467:24478 Coq.MSets.MSetList MakeWithLeibniz isok_iff thm
R24467:24478 Coq.MSets.MSetList MakeWithLeibniz isok_iff thm
R24535:24538 Coq.MSets.MSetList X lt defax
R24505:24528 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R24535:24538 Coq.MSets.MSetList X lt defax
R24505:24528 Coq.Lists.SetoidList <> SortA_equivlistA_eqlistA thm
R24564:24578 Coq.MSets.MSetList MakeWithLeibniz eq_leibniz_list thm
R24564:24578 Coq.MSets.MSetList MakeWithLeibniz eq_leibniz_list thm
R24623:24649 Coq.Logic.Eqdep_dec <> eq_proofs_unicity thm
R24623:24649 Coq.Logic.Eqdep_dec <> eq_proofs_unicity thm
R24678:24685 Coq.Bool.Bool <> bool_dec thm
R24678:24685 Coq.Bool.Bool <> bool_dec thm
R24712:24726 Coq.MSets.MSetList MakeWithLeibniz <> mod

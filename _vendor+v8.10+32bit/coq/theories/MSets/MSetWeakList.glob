DIGEST 6b1c19e8ece87740c600b62757f3e9e6
FCoq.MSets.MSetWeakList
R855:867 Coq.MSets.MSetInterface <> <> lib
R1220:1232 Coq.Structures.Equalities DecidableType <> mod
R1238:1241 Coq.MSets.MSetInterface WOps <> mod
R1243:1243 Coq.MSets.MSetWeakList X <> modtype
mod 1212:1214 <> Ops
def 1260:1262 Ops elt
R1267:1269 Coq.MSets.MSetWeakList X t defax
def 1285:1285 Ops t
R1290:1293 Coq.Init.Datatypes <> list ind
R1295:1297 Coq.MSets.MSetWeakList Ops elt def
def 1314:1318 Ops empty
R1322:1322 Coq.MSets.MSetWeakList Ops t def
R1327:1329 Coq.Init.Datatypes <> nil constr
def 1346:1353 Ops is_empty
R1360:1360 Coq.MSets.MSetWeakList Ops t def
R1365:1368 Coq.Init.Datatypes <> bool ind
R1376:1376 Coq.MSets.MSetWeakList <> l var
R1393:1397 Coq.Init.Datatypes <> false constr
R1383:1386 Coq.Init.Datatypes <> true constr
def 1412:1414 Ops mem
R1421:1423 Coq.MSets.MSetWeakList Ops elt def
R1431:1431 Coq.MSets.MSetWeakList Ops t def
R1436:1439 Coq.Init.Datatypes <> bool ind
R1454:1454 Coq.MSets.MSetWeakList <> s var
R1467:1469 Coq.Init.Datatypes <> nil constr
R1474:1478 Coq.Init.Datatypes <> false constr
R1487:1490 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1510:1517 Coq.MSets.MSetWeakList X eq_dec defax
R1519:1519 Coq.MSets.MSetWeakList <> x var
R1538:1540 Coq.MSets.MSetWeakList <> mem def
R1542:1542 Coq.MSets.MSetWeakList <> x var
R1528:1531 Coq.Init.Datatypes <> true constr
def 1567:1569 Ops add
R1576:1578 Coq.MSets.MSetWeakList Ops elt def
R1586:1586 Coq.MSets.MSetWeakList Ops t def
R1591:1591 Coq.MSets.MSetWeakList Ops t def
R1606:1606 Coq.MSets.MSetWeakList <> s var
R1619:1621 Coq.Init.Datatypes <> nil constr
R1627:1630 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1626:1626 Coq.MSets.MSetWeakList <> x var
R1631:1633 Coq.Init.Datatypes <> nil constr
R1642:1645 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1662:1669 Coq.MSets.MSetWeakList X eq_dec defax
R1671:1671 Coq.MSets.MSetWeakList <> x var
R1688:1691 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1692:1694 Coq.MSets.MSetWeakList <> add def
R1696:1696 Coq.MSets.MSetWeakList <> x var
R1680:1680 Coq.MSets.MSetWeakList <> s var
def 1723:1731 Ops singleton
R1738:1740 Coq.MSets.MSetWeakList Ops elt def
R1745:1745 Coq.MSets.MSetWeakList Ops t def
R1751:1754 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1750:1750 Coq.MSets.MSetWeakList <> x var
R1755:1757 Coq.Init.Datatypes <> nil constr
def 1772:1777 Ops remove
R1784:1786 Coq.MSets.MSetWeakList Ops elt def
R1794:1794 Coq.MSets.MSetWeakList Ops t def
R1799:1799 Coq.MSets.MSetWeakList Ops t def
R1814:1814 Coq.MSets.MSetWeakList <> s var
R1827:1829 Coq.Init.Datatypes <> nil constr
R1834:1836 Coq.Init.Datatypes <> nil constr
R1845:1848 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1865:1872 Coq.MSets.MSetWeakList X eq_dec defax
R1874:1874 Coq.MSets.MSetWeakList <> x var
R1891:1894 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R1895:1900 Coq.MSets.MSetWeakList <> remove def
R1902:1902 Coq.MSets.MSetWeakList <> x var
def 1929:1932 Ops fold
R1953:1956 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1958:1961 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1962:1962 Coq.MSets.MSetWeakList <> B var
R1957:1957 Coq.MSets.MSetWeakList <> B var
R1950:1952 Coq.MSets.MSetWeakList Ops elt def
R1968:1971 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1973:1976 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1977:1977 Coq.MSets.MSetWeakList <> B var
R1972:1972 Coq.MSets.MSetWeakList <> B var
R1967:1967 Coq.MSets.MSetWeakList Ops t def
R1986:1994 Coq.Lists.List <> fold_left def
R1997:2000 Coq.Program.Basics <> flip def
R2002:2002 Coq.MSets.MSetWeakList <> f var
def 2020:2024 Ops union
R2031:2031 Coq.MSets.MSetWeakList Ops t def
R2037:2040 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2041:2041 Coq.MSets.MSetWeakList Ops t def
R2036:2036 Coq.MSets.MSetWeakList Ops t def
R2046:2049 Coq.MSets.MSetWeakList Ops fold def
R2055:2055 Coq.MSets.MSetWeakList <> s var
R2051:2053 Coq.MSets.MSetWeakList Ops add def
def 2072:2075 Ops diff
R2085:2085 Coq.MSets.MSetWeakList Ops t def
R2090:2090 Coq.MSets.MSetWeakList Ops t def
R2095:2098 Coq.MSets.MSetWeakList Ops fold def
R2110:2110 Coq.MSets.MSetWeakList <> s var
R2107:2108 Coq.MSets.MSetWeakList <> s' var
R2100:2105 Coq.MSets.MSetWeakList Ops remove def
def 2127:2131 Ops inter
R2140:2140 Coq.MSets.MSetWeakList Ops t def
R2145:2145 Coq.MSets.MSetWeakList Ops t def
R2154:2157 Coq.MSets.MSetWeakList Ops fold def
R2206:2208 Coq.Init.Datatypes <> nil constr
R2204:2204 Coq.MSets.MSetWeakList <> s var
R2174:2176 Coq.MSets.MSetWeakList Ops mem def
R2180:2181 Coq.MSets.MSetWeakList <> s' var
R2178:2178 Coq.MSets.MSetWeakList <> x var
R2201:2201 Coq.MSets.MSetWeakList <> s var
R2188:2190 Coq.MSets.MSetWeakList Ops add def
R2194:2194 Coq.MSets.MSetWeakList <> s var
R2192:2192 Coq.MSets.MSetWeakList <> x var
def 2225:2230 Ops subset
R2240:2240 Coq.MSets.MSetWeakList Ops t def
R2245:2248 Coq.Init.Datatypes <> bool ind
R2253:2260 Coq.MSets.MSetWeakList Ops is_empty def
R2263:2266 Coq.MSets.MSetWeakList Ops diff def
R2270:2271 Coq.MSets.MSetWeakList <> s' var
R2268:2268 Coq.MSets.MSetWeakList <> s var
def 2289:2293 Ops equal
R2303:2303 Coq.MSets.MSetWeakList Ops t def
R2308:2311 Coq.Init.Datatypes <> bool ind
R2316:2319 Coq.Init.Datatypes <> andb def
R2336:2341 Coq.MSets.MSetWeakList Ops subset def
R2346:2346 Coq.MSets.MSetWeakList <> s var
R2343:2344 Coq.MSets.MSetWeakList <> s' var
R2322:2327 Coq.MSets.MSetWeakList Ops subset def
R2331:2332 Coq.MSets.MSetWeakList <> s' var
R2329:2329 Coq.MSets.MSetWeakList <> s var
def 2362:2367 Ops filter
R2377:2380 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2381:2384 Coq.Init.Datatypes <> bool ind
R2374:2376 Coq.MSets.MSetWeakList Ops elt def
R2392:2392 Coq.MSets.MSetWeakList Ops t def
R2397:2397 Coq.MSets.MSetWeakList Ops t def
R2412:2412 Coq.MSets.MSetWeakList <> s var
R2425:2427 Coq.Init.Datatypes <> nil constr
R2432:2434 Coq.Init.Datatypes <> nil constr
R2443:2446 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2455:2455 Coq.MSets.MSetWeakList <> f var
R2485:2490 Coq.MSets.MSetWeakList <> filter def
R2492:2492 Coq.MSets.MSetWeakList <> f var
R2465:2468 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2469:2474 Coq.MSets.MSetWeakList <> filter def
R2476:2476 Coq.MSets.MSetWeakList <> f var
def 2517:2523 Ops for_all
R2533:2536 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2537:2540 Coq.Init.Datatypes <> bool ind
R2530:2532 Coq.MSets.MSetWeakList Ops elt def
R2548:2548 Coq.MSets.MSetWeakList Ops t def
R2553:2556 Coq.Init.Datatypes <> bool ind
R2571:2571 Coq.MSets.MSetWeakList <> s var
R2584:2586 Coq.Init.Datatypes <> nil constr
R2591:2594 Coq.Init.Datatypes <> true constr
R2603:2606 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2615:2615 Coq.MSets.MSetWeakList <> f var
R2641:2645 Coq.Init.Datatypes <> false constr
R2624:2630 Coq.MSets.MSetWeakList <> for_all def
R2632:2632 Coq.MSets.MSetWeakList <> f var
def 2668:2674 Ops exists_
R2684:2687 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2688:2691 Coq.Init.Datatypes <> bool ind
R2681:2683 Coq.MSets.MSetWeakList Ops elt def
R2699:2699 Coq.MSets.MSetWeakList Ops t def
R2704:2707 Coq.Init.Datatypes <> bool ind
R2722:2722 Coq.MSets.MSetWeakList <> s var
R2735:2737 Coq.Init.Datatypes <> nil constr
R2742:2746 Coq.Init.Datatypes <> false constr
R2755:2758 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2767:2767 Coq.MSets.MSetWeakList <> f var
R2786:2792 Coq.MSets.MSetWeakList <> exists_ def
R2794:2794 Coq.MSets.MSetWeakList <> f var
R2776:2779 Coq.Init.Datatypes <> true constr
def 2819:2827 Ops partition
R2837:2840 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2841:2844 Coq.Init.Datatypes <> bool ind
R2834:2836 Coq.MSets.MSetWeakList Ops elt def
R2852:2852 Coq.MSets.MSetWeakList Ops t def
R2858:2860 Coq.Init.Datatypes <> ::type_scope:x_'*'_x not
R2857:2857 Coq.MSets.MSetWeakList Ops t def
R2861:2861 Coq.MSets.MSetWeakList Ops t def
R2876:2876 Coq.MSets.MSetWeakList <> s var
R2889:2891 Coq.Init.Datatypes <> nil constr
R2896:2896 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2900:2901 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2905:2905 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2897:2899 Coq.Init.Datatypes <> nil constr
R2902:2904 Coq.Init.Datatypes <> nil constr
R2914:2917 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2947:2955 Coq.MSets.MSetWeakList <> partition def
R2957:2957 Coq.MSets.MSetWeakList <> f var
R2975:2975 Coq.MSets.MSetWeakList <> f var
R3003:3003 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3006:3007 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3015:3015 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R3004:3005 Coq.MSets.MSetWeakList <> s1 var
R3009:3012 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3013:3014 Coq.MSets.MSetWeakList <> s2 var
R2984:2984 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2992:2993 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2996:2996 Coq.Init.Datatypes <> ::core_scope:'('_x_','_x_','_'..'_','_x_')' not
R2986:2989 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R2990:2991 Coq.MSets.MSetWeakList <> s1 var
R2994:2995 Coq.MSets.MSetWeakList <> s2 var
def 3040:3047 Ops cardinal
R3054:3054 Coq.MSets.MSetWeakList Ops t def
R3059:3061 Coq.Init.Datatypes <> nat ind
R3066:3071 Coq.Init.Datatypes <> length def
R3073:3073 Coq.MSets.MSetWeakList <> s var
def 3090:3097 Ops elements
R3104:3104 Coq.MSets.MSetWeakList Ops t def
R3109:3112 Coq.Init.Datatypes <> list ind
R3114:3116 Coq.MSets.MSetWeakList Ops elt def
R3121:3121 Coq.MSets.MSetWeakList <> s var
def 3138:3143 Ops choose
R3150:3150 Coq.MSets.MSetWeakList Ops t def
R3155:3160 Coq.Init.Datatypes <> option ind
R3162:3164 Coq.MSets.MSetWeakList Ops elt def
R3180:3180 Coq.MSets.MSetWeakList <> s var
R3195:3197 Coq.Init.Datatypes <> nil constr
R3202:3205 Coq.Init.Datatypes <> None constr
R3216:3217 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3223:3226 Coq.Init.Datatypes <> Some constr
R3245:3247 Coq.MSets.MSetWeakList Ops <> mod
R3320:3332 Coq.Structures.Equalities DecidableType <> mod
R3338:3345 Coq.MSets.MSetInterface WRawSets <> mod
R3347:3347 Coq.MSets.MSetWeakList X <> modtype
mod 3309:3315 <> MakeRaw
R3360:3362 Coq.MSets.MSetWeakList Ops <> modtype
R3364:3364 Coq.MSets.MSetWeakList X <> modtype
sec 3378:3389 MakeRaw ForNotations
syndef 3403:3407 MakeRaw NoDup
R3413:3418 Coq.Lists.SetoidList <> NoDupA ind
R3420:3423 Coq.MSets.MSetWeakList X eq defax
syndef 3438:3439 MakeRaw In
R3445:3447 Coq.Lists.SetoidList <> InA ind
R3449:3452 Coq.MSets.MSetWeakList X eq defax
var 3521:3523 MakeRaw.ForNotations eqr
R3529:3549 Coq.Classes.RelationClasses <> Equivalence_Reflexive meth
R3555:3564 Coq.MSets.MSetWeakList X eq_equiv prfax
var 3574:3578 MakeRaw.ForNotations eqsym
R3584:3604 Coq.Classes.RelationClasses <> Equivalence_Symmetric meth
R3610:3619 Coq.MSets.MSetWeakList X eq_equiv prfax
var 3629:3635 MakeRaw.ForNotations eqtrans
R3641:3662 Coq.Classes.RelationClasses <> Equivalence_Transitive meth
R3668:3677 Coq.MSets.MSetWeakList X eq_equiv prfax
def 3761:3764 MakeRaw IsOk
R3769:3773 Coq.MSets.MSetWeakList MakeRaw NoDup syndef
ind 3785:3786 MakeRaw Ok
constr 3804:3805 MakeRaw ok
rec 3785:3786 MakeRaw Ok
proj 3804:3805 MakeRaw ok
R3791:3791 Coq.MSets.MSetWeakList MakeRaw t def
R3809:3813 Coq.MSets.MSetWeakList MakeRaw NoDup syndef
R3815:3815 Coq.MSets.MSetWeakList <> s var
R3833:3834 Coq.MSets.MSetWeakList MakeRaw Ok class
inst 3882:3889 MakeRaw NoDup_Ok
R3899:3903 Coq.MSets.MSetWeakList MakeRaw NoDup syndef
R3905:3905 Coq.MSets.MSetWeakList <> s var
R3910:3911 Coq.MSets.MSetWeakList MakeRaw Ok class
R3913:3913 Coq.MSets.MSetWeakList <> s var
R3920:3921 Coq.MSets.MSetWeakList MakeRaw ok def
R3973:3974 Coq.MSets.MSetWeakList MakeRaw Ok class
R3978:3981 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R3973:3974 Coq.MSets.MSetWeakList MakeRaw Ok class
R3978:3981 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4026:4027 Coq.MSets.MSetWeakList MakeRaw Ok class
R4029:4031 Coq.Init.Datatypes <> nil constr
R4026:4027 Coq.MSets.MSetWeakList MakeRaw Ok class
R4029:4031 Coq.Init.Datatypes <> nil constr
R4064:4068 Coq.MSets.MSetWeakList MakeRaw NoDup syndef
R4064:4068 Coq.MSets.MSetWeakList MakeRaw NoDup syndef
R4089:4090 Coq.MSets.MSetWeakList MakeRaw Ok class
def 4222:4225 MakeRaw isok
R4238:4238 Coq.MSets.MSetWeakList <> l var
R4250:4252 Coq.Init.Datatypes <> nil constr
R4257:4260 Coq.Init.Datatypes <> true constr
R4268:4269 Coq.Init.Datatypes <> ::list_scope:x_'::'_x not
R4289:4292 Coq.Init.Datatypes <> ::bool_scope:x_'&&'_x not
R4275:4278 Coq.Init.Datatypes <> negb def
R4281:4283 Coq.MSets.MSetWeakList MakeRaw mem def
R4287:4287 Coq.MSets.MSetWeakList <> l var
R4293:4296 Coq.MSets.MSetWeakList <> isok def
R4298:4298 Coq.MSets.MSetWeakList <> l var
def 4321:4325 MakeRaw Equal
R4346:4348 Coq.MSets.MSetWeakList MakeRaw elt def
R4357:4361 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R4351:4352 Coq.MSets.MSetWeakList MakeRaw In syndef
R4356:4356 Coq.MSets.MSetWeakList <> s var
R4354:4354 Coq.MSets.MSetWeakList <> a var
R4362:4363 Coq.MSets.MSetWeakList MakeRaw In syndef
R4367:4368 Coq.MSets.MSetWeakList <> s' var
R4365:4365 Coq.MSets.MSetWeakList <> a var
def 4384:4389 MakeRaw Subset
R4410:4412 Coq.MSets.MSetWeakList MakeRaw elt def
R4421:4424 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4425:4426 Coq.MSets.MSetWeakList MakeRaw In syndef
R4430:4431 Coq.MSets.MSetWeakList <> s' var
R4428:4428 Coq.MSets.MSetWeakList <> a var
R4415:4416 Coq.MSets.MSetWeakList MakeRaw In syndef
R4420:4420 Coq.MSets.MSetWeakList <> s var
R4418:4418 Coq.MSets.MSetWeakList <> a var
def 4447:4451 MakeRaw Empty
R4469:4471 Coq.MSets.MSetWeakList MakeRaw elt def
R4474:4475 Coq.Init.Logic <> ::type_scope:'~'_x not
R4476:4477 Coq.MSets.MSetWeakList MakeRaw In syndef
R4481:4481 Coq.MSets.MSetWeakList <> s var
R4479:4479 Coq.MSets.MSetWeakList <> a var
def 4497:4503 MakeRaw For_all
R4513:4516 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4510:4512 Coq.MSets.MSetWeakList MakeRaw elt def
R4544:4547 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4548:4548 Coq.MSets.MSetWeakList <> P var
R4550:4550 Coq.MSets.MSetWeakList <> x var
R4538:4539 Coq.MSets.MSetWeakList MakeRaw In syndef
R4543:4543 Coq.MSets.MSetWeakList <> s var
R4541:4541 Coq.MSets.MSetWeakList <> x var
def 4566:4571 MakeRaw Exists
R4581:4584 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4578:4580 Coq.MSets.MSetWeakList MakeRaw elt def
R4596:4602 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R4604:4605 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R4612:4615 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4606:4607 Coq.MSets.MSetWeakList MakeRaw In syndef
R4611:4611 Coq.MSets.MSetWeakList <> s var
R4609:4609 Coq.MSets.MSetWeakList <> x var
R4616:4616 Coq.MSets.MSetWeakList <> P var
R4618:4618 Coq.MSets.MSetWeakList <> x var
prf 4630:4638 MakeRaw In_compat
R4642:4647 Coq.Classes.Morphisms <> Proper class
R4667:4668 Coq.MSets.MSetWeakList MakeRaw In syndef
R4654:4656 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R4650:4653 Coq.MSets.MSetWeakList X eq defax
R4659:4661 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R4657:4658 Coq.Init.Logic <> eq ind
R4662:4664 Coq.Init.Logic <> iff def
prf 4742:4749 MakeRaw mem_spec
R4766:4767 Coq.MSets.MSetWeakList MakeRaw Ok class
R4769:4769 Coq.MSets.MSetWeakList <> s var
R4790:4794 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R4783:4785 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4776:4778 Coq.MSets.MSetWeakList MakeRaw mem def
R4782:4782 Coq.MSets.MSetWeakList <> s var
R4780:4780 Coq.MSets.MSetWeakList <> x var
R4786:4789 Coq.Init.Datatypes <> true constr
R4795:4796 Coq.MSets.MSetWeakList MakeRaw In syndef
R4800:4800 Coq.MSets.MSetWeakList <> s var
R4798:4798 Coq.MSets.MSetWeakList <> x var
R4890:4897 Coq.MSets.MSetWeakList X eq_dec defax
R4890:4897 Coq.MSets.MSetWeakList X eq_dec defax
prf 4999:5006 MakeRaw isok_iff
R5024:5028 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R5020:5021 Coq.MSets.MSetWeakList MakeRaw Ok class
R5023:5023 Coq.MSets.MSetWeakList <> l var
R5035:5037 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5029:5032 Coq.MSets.MSetWeakList MakeRaw isok def
R5034:5034 Coq.MSets.MSetWeakList <> l var
R5038:5041 Coq.Init.Datatypes <> true constr
R5100:5112 Coq.Bool.Bool <> andb_true_iff thm
R5100:5112 Coq.Bool.Bool <> andb_true_iff thm
R5100:5112 Coq.Bool.Bool <> andb_true_iff thm
R5125:5137 Coq.Bool.Bool <> negb_true_iff thm
R5125:5137 Coq.Bool.Bool <> negb_true_iff thm
R5125:5137 Coq.Bool.Bool <> negb_true_iff thm
R5205:5221 Coq.Bool.Bool <> not_true_is_false thm
R5205:5221 Coq.Bool.Bool <> not_true_is_false thm
R5232:5239 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R5232:5239 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R5232:5239 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R5232:5239 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R5295:5302 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R5295:5302 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R5295:5302 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R5295:5302 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
inst 5349:5355 MakeRaw isok_Ok
R5374:5377 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5378:5379 Coq.MSets.MSetWeakList MakeRaw Ok class
R5381:5381 Coq.MSets.MSetWeakList <> l var
R5367:5369 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5361:5364 Coq.MSets.MSetWeakList MakeRaw isok def
R5366:5366 Coq.MSets.MSetWeakList <> l var
R5370:5373 Coq.Init.Datatypes <> true constr
R5417:5424 Coq.MSets.MSetWeakList MakeRaw isok_iff thm
R5417:5424 Coq.MSets.MSetWeakList MakeRaw isok_iff thm
prf 5449:5456 MakeRaw add_spec
R5475:5475 Coq.MSets.MSetWeakList MakeRaw t def
R5485:5487 Coq.MSets.MSetWeakList MakeRaw elt def
R5496:5497 Coq.MSets.MSetWeakList MakeRaw Ok class
R5499:5499 Coq.MSets.MSetWeakList <> s var
R5522:5526 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R5508:5509 Coq.MSets.MSetWeakList MakeRaw In syndef
R5514:5516 Coq.MSets.MSetWeakList MakeRaw add def
R5520:5520 Coq.MSets.MSetWeakList <> s var
R5518:5518 Coq.MSets.MSetWeakList <> x var
R5511:5511 Coq.MSets.MSetWeakList <> y var
R5535:5538 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R5527:5530 Coq.MSets.MSetWeakList X eq defax
R5534:5534 Coq.MSets.MSetWeakList <> x var
R5532:5532 Coq.MSets.MSetWeakList <> y var
R5539:5540 Coq.MSets.MSetWeakList MakeRaw In syndef
R5544:5544 Coq.MSets.MSetWeakList <> s var
R5542:5542 Coq.MSets.MSetWeakList <> y var
R5621:5628 Coq.MSets.MSetWeakList X eq_dec defax
R5644:5651 Coq.Lists.SetoidList <> InA_cons thm
R5621:5628 Coq.MSets.MSetWeakList X eq_dec defax
R5644:5651 Coq.Lists.SetoidList <> InA_cons thm
R5644:5651 Coq.Lists.SetoidList <> InA_cons thm
R5644:5651 Coq.Lists.SetoidList <> InA_cons thm
R5644:5651 Coq.Lists.SetoidList <> InA_cons thm
inst 5725:5730 MakeRaw add_ok
R5738:5739 Coq.MSets.MSetWeakList MakeRaw Ok class
R5741:5741 Coq.MSets.MSetWeakList <> s var
R5746:5747 Coq.MSets.MSetWeakList MakeRaw Ok class
R5750:5752 Coq.MSets.MSetWeakList MakeRaw add def
R5756:5756 Coq.MSets.MSetWeakList <> s var
R5754:5754 Coq.MSets.MSetWeakList <> x var
R5837:5844 Coq.MSets.MSetWeakList X eq_dec defax
R5837:5844 Coq.MSets.MSetWeakList X eq_dec defax
R5905:5912 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R5905:5912 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R5905:5912 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R5905:5912 Coq.MSets.MSetWeakList MakeRaw add_spec thm
prf 5947:5957 MakeRaw remove_spec
R5976:5976 Coq.MSets.MSetWeakList MakeRaw t def
R5986:5988 Coq.MSets.MSetWeakList MakeRaw elt def
R5997:5998 Coq.MSets.MSetWeakList MakeRaw Ok class
R6000:6000 Coq.MSets.MSetWeakList <> s var
R6026:6030 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R6009:6010 Coq.MSets.MSetWeakList MakeRaw In syndef
R6015:6020 Coq.MSets.MSetWeakList MakeRaw remove def
R6024:6024 Coq.MSets.MSetWeakList <> s var
R6022:6022 Coq.MSets.MSetWeakList <> x var
R6012:6012 Coq.MSets.MSetWeakList <> y var
R6037:6040 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6031:6032 Coq.MSets.MSetWeakList MakeRaw In syndef
R6036:6036 Coq.MSets.MSetWeakList <> s var
R6034:6034 Coq.MSets.MSetWeakList <> y var
R6041:6041 Coq.Init.Logic <> ::type_scope:'~'_x not
R6042:6045 Coq.MSets.MSetWeakList X eq defax
R6049:6049 Coq.MSets.MSetWeakList <> x var
R6047:6047 Coq.MSets.MSetWeakList <> y var
R6126:6133 Coq.MSets.MSetWeakList X eq_dec defax
R6161:6168 Coq.Lists.SetoidList <> InA_cons thm
R6126:6133 Coq.MSets.MSetWeakList X eq_dec defax
R6161:6168 Coq.Lists.SetoidList <> InA_cons thm
R6161:6168 Coq.Lists.SetoidList <> InA_cons thm
R6161:6168 Coq.Lists.SetoidList <> InA_cons thm
R6161:6168 Coq.Lists.SetoidList <> InA_cons thm
R6161:6168 Coq.Lists.SetoidList <> InA_cons thm
R6161:6168 Coq.Lists.SetoidList <> InA_cons thm
R6161:6168 Coq.Lists.SetoidList <> InA_cons thm
inst 6319:6327 MakeRaw remove_ok
R6335:6336 Coq.MSets.MSetWeakList MakeRaw Ok class
R6338:6338 Coq.MSets.MSetWeakList <> s var
R6343:6344 Coq.MSets.MSetWeakList MakeRaw Ok class
R6347:6352 Coq.MSets.MSetWeakList MakeRaw remove def
R6356:6356 Coq.MSets.MSetWeakList <> s var
R6354:6354 Coq.MSets.MSetWeakList <> x var
R6418:6425 Coq.MSets.MSetWeakList X eq_dec defax
R6418:6425 Coq.MSets.MSetWeakList X eq_dec defax
R6471:6481 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
R6471:6481 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
R6471:6481 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
R6471:6481 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
prf 6511:6522 MakeRaw singleton_ok
R6537:6539 Coq.MSets.MSetWeakList MakeRaw elt def
R6542:6543 Coq.MSets.MSetWeakList MakeRaw Ok class
R6546:6554 Coq.MSets.MSetWeakList MakeRaw singleton def
R6556:6556 Coq.MSets.MSetWeakList <> x var
R6578:6586 Coq.MSets.MSetWeakList MakeRaw singleton def
prf 6644:6657 MakeRaw singleton_spec
R6674:6676 Coq.MSets.MSetWeakList MakeRaw elt def
R6697:6701 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R6679:6680 Coq.MSets.MSetWeakList MakeRaw In syndef
R6685:6693 Coq.MSets.MSetWeakList MakeRaw singleton def
R6695:6695 Coq.MSets.MSetWeakList <> x var
R6682:6682 Coq.MSets.MSetWeakList <> y var
R6702:6705 Coq.MSets.MSetWeakList X eq defax
R6709:6709 Coq.MSets.MSetWeakList <> x var
R6707:6707 Coq.MSets.MSetWeakList <> y var
R6730:6738 Coq.MSets.MSetWeakList MakeRaw singleton def
prf 6802:6809 MakeRaw empty_ok
R6813:6814 Coq.MSets.MSetWeakList MakeRaw Ok class
R6816:6820 Coq.MSets.MSetWeakList MakeRaw empty def
R6841:6845 Coq.MSets.MSetWeakList MakeRaw empty def
prf 6878:6887 MakeRaw empty_spec
R6891:6895 Coq.MSets.MSetWeakList MakeRaw Empty def
R6897:6901 Coq.MSets.MSetWeakList MakeRaw empty def
R6922:6926 Coq.MSets.MSetWeakList MakeRaw Empty def
R6929:6933 Coq.MSets.MSetWeakList MakeRaw empty def
prf 6970:6982 MakeRaw is_empty_spec
R6997:6997 Coq.MSets.MSetWeakList MakeRaw t def
R7017:7021 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R7010:7012 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7000:7007 Coq.MSets.MSetWeakList MakeRaw is_empty def
R7009:7009 Coq.MSets.MSetWeakList <> s var
R7013:7016 Coq.Init.Datatypes <> true constr
R7022:7026 Coq.MSets.MSetWeakList MakeRaw Empty def
R7028:7028 Coq.MSets.MSetWeakList <> s var
R7049:7053 Coq.MSets.MSetWeakList MakeRaw Empty def
prf 7162:7175 MakeRaw elements_spec1
R7191:7191 Coq.MSets.MSetWeakList MakeRaw t def
R7199:7201 Coq.MSets.MSetWeakList MakeRaw elt def
R7222:7226 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R7205:7206 Coq.MSets.MSetWeakList MakeRaw In syndef
R7211:7218 Coq.MSets.MSetWeakList MakeRaw elements def
R7220:7220 Coq.MSets.MSetWeakList <> s var
R7208:7208 Coq.MSets.MSetWeakList <> x var
R7227:7228 Coq.MSets.MSetWeakList MakeRaw In syndef
R7232:7232 Coq.MSets.MSetWeakList <> s var
R7230:7230 Coq.MSets.MSetWeakList <> x var
R7253:7260 Coq.MSets.MSetWeakList MakeRaw elements def
prf 7290:7304 MakeRaw elements_spec2w
R7320:7320 Coq.MSets.MSetWeakList MakeRaw t def
R7329:7330 Coq.MSets.MSetWeakList MakeRaw Ok class
R7332:7332 Coq.MSets.MSetWeakList <> s var
R7336:7340 Coq.MSets.MSetWeakList MakeRaw NoDup syndef
R7343:7350 Coq.MSets.MSetWeakList MakeRaw elements def
R7352:7352 Coq.MSets.MSetWeakList <> s var
R7374:7381 Coq.MSets.MSetWeakList MakeRaw elements def
prf 7406:7414 MakeRaw fold_spec
R7433:7433 Coq.MSets.MSetWeakList MakeRaw t def
R7452:7452 Coq.MSets.MSetWeakList <> A var
R7463:7466 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7468:7471 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7472:7472 Coq.MSets.MSetWeakList <> A var
R7467:7467 Coq.MSets.MSetWeakList <> A var
R7460:7462 Coq.MSets.MSetWeakList MakeRaw elt def
R7489:7491 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7479:7482 Coq.MSets.MSetWeakList MakeRaw fold def
R7488:7488 Coq.MSets.MSetWeakList <> i var
R7486:7486 Coq.MSets.MSetWeakList <> s var
R7484:7484 Coq.MSets.MSetWeakList <> f var
R7492:7500 Coq.Lists.List <> fold_left def
R7524:7524 Coq.MSets.MSetWeakList <> i var
R7512:7519 Coq.MSets.MSetWeakList MakeRaw elements def
R7521:7521 Coq.MSets.MSetWeakList <> s var
R7503:7506 Coq.Program.Basics <> flip def
R7508:7508 Coq.MSets.MSetWeakList <> f var
inst 7577:7584 MakeRaw union_ok
R7602:7603 Coq.MSets.MSetWeakList MakeRaw Ok class
R7605:7605 Coq.MSets.MSetWeakList <> s var
R7608:7609 Coq.MSets.MSetWeakList MakeRaw Ok class
R7611:7612 Coq.MSets.MSetWeakList <> s' var
R7616:7617 Coq.MSets.MSetWeakList MakeRaw Ok class
R7620:7624 Coq.MSets.MSetWeakList MakeRaw union def
R7628:7629 Coq.MSets.MSetWeakList <> s' var
R7626:7626 Coq.MSets.MSetWeakList <> s var
R7690:7693 Coq.Program.Basics <> flip def
prf 7725:7734 MakeRaw union_spec
R7756:7756 Coq.MSets.MSetWeakList MakeRaw t def
R7764:7766 Coq.MSets.MSetWeakList MakeRaw elt def
R7775:7776 Coq.MSets.MSetWeakList MakeRaw Ok class
R7778:7778 Coq.MSets.MSetWeakList <> s var
R7788:7789 Coq.MSets.MSetWeakList MakeRaw Ok class
R7791:7792 Coq.MSets.MSetWeakList <> s' var
R7816:7820 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R7799:7800 Coq.MSets.MSetWeakList MakeRaw In syndef
R7805:7809 Coq.MSets.MSetWeakList MakeRaw union def
R7813:7814 Coq.MSets.MSetWeakList <> s' var
R7811:7811 Coq.MSets.MSetWeakList <> s var
R7802:7802 Coq.MSets.MSetWeakList <> x var
R7827:7830 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R7821:7822 Coq.MSets.MSetWeakList MakeRaw In syndef
R7826:7826 Coq.MSets.MSetWeakList <> s var
R7824:7824 Coq.MSets.MSetWeakList <> x var
R7831:7832 Coq.MSets.MSetWeakList MakeRaw In syndef
R7836:7837 Coq.MSets.MSetWeakList <> s' var
R7834:7834 Coq.MSets.MSetWeakList <> x var
R7883:7886 Coq.Program.Basics <> flip def
R7941:7948 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R7951:7958 Coq.Lists.SetoidList <> InA_cons thm
R7941:7948 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R7941:7948 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R7941:7948 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R7951:7958 Coq.Lists.SetoidList <> InA_cons thm
R7951:7958 Coq.Lists.SetoidList <> InA_cons thm
inst 7998:8005 MakeRaw inter_ok
R8014:8015 Coq.MSets.MSetWeakList MakeRaw Ok class
R8017:8017 Coq.MSets.MSetWeakList <> s var
R8020:8021 Coq.MSets.MSetWeakList MakeRaw Ok class
R8023:8024 Coq.MSets.MSetWeakList <> s' var
R8029:8030 Coq.MSets.MSetWeakList MakeRaw Ok class
R8033:8037 Coq.MSets.MSetWeakList MakeRaw inter def
R8041:8042 Coq.MSets.MSetWeakList <> s' var
R8039:8039 Coq.MSets.MSetWeakList <> s var
R8064:8068 Coq.MSets.MSetWeakList MakeRaw inter def
R8071:8074 Coq.MSets.MSetWeakList MakeRaw fold def
R8077:8080 Coq.Program.Basics <> flip def
R8097:8099 Coq.Init.Datatypes <> nil constr
R8105:8107 Coq.MSets.MSetWeakList MakeRaw elt def
R8097:8099 Coq.Init.Datatypes <> nil constr
R8105:8107 Coq.MSets.MSetWeakList MakeRaw elt def
R8129:8130 Coq.MSets.MSetWeakList MakeRaw Ok class
R8129:8130 Coq.MSets.MSetWeakList MakeRaw Ok class
R8260:8262 Coq.MSets.MSetWeakList MakeRaw mem def
R8260:8262 Coq.MSets.MSetWeakList MakeRaw mem def
prf 8300:8309 MakeRaw inter_spec
R8332:8332 Coq.MSets.MSetWeakList MakeRaw t def
R8340:8342 Coq.MSets.MSetWeakList MakeRaw elt def
R8351:8352 Coq.MSets.MSetWeakList MakeRaw Ok class
R8354:8354 Coq.MSets.MSetWeakList <> s var
R8364:8365 Coq.MSets.MSetWeakList MakeRaw Ok class
R8367:8368 Coq.MSets.MSetWeakList <> s' var
R8392:8396 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R8375:8376 Coq.MSets.MSetWeakList MakeRaw In syndef
R8381:8385 Coq.MSets.MSetWeakList MakeRaw inter def
R8389:8390 Coq.MSets.MSetWeakList <> s' var
R8387:8387 Coq.MSets.MSetWeakList <> s var
R8378:8378 Coq.MSets.MSetWeakList <> x var
R8403:8406 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8397:8398 Coq.MSets.MSetWeakList MakeRaw In syndef
R8402:8402 Coq.MSets.MSetWeakList <> s var
R8400:8400 Coq.MSets.MSetWeakList <> x var
R8407:8408 Coq.MSets.MSetWeakList MakeRaw In syndef
R8412:8413 Coq.MSets.MSetWeakList <> s' var
R8410:8410 Coq.MSets.MSetWeakList <> x var
R8434:8438 Coq.MSets.MSetWeakList MakeRaw inter def
R8441:8444 Coq.MSets.MSetWeakList MakeRaw fold def
R8447:8450 Coq.Program.Basics <> flip def
R8475:8477 Coq.Init.Datatypes <> nil constr
R8483:8485 Coq.MSets.MSetWeakList MakeRaw elt def
R8475:8477 Coq.Init.Datatypes <> nil constr
R8483:8485 Coq.MSets.MSetWeakList MakeRaw elt def
R8512:8513 Coq.MSets.MSetWeakList MakeRaw Ok class
R8512:8513 Coq.MSets.MSetWeakList MakeRaw Ok class
R8553:8553 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R8571:8576 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R8560:8563 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8554:8555 Coq.MSets.MSetWeakList MakeRaw In syndef
R8564:8565 Coq.MSets.MSetWeakList MakeRaw In syndef
R8577:8577 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R8595:8599 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R8584:8587 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8578:8579 Coq.MSets.MSetWeakList MakeRaw In syndef
R8588:8589 Coq.MSets.MSetWeakList MakeRaw In syndef
R8600:8601 Coq.MSets.MSetWeakList MakeRaw In syndef
R8553:8553 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R8571:8576 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R8560:8563 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8554:8555 Coq.MSets.MSetWeakList MakeRaw In syndef
R8564:8565 Coq.MSets.MSetWeakList MakeRaw In syndef
R8577:8577 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R8595:8599 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R8584:8587 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R8578:8579 Coq.MSets.MSetWeakList MakeRaw In syndef
R8588:8589 Coq.MSets.MSetWeakList MakeRaw In syndef
R8600:8601 Coq.MSets.MSetWeakList MakeRaw In syndef
R8785:8787 Coq.MSets.MSetWeakList MakeRaw mem def
R8785:8787 Coq.MSets.MSetWeakList MakeRaw mem def
R8822:8829 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R8832:8839 Coq.Lists.SetoidList <> InA_cons thm
R8822:8829 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R8822:8829 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R8822:8829 Coq.MSets.MSetWeakList MakeRaw add_spec thm
R8832:8839 Coq.Lists.SetoidList <> InA_cons thm
R8832:8839 Coq.Lists.SetoidList <> InA_cons thm
R8863:8870 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R8863:8870 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R8863:8870 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R8863:8870 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R8939:8946 Coq.Lists.SetoidList <> InA_cons thm
R8939:8946 Coq.Lists.SetoidList <> InA_cons thm
R8939:8946 Coq.Lists.SetoidList <> InA_cons thm
R8977:8984 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R8977:8984 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R8977:8984 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R8977:8984 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
inst 9037:9043 MakeRaw diff_ok
R9061:9062 Coq.MSets.MSetWeakList MakeRaw Ok class
R9064:9064 Coq.MSets.MSetWeakList <> s var
R9067:9068 Coq.MSets.MSetWeakList MakeRaw Ok class
R9070:9071 Coq.MSets.MSetWeakList <> s' var
R9075:9076 Coq.MSets.MSetWeakList MakeRaw Ok class
R9079:9082 Coq.MSets.MSetWeakList MakeRaw diff def
R9086:9087 Coq.MSets.MSetWeakList <> s' var
R9084:9084 Coq.MSets.MSetWeakList <> s var
R9109:9112 Coq.MSets.MSetWeakList MakeRaw diff def
R9168:9171 Coq.Program.Basics <> flip def
prf 9222:9230 MakeRaw diff_spec
R9253:9253 Coq.MSets.MSetWeakList MakeRaw t def
R9261:9263 Coq.MSets.MSetWeakList MakeRaw elt def
R9272:9273 Coq.MSets.MSetWeakList MakeRaw Ok class
R9275:9275 Coq.MSets.MSetWeakList <> s var
R9285:9286 Coq.MSets.MSetWeakList MakeRaw Ok class
R9288:9289 Coq.MSets.MSetWeakList <> s' var
R9312:9316 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R9296:9297 Coq.MSets.MSetWeakList MakeRaw In syndef
R9302:9305 Coq.MSets.MSetWeakList MakeRaw diff def
R9309:9310 Coq.MSets.MSetWeakList <> s' var
R9307:9307 Coq.MSets.MSetWeakList <> s var
R9299:9299 Coq.MSets.MSetWeakList <> x var
R9323:9326 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R9317:9318 Coq.MSets.MSetWeakList MakeRaw In syndef
R9322:9322 Coq.MSets.MSetWeakList <> s var
R9320:9320 Coq.MSets.MSetWeakList <> x var
R9327:9327 Coq.Init.Logic <> ::type_scope:'~'_x not
R9328:9329 Coq.MSets.MSetWeakList MakeRaw In syndef
R9333:9334 Coq.MSets.MSetWeakList <> s' var
R9331:9331 Coq.MSets.MSetWeakList <> x var
R9355:9358 Coq.MSets.MSetWeakList MakeRaw diff def
R9414:9417 Coq.Program.Basics <> flip def
R9469:9479 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
R9482:9489 Coq.Lists.SetoidList <> InA_cons thm
R9469:9479 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
R9469:9479 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
R9469:9479 Coq.MSets.MSetWeakList MakeRaw remove_spec thm
R9482:9489 Coq.Lists.SetoidList <> InA_cons thm
R9482:9489 Coq.Lists.SetoidList <> InA_cons thm
prf 9519:9529 MakeRaw subset_spec
R9551:9551 Coq.MSets.MSetWeakList MakeRaw t def
R9560:9561 Coq.MSets.MSetWeakList MakeRaw Ok class
R9563:9563 Coq.MSets.MSetWeakList <> s var
R9573:9574 Coq.MSets.MSetWeakList MakeRaw Ok class
R9576:9577 Coq.MSets.MSetWeakList <> s' var
R9602:9606 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R9595:9597 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9584:9589 Coq.MSets.MSetWeakList MakeRaw subset def
R9593:9594 Coq.MSets.MSetWeakList <> s' var
R9591:9591 Coq.MSets.MSetWeakList <> s var
R9598:9601 Coq.Init.Datatypes <> true constr
R9607:9612 Coq.MSets.MSetWeakList MakeRaw Subset def
R9616:9617 Coq.MSets.MSetWeakList <> s' var
R9614:9614 Coq.MSets.MSetWeakList <> s var
R9638:9643 Coq.MSets.MSetWeakList MakeRaw subset def
R9646:9651 Coq.MSets.MSetWeakList MakeRaw Subset def
R9672:9684 Coq.MSets.MSetWeakList MakeRaw is_empty_spec thm
R9672:9684 Coq.MSets.MSetWeakList MakeRaw is_empty_spec thm
R9672:9684 Coq.MSets.MSetWeakList MakeRaw is_empty_spec thm
R9696:9700 Coq.MSets.MSetWeakList MakeRaw Empty def
R9752:9760 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9752:9760 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9752:9760 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9752:9760 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9752:9760 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9793:9800 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R9793:9800 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R9793:9800 Coq.MSets.MSetWeakList MakeRaw mem_spec thm
R9826:9828 Coq.MSets.MSetWeakList MakeRaw mem def
R9826:9828 Coq.MSets.MSetWeakList MakeRaw mem def
R9858:9866 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9858:9866 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9858:9866 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9858:9866 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
R9858:9866 Coq.MSets.MSetWeakList MakeRaw diff_spec thm
prf 9902:9911 MakeRaw equal_spec
R9933:9933 Coq.MSets.MSetWeakList MakeRaw t def
R9942:9943 Coq.MSets.MSetWeakList MakeRaw Ok class
R9945:9945 Coq.MSets.MSetWeakList <> s var
R9955:9956 Coq.MSets.MSetWeakList MakeRaw Ok class
R9958:9959 Coq.MSets.MSetWeakList <> s' var
R9983:9987 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R9976:9978 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9966:9970 Coq.MSets.MSetWeakList MakeRaw equal def
R9974:9975 Coq.MSets.MSetWeakList <> s' var
R9972:9972 Coq.MSets.MSetWeakList <> s var
R9979:9982 Coq.Init.Datatypes <> true constr
R9988:9992 Coq.MSets.MSetWeakList MakeRaw Equal def
R9996:9997 Coq.MSets.MSetWeakList <> s' var
R9994:9994 Coq.MSets.MSetWeakList <> s var
R10018:10022 Coq.MSets.MSetWeakList MakeRaw Equal def
R10025:10029 Coq.MSets.MSetWeakList MakeRaw equal def
R10050:10062 Coq.Bool.Bool <> andb_true_iff thm
R10066:10076 Coq.MSets.MSetWeakList MakeRaw subset_spec thm
R10050:10062 Coq.Bool.Bool <> andb_true_iff thm
R10050:10062 Coq.Bool.Bool <> andb_true_iff thm
R10066:10076 Coq.MSets.MSetWeakList MakeRaw subset_spec thm
R10066:10076 Coq.MSets.MSetWeakList MakeRaw subset_spec thm
R10066:10076 Coq.MSets.MSetWeakList MakeRaw subset_spec thm
R10066:10076 Coq.MSets.MSetWeakList MakeRaw subset_spec thm
R10088:10093 Coq.MSets.MSetWeakList MakeRaw Subset def
def 10165:10176 MakeRaw choose_spec1
R10196:10196 Coq.MSets.MSetWeakList MakeRaw t def
R10204:10206 Coq.MSets.MSetWeakList MakeRaw elt def
R10227:10230 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10231:10232 Coq.MSets.MSetWeakList MakeRaw In syndef
R10236:10236 Coq.MSets.MSetWeakList <> s var
R10234:10234 Coq.MSets.MSetWeakList <> x var
R10218:10220 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10210:10215 Coq.MSets.MSetWeakList MakeRaw choose def
R10217:10217 Coq.MSets.MSetWeakList <> s var
R10221:10224 Coq.Init.Datatypes <> Some constr
R10226:10226 Coq.MSets.MSetWeakList <> x var
def 10317:10328 MakeRaw choose_spec2
R10343:10343 Coq.MSets.MSetWeakList MakeRaw t def
R10361:10364 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10365:10369 Coq.MSets.MSetWeakList MakeRaw Empty def
R10371:10371 Coq.MSets.MSetWeakList <> s var
R10354:10356 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10346:10351 Coq.MSets.MSetWeakList MakeRaw choose def
R10353:10353 Coq.MSets.MSetWeakList <> s var
R10357:10360 Coq.Init.Datatypes <> None constr
prf 10472:10484 MakeRaw cardinal_spec
R10503:10503 Coq.MSets.MSetWeakList MakeRaw t def
R10512:10513 Coq.MSets.MSetWeakList MakeRaw Ok class
R10515:10515 Coq.MSets.MSetWeakList <> s var
R10529:10531 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10519:10526 Coq.MSets.MSetWeakList MakeRaw cardinal def
R10528:10528 Coq.MSets.MSetWeakList <> s var
R10532:10537 Coq.Init.Datatypes <> length def
R10540:10547 Coq.MSets.MSetWeakList MakeRaw elements def
R10549:10549 Coq.MSets.MSetWeakList <> s var
prf 10586:10597 MakeRaw filter_spec'
R10635:10638 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10639:10640 Coq.MSets.MSetWeakList MakeRaw In syndef
R10644:10644 Coq.MSets.MSetWeakList <> s var
R10642:10642 Coq.MSets.MSetWeakList <> x var
R10618:10619 Coq.MSets.MSetWeakList MakeRaw In syndef
R10624:10629 Coq.MSets.MSetWeakList MakeRaw filter def
R10633:10633 Coq.MSets.MSetWeakList <> s var
R10631:10631 Coq.MSets.MSetWeakList <> f var
R10621:10621 Coq.MSets.MSetWeakList <> x var
prf 10768:10778 MakeRaw filter_spec
R10797:10797 Coq.MSets.MSetWeakList MakeRaw t def
R10805:10807 Coq.MSets.MSetWeakList MakeRaw elt def
R10818:10821 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10822:10825 Coq.Init.Datatypes <> bool ind
R10815:10817 Coq.MSets.MSetWeakList MakeRaw elt def
R10852:10859 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10902:10902 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10877:10881 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R10860:10861 Coq.MSets.MSetWeakList MakeRaw In syndef
R10866:10871 Coq.MSets.MSetWeakList MakeRaw filter def
R10875:10875 Coq.MSets.MSetWeakList <> s var
R10873:10873 Coq.MSets.MSetWeakList <> f var
R10863:10863 Coq.MSets.MSetWeakList <> x var
R10888:10891 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R10882:10883 Coq.MSets.MSetWeakList MakeRaw In syndef
R10887:10887 Coq.MSets.MSetWeakList <> s var
R10885:10885 Coq.MSets.MSetWeakList <> x var
R10895:10897 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10892:10892 Coq.MSets.MSetWeakList <> f var
R10894:10894 Coq.MSets.MSetWeakList <> x var
R10898:10901 Coq.Init.Datatypes <> true constr
R10832:10837 Coq.Classes.Morphisms <> Proper class
R10851:10851 Coq.MSets.MSetWeakList <> f var
R10844:10846 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R10840:10843 Coq.MSets.MSetWeakList X eq defax
R10847:10848 Coq.Init.Logic <> eq ind
R10997:11004 Coq.Lists.SetoidList <> InA_cons thm
R10997:11004 Coq.Lists.SetoidList <> InA_cons thm
R10997:11004 Coq.Lists.SetoidList <> InA_cons thm
R10997:11004 Coq.Lists.SetoidList <> InA_cons thm
R10997:11004 Coq.Lists.SetoidList <> InA_cons thm
R10997:11004 Coq.Lists.SetoidList <> InA_cons thm
R10997:11004 Coq.Lists.SetoidList <> InA_cons thm
R10997:11004 Coq.Lists.SetoidList <> InA_cons thm
inst 11132:11140 MakeRaw filter_ok
R11148:11149 Coq.MSets.MSetWeakList MakeRaw Ok class
R11151:11151 Coq.MSets.MSetWeakList <> s var
R11156:11157 Coq.MSets.MSetWeakList MakeRaw Ok class
R11160:11165 Coq.MSets.MSetWeakList MakeRaw filter def
R11169:11169 Coq.MSets.MSetWeakList <> s var
R11167:11167 Coq.MSets.MSetWeakList <> f var
R11295:11306 Coq.MSets.MSetWeakList MakeRaw filter_spec' thm
R11295:11306 Coq.MSets.MSetWeakList MakeRaw filter_spec' thm
prf 11332:11343 MakeRaw for_all_spec
R11362:11362 Coq.MSets.MSetWeakList MakeRaw t def
R11373:11376 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11377:11380 Coq.Init.Datatypes <> bool ind
R11370:11372 Coq.MSets.MSetWeakList MakeRaw elt def
R11407:11414 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11469:11469 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11433:11437 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11426:11428 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11415:11421 Coq.MSets.MSetWeakList MakeRaw for_all def
R11425:11425 Coq.MSets.MSetWeakList <> s var
R11423:11423 Coq.MSets.MSetWeakList <> f var
R11429:11432 Coq.Init.Datatypes <> true constr
R11438:11444 Coq.MSets.MSetWeakList MakeRaw For_all def
R11468:11468 Coq.MSets.MSetWeakList <> s var
R11459:11461 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11456:11456 Coq.MSets.MSetWeakList <> f var
R11458:11458 Coq.MSets.MSetWeakList <> x var
R11462:11465 Coq.Init.Datatypes <> true constr
R11387:11392 Coq.Classes.Morphisms <> Proper class
R11406:11406 Coq.MSets.MSetWeakList <> f var
R11399:11401 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R11395:11398 Coq.MSets.MSetWeakList X eq defax
R11402:11403 Coq.Init.Logic <> eq ind
R11490:11496 Coq.MSets.MSetWeakList MakeRaw For_all def
prf 11743:11753 MakeRaw exists_spec
R11772:11772 Coq.MSets.MSetWeakList MakeRaw t def
R11783:11786 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11787:11790 Coq.Init.Datatypes <> bool ind
R11780:11782 Coq.MSets.MSetWeakList MakeRaw elt def
R11817:11824 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11878:11878 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11843:11847 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R11836:11838 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11825:11831 Coq.MSets.MSetWeakList MakeRaw exists_ def
R11835:11835 Coq.MSets.MSetWeakList <> s var
R11833:11833 Coq.MSets.MSetWeakList <> f var
R11839:11842 Coq.Init.Datatypes <> true constr
R11848:11853 Coq.MSets.MSetWeakList MakeRaw Exists def
R11877:11877 Coq.MSets.MSetWeakList <> s var
R11868:11870 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11865:11865 Coq.MSets.MSetWeakList <> f var
R11867:11867 Coq.MSets.MSetWeakList <> x var
R11871:11874 Coq.Init.Datatypes <> true constr
R11797:11802 Coq.Classes.Morphisms <> Proper class
R11816:11816 Coq.MSets.MSetWeakList <> f var
R11809:11811 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R11805:11808 Coq.MSets.MSetWeakList X eq defax
R11812:11813 Coq.Init.Logic <> eq ind
R11899:11904 Coq.MSets.MSetWeakList MakeRaw Exists def
prf 12163:12177 MakeRaw partition_spec1
R12196:12196 Coq.MSets.MSetWeakList MakeRaw t def
R12207:12210 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12211:12214 Coq.Init.Datatypes <> bool ind
R12204:12206 Coq.MSets.MSetWeakList MakeRaw elt def
R12241:12247 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12248:12252 Coq.MSets.MSetWeakList MakeRaw Equal def
R12277:12282 Coq.MSets.MSetWeakList MakeRaw filter def
R12286:12286 Coq.MSets.MSetWeakList <> s var
R12284:12284 Coq.MSets.MSetWeakList <> f var
R12255:12257 Coq.Init.Datatypes <> fst def
R12260:12268 Coq.MSets.MSetWeakList MakeRaw partition def
R12272:12272 Coq.MSets.MSetWeakList <> s var
R12270:12270 Coq.MSets.MSetWeakList <> f var
R12221:12226 Coq.Classes.Morphisms <> Proper class
R12240:12240 Coq.MSets.MSetWeakList <> f var
R12233:12235 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R12229:12232 Coq.MSets.MSetWeakList X eq defax
R12236:12237 Coq.Init.Logic <> eq ind
R12341:12345 Coq.MSets.MSetWeakList MakeRaw Equal def
R12432:12440 Coq.MSets.MSetWeakList MakeRaw partition def
R12432:12440 Coq.MSets.MSetWeakList MakeRaw partition def
prf 12560:12574 MakeRaw partition_spec2
R12593:12593 Coq.MSets.MSetWeakList MakeRaw t def
R12604:12607 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12608:12611 Coq.Init.Datatypes <> bool ind
R12601:12603 Coq.MSets.MSetWeakList MakeRaw elt def
R12638:12644 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12645:12649 Coq.MSets.MSetWeakList MakeRaw Equal def
R12674:12679 Coq.MSets.MSetWeakList MakeRaw filter def
R12703:12703 Coq.MSets.MSetWeakList <> s var
R12691:12694 Coq.Init.Datatypes <> negb def
R12697:12697 Coq.MSets.MSetWeakList <> f var
R12699:12699 Coq.MSets.MSetWeakList <> x var
R12652:12654 Coq.Init.Datatypes <> snd def
R12657:12665 Coq.MSets.MSetWeakList MakeRaw partition def
R12669:12669 Coq.MSets.MSetWeakList <> s var
R12667:12667 Coq.MSets.MSetWeakList <> f var
R12618:12623 Coq.Classes.Morphisms <> Proper class
R12637:12637 Coq.MSets.MSetWeakList <> f var
R12630:12632 Coq.Classes.Morphisms ProperNotations ::signature_scope:x_'==>'_x not
R12626:12629 Coq.MSets.MSetWeakList X eq defax
R12633:12634 Coq.Init.Logic <> eq ind
R12758:12762 Coq.MSets.MSetWeakList MakeRaw Equal def
R12849:12857 Coq.MSets.MSetWeakList MakeRaw partition def
R12849:12857 Coq.MSets.MSetWeakList MakeRaw partition def
prf 12977:12990 MakeRaw partition_ok1'
R13009:13009 Coq.MSets.MSetWeakList MakeRaw t def
R13018:13019 Coq.MSets.MSetWeakList MakeRaw Ok class
R13021:13021 Coq.MSets.MSetWeakList <> s var
R13032:13035 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13036:13039 Coq.Init.Datatypes <> bool ind
R13029:13031 Coq.MSets.MSetWeakList MakeRaw elt def
R13044:13046 Coq.MSets.MSetWeakList MakeRaw elt def
R13080:13083 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13084:13085 Coq.MSets.MSetWeakList MakeRaw In syndef
R13089:13089 Coq.MSets.MSetWeakList <> s var
R13087:13087 Coq.MSets.MSetWeakList <> x var
R13054:13055 Coq.MSets.MSetWeakList MakeRaw In syndef
R13060:13062 Coq.Init.Datatypes <> fst def
R13065:13073 Coq.MSets.MSetWeakList MakeRaw partition def
R13077:13077 Coq.MSets.MSetWeakList <> s var
R13075:13075 Coq.MSets.MSetWeakList <> f var
R13057:13057 Coq.MSets.MSetWeakList <> x var
R13197:13205 Coq.MSets.MSetWeakList MakeRaw partition def
R13197:13205 Coq.MSets.MSetWeakList MakeRaw partition def
R13197:13205 Coq.MSets.MSetWeakList MakeRaw partition def
prf 13274:13287 MakeRaw partition_ok2'
R13306:13306 Coq.MSets.MSetWeakList MakeRaw t def
R13315:13316 Coq.MSets.MSetWeakList MakeRaw Ok class
R13318:13318 Coq.MSets.MSetWeakList <> s var
R13329:13332 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13333:13336 Coq.Init.Datatypes <> bool ind
R13326:13328 Coq.MSets.MSetWeakList MakeRaw elt def
R13341:13343 Coq.MSets.MSetWeakList MakeRaw elt def
R13377:13380 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13381:13382 Coq.MSets.MSetWeakList MakeRaw In syndef
R13386:13386 Coq.MSets.MSetWeakList <> s var
R13384:13384 Coq.MSets.MSetWeakList <> x var
R13351:13352 Coq.MSets.MSetWeakList MakeRaw In syndef
R13357:13359 Coq.Init.Datatypes <> snd def
R13362:13370 Coq.MSets.MSetWeakList MakeRaw partition def
R13374:13374 Coq.MSets.MSetWeakList <> s var
R13372:13372 Coq.MSets.MSetWeakList <> f var
R13354:13354 Coq.MSets.MSetWeakList <> x var
R13494:13502 Coq.MSets.MSetWeakList MakeRaw partition def
R13494:13502 Coq.MSets.MSetWeakList MakeRaw partition def
R13494:13502 Coq.MSets.MSetWeakList MakeRaw partition def
inst 13581:13593 MakeRaw partition_ok1
R13610:13611 Coq.MSets.MSetWeakList MakeRaw Ok class
R13613:13613 Coq.MSets.MSetWeakList <> s var
R13617:13618 Coq.MSets.MSetWeakList MakeRaw Ok class
R13621:13623 Coq.Init.Datatypes <> fst def
R13626:13634 Coq.MSets.MSetWeakList MakeRaw partition def
R13638:13638 Coq.MSets.MSetWeakList <> s var
R13636:13636 Coq.MSets.MSetWeakList <> f var
R13733:13746 Coq.MSets.MSetWeakList MakeRaw partition_ok1' thm
R13733:13746 Coq.MSets.MSetWeakList MakeRaw partition_ok1' thm
R13804:13812 Coq.MSets.MSetWeakList MakeRaw partition def
R13804:13812 Coq.MSets.MSetWeakList MakeRaw partition def
R13804:13812 Coq.MSets.MSetWeakList MakeRaw partition def
inst 13873:13885 MakeRaw partition_ok2
R13902:13903 Coq.MSets.MSetWeakList MakeRaw Ok class
R13905:13905 Coq.MSets.MSetWeakList <> s var
R13909:13910 Coq.MSets.MSetWeakList MakeRaw Ok class
R13913:13915 Coq.Init.Datatypes <> snd def
R13918:13926 Coq.MSets.MSetWeakList MakeRaw partition def
R13930:13930 Coq.MSets.MSetWeakList <> s var
R13928:13928 Coq.MSets.MSetWeakList <> f var
R14025:14038 Coq.MSets.MSetWeakList MakeRaw partition_ok2' thm
R14025:14038 Coq.MSets.MSetWeakList MakeRaw partition_ok2' thm
R14096:14104 Coq.MSets.MSetWeakList MakeRaw partition def
R14096:14104 Coq.MSets.MSetWeakList MakeRaw partition def
R14096:14104 Coq.MSets.MSetWeakList MakeRaw partition def
R14153:14164 Coq.MSets.MSetWeakList MakeRaw.ForNotations <> sec
def 14181:14182 MakeRaw In
R14187:14189 Coq.Lists.SetoidList <> InA ind
R14191:14194 Coq.MSets.MSetWeakList X eq defax
def 14210:14211 MakeRaw eq
R14216:14220 Coq.MSets.MSetWeakList MakeRaw Equal def
inst 14234:14241 MakeRaw eq_equiv
R14245:14255 Coq.Classes.RelationClasses <> Equivalence class
R14257:14258 Coq.MSets.MSetWeakList MakeRaw eq def
R14271:14277 Coq.MSets.MSetWeakList MakeRaw <> mod
R14463:14475 Coq.Structures.Equalities DecidableType <> mod
R14481:14485 Coq.MSets.MSetInterface WSets <> mod
R14504:14504 Coq.MSets.MSetWeakList X <> modtype
mod 14454:14457 <> Make
R14522:14528 Coq.MSets.MSetWeakList MakeRaw <> modtype
R14530:14530 Coq.MSets.MSetWeakList X <> modtype
mod 14515:14517 <> Make.Raw
R14542:14550 Coq.MSets.MSetInterface WRaw2Sets <> modtype
R14552:14552 Coq.MSets.MSetWeakList X <> modtype
R14554:14556 Coq.MSets.MSetWeakList Make.Raw <> modtype
R14563:14566 Coq.MSets.MSetWeakList Make <> mod
